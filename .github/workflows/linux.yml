name: Linux Build and Test

on:
  push:
    branches:
    - 'main'
    tags:
    - 'v*'
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches:
    - '*'
    paths-ignore:
    - 'docs/**'
    - '.github/workflows/docs_deploy.yml'
  workflow_dispatch:

jobs:
  check-docker-changes:
    name: Check Docker Changes
    runs-on: ubuntu-24.04
    outputs:
      docker_changed: ${{ steps.set-any-changed.outputs.docker_changed }}
      docker_tag: ${{ steps.set-docker-tag.outputs.docker_tag}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: check-changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files: docker/**
          since_last_remote_commit: true
      - name: List all changed files
        id: set-any-changed
        run: |
          echo "docker_changed=${{ steps.check-changes.outputs.any_changed }}" >> $GITHUB_OUTPUT
      - name: Set docker tag
        id: set-docker-tag
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ steps.check-changes.outputs.any_changed }}" = "true" ]; then
            echo "docker_tag=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "docker_tag=latest" >> $GITHUB_OUTPUT
          fi

  update-docker-images:
    name: Update Docker Images
    needs: check-docker-changes
    if: needs.check-docker-changes.outputs.docker_changed == 'true'
    uses: ./.github/workflows/docker.yml
    secrets: inherit

  coverage:
    # Use 22.04 for now because 24.04 throws a 'ERROR: mismatched end line ...'
    name: Coverage (ubuntu-22.04)
    needs: [check-docker-changes, update-docker-images]
    if: always() && needs.check-docker-changes.result == 'success'
    runs-on: ubuntu-24.04
    container:
      image: docker.io/mavsdk/mavsdk-ubuntu-22.04:${{ needs.check-docker-changes.outputs.docker_tag }}
      options: --privileged --ulimit core=-1 --security-opt seccomp=unconfined
    env:
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: git permission workaround
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory /github/workspace
      - name: git get version tags
        run: git fetch --tags
      - name: configure core dumps
        run: |
          ulimit -c unlimited
          echo '/tmp/core.%h.%e.%t' | sudo tee /proc/sys/kernel/core_pattern
          echo 'Core dump pattern set to:'
          cat /proc/sys/kernel/core_pattern
      - uses: actions/cache@v4
        id: cache
        with:
          path: ./build/third_party/install
          key: ${{ github.job }}-${{ hashFiles('./third_party/**') }}
      - name: disable superbuild on cache hit
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          echo "superbuild=-DSUPERBUILD=OFF" >> $GITHUB_ENV
          echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=$(pwd)/build/third_party/install" >> $GITHUB_ENV
      - name: Install lcov
        run: |
          sudo apt-get update && sudo apt-get install -y \
            lcov \
            curl \
            gpg \
            git
      - name: configure
        run: cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Coverage -DWERROR=ON -Bbuild -H.
      - name: build
        run: cmake --build build -j$(nproc)
      - name: unit tests
        run: ./build/src/unit_tests/unit_tests_runner
      - name: system tests
        run: ./build/src/system_tests/system_tests_runner
      - name: upload core dumps
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: core-dumps-coverage-${{ github.run_id }}
          path: /tmp/core.*
          retention-days: 7
          if-no-files-found: ignore
      - name: upload test binary for core dump analysis
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-binary-coverage-${{ github.run_id }}
          path: |
            ./build/src/unit_tests/unit_tests_runner
            ./build/src/system_tests/system_tests_runner
            ./build/src/mavsdk/libmavsdk.so*
            ./build/src/mavsdk_server/src/libmavsdk_server.so*
          retention-days: 7
      - name: run lcov
        run: lcov --capture --directory . --no-external --exclude "*/third_party/*"  --output-file lcov.info
      - name: check size of lcov.info
        run: |
          ls -l lcov.info
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true # optional (default = false)
          files: ./lcov.info # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true # optional (default = false)

