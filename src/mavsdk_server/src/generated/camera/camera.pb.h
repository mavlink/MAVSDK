// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: camera/camera.proto
// Protobuf C++ Version: 5.29.1

#ifndef camera_2fcamera_2eproto_2epb_2eh
#define camera_2fcamera_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_camera_2fcamera_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_camera_2fcamera_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_camera_2fcamera_2eproto;
namespace mavsdk {
namespace rpc {
namespace camera {
class CameraList;
struct CameraListDefaultTypeInternal;
extern CameraListDefaultTypeInternal _CameraList_default_instance_;
class CameraListResponse;
struct CameraListResponseDefaultTypeInternal;
extern CameraListResponseDefaultTypeInternal _CameraListResponse_default_instance_;
class CameraResult;
struct CameraResultDefaultTypeInternal;
extern CameraResultDefaultTypeInternal _CameraResult_default_instance_;
class CaptureInfo;
struct CaptureInfoDefaultTypeInternal;
extern CaptureInfoDefaultTypeInternal _CaptureInfo_default_instance_;
class CaptureInfoResponse;
struct CaptureInfoResponseDefaultTypeInternal;
extern CaptureInfoResponseDefaultTypeInternal _CaptureInfoResponse_default_instance_;
class CurrentSettingsResponse;
struct CurrentSettingsResponseDefaultTypeInternal;
extern CurrentSettingsResponseDefaultTypeInternal _CurrentSettingsResponse_default_instance_;
class CurrentSettingsUpdate;
struct CurrentSettingsUpdateDefaultTypeInternal;
extern CurrentSettingsUpdateDefaultTypeInternal _CurrentSettingsUpdate_default_instance_;
class EulerAngle;
struct EulerAngleDefaultTypeInternal;
extern EulerAngleDefaultTypeInternal _EulerAngle_default_instance_;
class FocusInStartRequest;
struct FocusInStartRequestDefaultTypeInternal;
extern FocusInStartRequestDefaultTypeInternal _FocusInStartRequest_default_instance_;
class FocusInStartResponse;
struct FocusInStartResponseDefaultTypeInternal;
extern FocusInStartResponseDefaultTypeInternal _FocusInStartResponse_default_instance_;
class FocusOutStartRequest;
struct FocusOutStartRequestDefaultTypeInternal;
extern FocusOutStartRequestDefaultTypeInternal _FocusOutStartRequest_default_instance_;
class FocusOutStartResponse;
struct FocusOutStartResponseDefaultTypeInternal;
extern FocusOutStartResponseDefaultTypeInternal _FocusOutStartResponse_default_instance_;
class FocusRangeRequest;
struct FocusRangeRequestDefaultTypeInternal;
extern FocusRangeRequestDefaultTypeInternal _FocusRangeRequest_default_instance_;
class FocusRangeResponse;
struct FocusRangeResponseDefaultTypeInternal;
extern FocusRangeResponseDefaultTypeInternal _FocusRangeResponse_default_instance_;
class FocusStopRequest;
struct FocusStopRequestDefaultTypeInternal;
extern FocusStopRequestDefaultTypeInternal _FocusStopRequest_default_instance_;
class FocusStopResponse;
struct FocusStopResponseDefaultTypeInternal;
extern FocusStopResponseDefaultTypeInternal _FocusStopResponse_default_instance_;
class FormatStorageRequest;
struct FormatStorageRequestDefaultTypeInternal;
extern FormatStorageRequestDefaultTypeInternal _FormatStorageRequest_default_instance_;
class FormatStorageResponse;
struct FormatStorageResponseDefaultTypeInternal;
extern FormatStorageResponseDefaultTypeInternal _FormatStorageResponse_default_instance_;
class GetCurrentSettingsRequest;
struct GetCurrentSettingsRequestDefaultTypeInternal;
extern GetCurrentSettingsRequestDefaultTypeInternal _GetCurrentSettingsRequest_default_instance_;
class GetCurrentSettingsResponse;
struct GetCurrentSettingsResponseDefaultTypeInternal;
extern GetCurrentSettingsResponseDefaultTypeInternal _GetCurrentSettingsResponse_default_instance_;
class GetModeRequest;
struct GetModeRequestDefaultTypeInternal;
extern GetModeRequestDefaultTypeInternal _GetModeRequest_default_instance_;
class GetModeResponse;
struct GetModeResponseDefaultTypeInternal;
extern GetModeResponseDefaultTypeInternal _GetModeResponse_default_instance_;
class GetPossibleSettingOptionsRequest;
struct GetPossibleSettingOptionsRequestDefaultTypeInternal;
extern GetPossibleSettingOptionsRequestDefaultTypeInternal _GetPossibleSettingOptionsRequest_default_instance_;
class GetPossibleSettingOptionsResponse;
struct GetPossibleSettingOptionsResponseDefaultTypeInternal;
extern GetPossibleSettingOptionsResponseDefaultTypeInternal _GetPossibleSettingOptionsResponse_default_instance_;
class GetSettingRequest;
struct GetSettingRequestDefaultTypeInternal;
extern GetSettingRequestDefaultTypeInternal _GetSettingRequest_default_instance_;
class GetSettingResponse;
struct GetSettingResponseDefaultTypeInternal;
extern GetSettingResponseDefaultTypeInternal _GetSettingResponse_default_instance_;
class GetStorageRequest;
struct GetStorageRequestDefaultTypeInternal;
extern GetStorageRequestDefaultTypeInternal _GetStorageRequest_default_instance_;
class GetStorageResponse;
struct GetStorageResponseDefaultTypeInternal;
extern GetStorageResponseDefaultTypeInternal _GetStorageResponse_default_instance_;
class GetVideoStreamInfoRequest;
struct GetVideoStreamInfoRequestDefaultTypeInternal;
extern GetVideoStreamInfoRequestDefaultTypeInternal _GetVideoStreamInfoRequest_default_instance_;
class GetVideoStreamInfoResponse;
struct GetVideoStreamInfoResponseDefaultTypeInternal;
extern GetVideoStreamInfoResponseDefaultTypeInternal _GetVideoStreamInfoResponse_default_instance_;
class Information;
struct InformationDefaultTypeInternal;
extern InformationDefaultTypeInternal _Information_default_instance_;
class ListPhotosRequest;
struct ListPhotosRequestDefaultTypeInternal;
extern ListPhotosRequestDefaultTypeInternal _ListPhotosRequest_default_instance_;
class ListPhotosResponse;
struct ListPhotosResponseDefaultTypeInternal;
extern ListPhotosResponseDefaultTypeInternal _ListPhotosResponse_default_instance_;
class ModeResponse;
struct ModeResponseDefaultTypeInternal;
extern ModeResponseDefaultTypeInternal _ModeResponse_default_instance_;
class ModeUpdate;
struct ModeUpdateDefaultTypeInternal;
extern ModeUpdateDefaultTypeInternal _ModeUpdate_default_instance_;
class Option;
struct OptionDefaultTypeInternal;
extern OptionDefaultTypeInternal _Option_default_instance_;
class Position;
struct PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class PossibleSettingOptionsResponse;
struct PossibleSettingOptionsResponseDefaultTypeInternal;
extern PossibleSettingOptionsResponseDefaultTypeInternal _PossibleSettingOptionsResponse_default_instance_;
class PossibleSettingOptionsUpdate;
struct PossibleSettingOptionsUpdateDefaultTypeInternal;
extern PossibleSettingOptionsUpdateDefaultTypeInternal _PossibleSettingOptionsUpdate_default_instance_;
class Quaternion;
struct QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
class ResetSettingsRequest;
struct ResetSettingsRequestDefaultTypeInternal;
extern ResetSettingsRequestDefaultTypeInternal _ResetSettingsRequest_default_instance_;
class ResetSettingsResponse;
struct ResetSettingsResponseDefaultTypeInternal;
extern ResetSettingsResponseDefaultTypeInternal _ResetSettingsResponse_default_instance_;
class SetModeRequest;
struct SetModeRequestDefaultTypeInternal;
extern SetModeRequestDefaultTypeInternal _SetModeRequest_default_instance_;
class SetModeResponse;
struct SetModeResponseDefaultTypeInternal;
extern SetModeResponseDefaultTypeInternal _SetModeResponse_default_instance_;
class SetSettingRequest;
struct SetSettingRequestDefaultTypeInternal;
extern SetSettingRequestDefaultTypeInternal _SetSettingRequest_default_instance_;
class SetSettingResponse;
struct SetSettingResponseDefaultTypeInternal;
extern SetSettingResponseDefaultTypeInternal _SetSettingResponse_default_instance_;
class Setting;
struct SettingDefaultTypeInternal;
extern SettingDefaultTypeInternal _Setting_default_instance_;
class SettingOptions;
struct SettingOptionsDefaultTypeInternal;
extern SettingOptionsDefaultTypeInternal _SettingOptions_default_instance_;
class StartPhotoIntervalRequest;
struct StartPhotoIntervalRequestDefaultTypeInternal;
extern StartPhotoIntervalRequestDefaultTypeInternal _StartPhotoIntervalRequest_default_instance_;
class StartPhotoIntervalResponse;
struct StartPhotoIntervalResponseDefaultTypeInternal;
extern StartPhotoIntervalResponseDefaultTypeInternal _StartPhotoIntervalResponse_default_instance_;
class StartVideoRequest;
struct StartVideoRequestDefaultTypeInternal;
extern StartVideoRequestDefaultTypeInternal _StartVideoRequest_default_instance_;
class StartVideoResponse;
struct StartVideoResponseDefaultTypeInternal;
extern StartVideoResponseDefaultTypeInternal _StartVideoResponse_default_instance_;
class StartVideoStreamingRequest;
struct StartVideoStreamingRequestDefaultTypeInternal;
extern StartVideoStreamingRequestDefaultTypeInternal _StartVideoStreamingRequest_default_instance_;
class StartVideoStreamingResponse;
struct StartVideoStreamingResponseDefaultTypeInternal;
extern StartVideoStreamingResponseDefaultTypeInternal _StartVideoStreamingResponse_default_instance_;
class StopPhotoIntervalRequest;
struct StopPhotoIntervalRequestDefaultTypeInternal;
extern StopPhotoIntervalRequestDefaultTypeInternal _StopPhotoIntervalRequest_default_instance_;
class StopPhotoIntervalResponse;
struct StopPhotoIntervalResponseDefaultTypeInternal;
extern StopPhotoIntervalResponseDefaultTypeInternal _StopPhotoIntervalResponse_default_instance_;
class StopVideoRequest;
struct StopVideoRequestDefaultTypeInternal;
extern StopVideoRequestDefaultTypeInternal _StopVideoRequest_default_instance_;
class StopVideoResponse;
struct StopVideoResponseDefaultTypeInternal;
extern StopVideoResponseDefaultTypeInternal _StopVideoResponse_default_instance_;
class StopVideoStreamingRequest;
struct StopVideoStreamingRequestDefaultTypeInternal;
extern StopVideoStreamingRequestDefaultTypeInternal _StopVideoStreamingRequest_default_instance_;
class StopVideoStreamingResponse;
struct StopVideoStreamingResponseDefaultTypeInternal;
extern StopVideoStreamingResponseDefaultTypeInternal _StopVideoStreamingResponse_default_instance_;
class Storage;
struct StorageDefaultTypeInternal;
extern StorageDefaultTypeInternal _Storage_default_instance_;
class StorageResponse;
struct StorageResponseDefaultTypeInternal;
extern StorageResponseDefaultTypeInternal _StorageResponse_default_instance_;
class StorageUpdate;
struct StorageUpdateDefaultTypeInternal;
extern StorageUpdateDefaultTypeInternal _StorageUpdate_default_instance_;
class SubscribeCameraListRequest;
struct SubscribeCameraListRequestDefaultTypeInternal;
extern SubscribeCameraListRequestDefaultTypeInternal _SubscribeCameraListRequest_default_instance_;
class SubscribeCaptureInfoRequest;
struct SubscribeCaptureInfoRequestDefaultTypeInternal;
extern SubscribeCaptureInfoRequestDefaultTypeInternal _SubscribeCaptureInfoRequest_default_instance_;
class SubscribeCurrentSettingsRequest;
struct SubscribeCurrentSettingsRequestDefaultTypeInternal;
extern SubscribeCurrentSettingsRequestDefaultTypeInternal _SubscribeCurrentSettingsRequest_default_instance_;
class SubscribeModeRequest;
struct SubscribeModeRequestDefaultTypeInternal;
extern SubscribeModeRequestDefaultTypeInternal _SubscribeModeRequest_default_instance_;
class SubscribePossibleSettingOptionsRequest;
struct SubscribePossibleSettingOptionsRequestDefaultTypeInternal;
extern SubscribePossibleSettingOptionsRequestDefaultTypeInternal _SubscribePossibleSettingOptionsRequest_default_instance_;
class SubscribeStorageRequest;
struct SubscribeStorageRequestDefaultTypeInternal;
extern SubscribeStorageRequestDefaultTypeInternal _SubscribeStorageRequest_default_instance_;
class SubscribeVideoStreamInfoRequest;
struct SubscribeVideoStreamInfoRequestDefaultTypeInternal;
extern SubscribeVideoStreamInfoRequestDefaultTypeInternal _SubscribeVideoStreamInfoRequest_default_instance_;
class TakePhotoRequest;
struct TakePhotoRequestDefaultTypeInternal;
extern TakePhotoRequestDefaultTypeInternal _TakePhotoRequest_default_instance_;
class TakePhotoResponse;
struct TakePhotoResponseDefaultTypeInternal;
extern TakePhotoResponseDefaultTypeInternal _TakePhotoResponse_default_instance_;
class TrackPointRequest;
struct TrackPointRequestDefaultTypeInternal;
extern TrackPointRequestDefaultTypeInternal _TrackPointRequest_default_instance_;
class TrackPointResponse;
struct TrackPointResponseDefaultTypeInternal;
extern TrackPointResponseDefaultTypeInternal _TrackPointResponse_default_instance_;
class TrackRectangleRequest;
struct TrackRectangleRequestDefaultTypeInternal;
extern TrackRectangleRequestDefaultTypeInternal _TrackRectangleRequest_default_instance_;
class TrackRectangleResponse;
struct TrackRectangleResponseDefaultTypeInternal;
extern TrackRectangleResponseDefaultTypeInternal _TrackRectangleResponse_default_instance_;
class TrackStopRequest;
struct TrackStopRequestDefaultTypeInternal;
extern TrackStopRequestDefaultTypeInternal _TrackStopRequest_default_instance_;
class TrackStopResponse;
struct TrackStopResponseDefaultTypeInternal;
extern TrackStopResponseDefaultTypeInternal _TrackStopResponse_default_instance_;
class VideoStreamInfo;
struct VideoStreamInfoDefaultTypeInternal;
extern VideoStreamInfoDefaultTypeInternal _VideoStreamInfo_default_instance_;
class VideoStreamInfoResponse;
struct VideoStreamInfoResponseDefaultTypeInternal;
extern VideoStreamInfoResponseDefaultTypeInternal _VideoStreamInfoResponse_default_instance_;
class VideoStreamSettings;
struct VideoStreamSettingsDefaultTypeInternal;
extern VideoStreamSettingsDefaultTypeInternal _VideoStreamSettings_default_instance_;
class VideoStreamUpdate;
struct VideoStreamUpdateDefaultTypeInternal;
extern VideoStreamUpdateDefaultTypeInternal _VideoStreamUpdate_default_instance_;
class ZoomInStartRequest;
struct ZoomInStartRequestDefaultTypeInternal;
extern ZoomInStartRequestDefaultTypeInternal _ZoomInStartRequest_default_instance_;
class ZoomInStartResponse;
struct ZoomInStartResponseDefaultTypeInternal;
extern ZoomInStartResponseDefaultTypeInternal _ZoomInStartResponse_default_instance_;
class ZoomOutStartRequest;
struct ZoomOutStartRequestDefaultTypeInternal;
extern ZoomOutStartRequestDefaultTypeInternal _ZoomOutStartRequest_default_instance_;
class ZoomOutStartResponse;
struct ZoomOutStartResponseDefaultTypeInternal;
extern ZoomOutStartResponseDefaultTypeInternal _ZoomOutStartResponse_default_instance_;
class ZoomRangeRequest;
struct ZoomRangeRequestDefaultTypeInternal;
extern ZoomRangeRequestDefaultTypeInternal _ZoomRangeRequest_default_instance_;
class ZoomRangeResponse;
struct ZoomRangeResponseDefaultTypeInternal;
extern ZoomRangeResponseDefaultTypeInternal _ZoomRangeResponse_default_instance_;
class ZoomStopRequest;
struct ZoomStopRequestDefaultTypeInternal;
extern ZoomStopRequestDefaultTypeInternal _ZoomStopRequest_default_instance_;
class ZoomStopResponse;
struct ZoomStopResponseDefaultTypeInternal;
extern ZoomStopResponseDefaultTypeInternal _ZoomStopResponse_default_instance_;
}  // namespace camera
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace camera {
enum VideoStreamInfo_VideoStreamStatus : int {
  VideoStreamInfo_VideoStreamStatus_VIDEO_STREAM_STATUS_NOT_RUNNING = 0,
  VideoStreamInfo_VideoStreamStatus_VIDEO_STREAM_STATUS_IN_PROGRESS = 1,
  VideoStreamInfo_VideoStreamStatus_VideoStreamInfo_VideoStreamStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  VideoStreamInfo_VideoStreamStatus_VideoStreamInfo_VideoStreamStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool VideoStreamInfo_VideoStreamStatus_IsValid(int value);
extern const uint32_t VideoStreamInfo_VideoStreamStatus_internal_data_[];
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo_VideoStreamStatus_VideoStreamStatus_MIN = static_cast<VideoStreamInfo_VideoStreamStatus>(0);
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo_VideoStreamStatus_VideoStreamStatus_MAX = static_cast<VideoStreamInfo_VideoStreamStatus>(1);
constexpr int VideoStreamInfo_VideoStreamStatus_VideoStreamStatus_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
VideoStreamInfo_VideoStreamStatus_descriptor();
template <typename T>
const std::string& VideoStreamInfo_VideoStreamStatus_Name(T value) {
  static_assert(std::is_same<T, VideoStreamInfo_VideoStreamStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to VideoStreamStatus_Name().");
  return VideoStreamInfo_VideoStreamStatus_Name(static_cast<VideoStreamInfo_VideoStreamStatus>(value));
}
template <>
inline const std::string& VideoStreamInfo_VideoStreamStatus_Name(VideoStreamInfo_VideoStreamStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VideoStreamInfo_VideoStreamStatus_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool VideoStreamInfo_VideoStreamStatus_Parse(absl::string_view name, VideoStreamInfo_VideoStreamStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoStreamInfo_VideoStreamStatus>(
      VideoStreamInfo_VideoStreamStatus_descriptor(), name, value);
}
enum VideoStreamInfo_VideoStreamSpectrum : int {
  VideoStreamInfo_VideoStreamSpectrum_VIDEO_STREAM_SPECTRUM_UNKNOWN = 0,
  VideoStreamInfo_VideoStreamSpectrum_VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT = 1,
  VideoStreamInfo_VideoStreamSpectrum_VIDEO_STREAM_SPECTRUM_INFRARED = 2,
  VideoStreamInfo_VideoStreamSpectrum_VideoStreamInfo_VideoStreamSpectrum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  VideoStreamInfo_VideoStreamSpectrum_VideoStreamInfo_VideoStreamSpectrum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool VideoStreamInfo_VideoStreamSpectrum_IsValid(int value);
extern const uint32_t VideoStreamInfo_VideoStreamSpectrum_internal_data_[];
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo_VideoStreamSpectrum_VideoStreamSpectrum_MIN = static_cast<VideoStreamInfo_VideoStreamSpectrum>(0);
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo_VideoStreamSpectrum_VideoStreamSpectrum_MAX = static_cast<VideoStreamInfo_VideoStreamSpectrum>(2);
constexpr int VideoStreamInfo_VideoStreamSpectrum_VideoStreamSpectrum_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
VideoStreamInfo_VideoStreamSpectrum_descriptor();
template <typename T>
const std::string& VideoStreamInfo_VideoStreamSpectrum_Name(T value) {
  static_assert(std::is_same<T, VideoStreamInfo_VideoStreamSpectrum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to VideoStreamSpectrum_Name().");
  return VideoStreamInfo_VideoStreamSpectrum_Name(static_cast<VideoStreamInfo_VideoStreamSpectrum>(value));
}
template <>
inline const std::string& VideoStreamInfo_VideoStreamSpectrum_Name(VideoStreamInfo_VideoStreamSpectrum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VideoStreamInfo_VideoStreamSpectrum_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool VideoStreamInfo_VideoStreamSpectrum_Parse(absl::string_view name, VideoStreamInfo_VideoStreamSpectrum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VideoStreamInfo_VideoStreamSpectrum>(
      VideoStreamInfo_VideoStreamSpectrum_descriptor(), name, value);
}
enum Storage_StorageStatus : int {
  Storage_StorageStatus_STORAGE_STATUS_NOT_AVAILABLE = 0,
  Storage_StorageStatus_STORAGE_STATUS_UNFORMATTED = 1,
  Storage_StorageStatus_STORAGE_STATUS_FORMATTED = 2,
  Storage_StorageStatus_STORAGE_STATUS_NOT_SUPPORTED = 3,
  Storage_StorageStatus_Storage_StorageStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Storage_StorageStatus_Storage_StorageStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Storage_StorageStatus_IsValid(int value);
extern const uint32_t Storage_StorageStatus_internal_data_[];
constexpr Storage_StorageStatus Storage_StorageStatus_StorageStatus_MIN = static_cast<Storage_StorageStatus>(0);
constexpr Storage_StorageStatus Storage_StorageStatus_StorageStatus_MAX = static_cast<Storage_StorageStatus>(3);
constexpr int Storage_StorageStatus_StorageStatus_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Storage_StorageStatus_descriptor();
template <typename T>
const std::string& Storage_StorageStatus_Name(T value) {
  static_assert(std::is_same<T, Storage_StorageStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StorageStatus_Name().");
  return Storage_StorageStatus_Name(static_cast<Storage_StorageStatus>(value));
}
template <>
inline const std::string& Storage_StorageStatus_Name(Storage_StorageStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Storage_StorageStatus_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Storage_StorageStatus_Parse(absl::string_view name, Storage_StorageStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Storage_StorageStatus>(
      Storage_StorageStatus_descriptor(), name, value);
}
enum Storage_StorageType : int {
  Storage_StorageType_STORAGE_TYPE_UNKNOWN = 0,
  Storage_StorageType_STORAGE_TYPE_USB_STICK = 1,
  Storage_StorageType_STORAGE_TYPE_SD = 2,
  Storage_StorageType_STORAGE_TYPE_MICROSD = 3,
  Storage_StorageType_STORAGE_TYPE_HD = 7,
  Storage_StorageType_STORAGE_TYPE_OTHER = 254,
  Storage_StorageType_Storage_StorageType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Storage_StorageType_Storage_StorageType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Storage_StorageType_IsValid(int value);
extern const uint32_t Storage_StorageType_internal_data_[];
constexpr Storage_StorageType Storage_StorageType_StorageType_MIN = static_cast<Storage_StorageType>(0);
constexpr Storage_StorageType Storage_StorageType_StorageType_MAX = static_cast<Storage_StorageType>(254);
constexpr int Storage_StorageType_StorageType_ARRAYSIZE = 254 + 1;
const ::google::protobuf::EnumDescriptor*
Storage_StorageType_descriptor();
template <typename T>
const std::string& Storage_StorageType_Name(T value) {
  static_assert(std::is_same<T, Storage_StorageType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StorageType_Name().");
  return ::google::protobuf::internal::NameOfEnum(Storage_StorageType_descriptor(), value);
}
inline bool Storage_StorageType_Parse(absl::string_view name, Storage_StorageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Storage_StorageType>(
      Storage_StorageType_descriptor(), name, value);
}
enum CameraResult_Result : int {
  CameraResult_Result_RESULT_UNKNOWN = 0,
  CameraResult_Result_RESULT_SUCCESS = 1,
  CameraResult_Result_RESULT_IN_PROGRESS = 2,
  CameraResult_Result_RESULT_BUSY = 3,
  CameraResult_Result_RESULT_DENIED = 4,
  CameraResult_Result_RESULT_ERROR = 5,
  CameraResult_Result_RESULT_TIMEOUT = 6,
  CameraResult_Result_RESULT_WRONG_ARGUMENT = 7,
  CameraResult_Result_RESULT_NO_SYSTEM = 8,
  CameraResult_Result_RESULT_PROTOCOL_UNSUPPORTED = 9,
  CameraResult_Result_RESULT_UNAVAILABLE = 10,
  CameraResult_Result_RESULT_CAMERA_ID_INVALID = 11,
  CameraResult_Result_RESULT_ACTION_UNSUPPORTED = 12,
  CameraResult_Result_CameraResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CameraResult_Result_CameraResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CameraResult_Result_IsValid(int value);
extern const uint32_t CameraResult_Result_internal_data_[];
constexpr CameraResult_Result CameraResult_Result_Result_MIN = static_cast<CameraResult_Result>(0);
constexpr CameraResult_Result CameraResult_Result_Result_MAX = static_cast<CameraResult_Result>(12);
constexpr int CameraResult_Result_Result_ARRAYSIZE = 12 + 1;
const ::google::protobuf::EnumDescriptor*
CameraResult_Result_descriptor();
template <typename T>
const std::string& CameraResult_Result_Name(T value) {
  static_assert(std::is_same<T, CameraResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return CameraResult_Result_Name(static_cast<CameraResult_Result>(value));
}
template <>
inline const std::string& CameraResult_Result_Name(CameraResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CameraResult_Result_descriptor,
                                                 0, 12>(
      static_cast<int>(value));
}
inline bool CameraResult_Result_Parse(absl::string_view name, CameraResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraResult_Result>(
      CameraResult_Result_descriptor(), name, value);
}
enum Mode : int {
  MODE_UNKNOWN = 0,
  MODE_PHOTO = 1,
  MODE_VIDEO = 2,
  Mode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Mode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Mode_IsValid(int value);
extern const uint32_t Mode_internal_data_[];
constexpr Mode Mode_MIN = static_cast<Mode>(0);
constexpr Mode Mode_MAX = static_cast<Mode>(2);
constexpr int Mode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Mode_descriptor();
template <typename T>
const std::string& Mode_Name(T value) {
  static_assert(std::is_same<T, Mode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Mode_Name().");
  return Mode_Name(static_cast<Mode>(value));
}
template <>
inline const std::string& Mode_Name(Mode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Mode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Mode_Parse(absl::string_view name, Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Mode>(
      Mode_descriptor(), name, value);
}
enum PhotosRange : int {
  PHOTOS_RANGE_ALL = 0,
  PHOTOS_RANGE_SINCE_CONNECTION = 1,
  PhotosRange_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PhotosRange_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PhotosRange_IsValid(int value);
extern const uint32_t PhotosRange_internal_data_[];
constexpr PhotosRange PhotosRange_MIN = static_cast<PhotosRange>(0);
constexpr PhotosRange PhotosRange_MAX = static_cast<PhotosRange>(1);
constexpr int PhotosRange_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PhotosRange_descriptor();
template <typename T>
const std::string& PhotosRange_Name(T value) {
  static_assert(std::is_same<T, PhotosRange>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PhotosRange_Name().");
  return PhotosRange_Name(static_cast<PhotosRange>(value));
}
template <>
inline const std::string& PhotosRange_Name(PhotosRange value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PhotosRange_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PhotosRange_Parse(absl::string_view name, PhotosRange* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PhotosRange>(
      PhotosRange_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ZoomStopRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomStopRequest) */ {
 public:
  inline ZoomStopRequest() : ZoomStopRequest(nullptr) {}
  ~ZoomStopRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomStopRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomStopRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomStopRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomStopRequest(const ZoomStopRequest& from) : ZoomStopRequest(nullptr, from) {}
  inline ZoomStopRequest(ZoomStopRequest&& from) noexcept
      : ZoomStopRequest(nullptr, std::move(from)) {}
  inline ZoomStopRequest& operator=(const ZoomStopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomStopRequest& operator=(ZoomStopRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomStopRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomStopRequest* internal_default_instance() {
    return reinterpret_cast<const ZoomStopRequest*>(
        &_ZoomStopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(ZoomStopRequest& a, ZoomStopRequest& b) { a.Swap(&b); }
  inline void Swap(ZoomStopRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomStopRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomStopRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomStopRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomStopRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomStopRequest& from) { ZoomStopRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomStopRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomStopRequest"; }

 protected:
  explicit ZoomStopRequest(::google::protobuf::Arena* arena);
  ZoomStopRequest(::google::protobuf::Arena* arena, const ZoomStopRequest& from);
  ZoomStopRequest(::google::protobuf::Arena* arena, ZoomStopRequest&& from) noexcept
      : ZoomStopRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomStopRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomStopRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomRangeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomRangeRequest) */ {
 public:
  inline ZoomRangeRequest() : ZoomRangeRequest(nullptr) {}
  ~ZoomRangeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomRangeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomRangeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomRangeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomRangeRequest(const ZoomRangeRequest& from) : ZoomRangeRequest(nullptr, from) {}
  inline ZoomRangeRequest(ZoomRangeRequest&& from) noexcept
      : ZoomRangeRequest(nullptr, std::move(from)) {}
  inline ZoomRangeRequest& operator=(const ZoomRangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomRangeRequest& operator=(ZoomRangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomRangeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomRangeRequest* internal_default_instance() {
    return reinterpret_cast<const ZoomRangeRequest*>(
        &_ZoomRangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(ZoomRangeRequest& a, ZoomRangeRequest& b) { a.Swap(&b); }
  inline void Swap(ZoomRangeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomRangeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomRangeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomRangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomRangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomRangeRequest& from) { ZoomRangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomRangeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomRangeRequest"; }

 protected:
  explicit ZoomRangeRequest(::google::protobuf::Arena* arena);
  ZoomRangeRequest(::google::protobuf::Arena* arena, const ZoomRangeRequest& from);
  ZoomRangeRequest(::google::protobuf::Arena* arena, ZoomRangeRequest&& from) noexcept
      : ZoomRangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kRangeFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // float range = 2;
  void clear_range() ;
  float range() const;
  void set_range(float value);

  private:
  float _internal_range() const;
  void _internal_set_range(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomRangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomRangeRequest& from_msg);
    ::int32_t component_id_;
    float range_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomOutStartRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomOutStartRequest) */ {
 public:
  inline ZoomOutStartRequest() : ZoomOutStartRequest(nullptr) {}
  ~ZoomOutStartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomOutStartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomOutStartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomOutStartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomOutStartRequest(const ZoomOutStartRequest& from) : ZoomOutStartRequest(nullptr, from) {}
  inline ZoomOutStartRequest(ZoomOutStartRequest&& from) noexcept
      : ZoomOutStartRequest(nullptr, std::move(from)) {}
  inline ZoomOutStartRequest& operator=(const ZoomOutStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomOutStartRequest& operator=(ZoomOutStartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomOutStartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomOutStartRequest* internal_default_instance() {
    return reinterpret_cast<const ZoomOutStartRequest*>(
        &_ZoomOutStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(ZoomOutStartRequest& a, ZoomOutStartRequest& b) { a.Swap(&b); }
  inline void Swap(ZoomOutStartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomOutStartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomOutStartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomOutStartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomOutStartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomOutStartRequest& from) { ZoomOutStartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomOutStartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomOutStartRequest"; }

 protected:
  explicit ZoomOutStartRequest(::google::protobuf::Arena* arena);
  ZoomOutStartRequest(::google::protobuf::Arena* arena, const ZoomOutStartRequest& from);
  ZoomOutStartRequest(::google::protobuf::Arena* arena, ZoomOutStartRequest&& from) noexcept
      : ZoomOutStartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomOutStartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomOutStartRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomInStartRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomInStartRequest) */ {
 public:
  inline ZoomInStartRequest() : ZoomInStartRequest(nullptr) {}
  ~ZoomInStartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomInStartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomInStartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomInStartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomInStartRequest(const ZoomInStartRequest& from) : ZoomInStartRequest(nullptr, from) {}
  inline ZoomInStartRequest(ZoomInStartRequest&& from) noexcept
      : ZoomInStartRequest(nullptr, std::move(from)) {}
  inline ZoomInStartRequest& operator=(const ZoomInStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomInStartRequest& operator=(ZoomInStartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomInStartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomInStartRequest* internal_default_instance() {
    return reinterpret_cast<const ZoomInStartRequest*>(
        &_ZoomInStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(ZoomInStartRequest& a, ZoomInStartRequest& b) { a.Swap(&b); }
  inline void Swap(ZoomInStartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomInStartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomInStartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomInStartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomInStartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomInStartRequest& from) { ZoomInStartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomInStartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomInStartRequest"; }

 protected:
  explicit ZoomInStartRequest(::google::protobuf::Arena* arena);
  ZoomInStartRequest(::google::protobuf::Arena* arena, const ZoomInStartRequest& from);
  ZoomInStartRequest(::google::protobuf::Arena* arena, ZoomInStartRequest&& from) noexcept
      : ZoomInStartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomInStartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomInStartRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class VideoStreamSettings final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.VideoStreamSettings) */ {
 public:
  inline VideoStreamSettings() : VideoStreamSettings(nullptr) {}
  ~VideoStreamSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VideoStreamSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VideoStreamSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoStreamSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline VideoStreamSettings(const VideoStreamSettings& from) : VideoStreamSettings(nullptr, from) {}
  inline VideoStreamSettings(VideoStreamSettings&& from) noexcept
      : VideoStreamSettings(nullptr, std::move(from)) {}
  inline VideoStreamSettings& operator=(const VideoStreamSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoStreamSettings& operator=(VideoStreamSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoStreamSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoStreamSettings* internal_default_instance() {
    return reinterpret_cast<const VideoStreamSettings*>(
        &_VideoStreamSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(VideoStreamSettings& a, VideoStreamSettings& b) { a.Swap(&b); }
  inline void Swap(VideoStreamSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoStreamSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoStreamSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VideoStreamSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoStreamSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoStreamSettings& from) { VideoStreamSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VideoStreamSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.VideoStreamSettings"; }

 protected:
  explicit VideoStreamSettings(::google::protobuf::Arena* arena);
  VideoStreamSettings(::google::protobuf::Arena* arena, const VideoStreamSettings& from);
  VideoStreamSettings(::google::protobuf::Arena* arena, VideoStreamSettings&& from) noexcept
      : VideoStreamSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUriFieldNumber = 6,
    kFrameRateHzFieldNumber = 1,
    kHorizontalResolutionPixFieldNumber = 2,
    kVerticalResolutionPixFieldNumber = 3,
    kBitRateBSFieldNumber = 4,
    kRotationDegFieldNumber = 5,
    kHorizontalFovDegFieldNumber = 7,
  };
  // string uri = 6;
  void clear_uri() ;
  const std::string& uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uri(Arg_&& arg, Args_... args);
  std::string* mutable_uri();
  PROTOBUF_NODISCARD std::string* release_uri();
  void set_allocated_uri(std::string* value);

  private:
  const std::string& _internal_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uri(
      const std::string& value);
  std::string* _internal_mutable_uri();

  public:
  // float frame_rate_hz = 1;
  void clear_frame_rate_hz() ;
  float frame_rate_hz() const;
  void set_frame_rate_hz(float value);

  private:
  float _internal_frame_rate_hz() const;
  void _internal_set_frame_rate_hz(float value);

  public:
  // uint32 horizontal_resolution_pix = 2;
  void clear_horizontal_resolution_pix() ;
  ::uint32_t horizontal_resolution_pix() const;
  void set_horizontal_resolution_pix(::uint32_t value);

  private:
  ::uint32_t _internal_horizontal_resolution_pix() const;
  void _internal_set_horizontal_resolution_pix(::uint32_t value);

  public:
  // uint32 vertical_resolution_pix = 3;
  void clear_vertical_resolution_pix() ;
  ::uint32_t vertical_resolution_pix() const;
  void set_vertical_resolution_pix(::uint32_t value);

  private:
  ::uint32_t _internal_vertical_resolution_pix() const;
  void _internal_set_vertical_resolution_pix(::uint32_t value);

  public:
  // uint32 bit_rate_b_s = 4;
  void clear_bit_rate_b_s() ;
  ::uint32_t bit_rate_b_s() const;
  void set_bit_rate_b_s(::uint32_t value);

  private:
  ::uint32_t _internal_bit_rate_b_s() const;
  void _internal_set_bit_rate_b_s(::uint32_t value);

  public:
  // uint32 rotation_deg = 5;
  void clear_rotation_deg() ;
  ::uint32_t rotation_deg() const;
  void set_rotation_deg(::uint32_t value);

  private:
  ::uint32_t _internal_rotation_deg() const;
  void _internal_set_rotation_deg(::uint32_t value);

  public:
  // float horizontal_fov_deg = 7;
  void clear_horizontal_fov_deg() ;
  float horizontal_fov_deg() const;
  void set_horizontal_fov_deg(float value);

  private:
  float _internal_horizontal_fov_deg() const;
  void _internal_set_horizontal_fov_deg(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.VideoStreamSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VideoStreamSettings& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uri_;
    float frame_rate_hz_;
    ::uint32_t horizontal_resolution_pix_;
    ::uint32_t vertical_resolution_pix_;
    ::uint32_t bit_rate_b_s_;
    ::uint32_t rotation_deg_;
    float horizontal_fov_deg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TrackStopRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TrackStopRequest) */ {
 public:
  inline TrackStopRequest() : TrackStopRequest(nullptr) {}
  ~TrackStopRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackStopRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackStopRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackStopRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrackStopRequest(const TrackStopRequest& from) : TrackStopRequest(nullptr, from) {}
  inline TrackStopRequest(TrackStopRequest&& from) noexcept
      : TrackStopRequest(nullptr, std::move(from)) {}
  inline TrackStopRequest& operator=(const TrackStopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackStopRequest& operator=(TrackStopRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackStopRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackStopRequest* internal_default_instance() {
    return reinterpret_cast<const TrackStopRequest*>(
        &_TrackStopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 73;
  friend void swap(TrackStopRequest& a, TrackStopRequest& b) { a.Swap(&b); }
  inline void Swap(TrackStopRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackStopRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackStopRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackStopRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackStopRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackStopRequest& from) { TrackStopRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackStopRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TrackStopRequest"; }

 protected:
  explicit TrackStopRequest(::google::protobuf::Arena* arena);
  TrackStopRequest(::google::protobuf::Arena* arena, const TrackStopRequest& from);
  TrackStopRequest(::google::protobuf::Arena* arena, TrackStopRequest&& from) noexcept
      : TrackStopRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TrackStopRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrackStopRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TrackRectangleRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TrackRectangleRequest) */ {
 public:
  inline TrackRectangleRequest() : TrackRectangleRequest(nullptr) {}
  ~TrackRectangleRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackRectangleRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackRectangleRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackRectangleRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrackRectangleRequest(const TrackRectangleRequest& from) : TrackRectangleRequest(nullptr, from) {}
  inline TrackRectangleRequest(TrackRectangleRequest&& from) noexcept
      : TrackRectangleRequest(nullptr, std::move(from)) {}
  inline TrackRectangleRequest& operator=(const TrackRectangleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackRectangleRequest& operator=(TrackRectangleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackRectangleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackRectangleRequest* internal_default_instance() {
    return reinterpret_cast<const TrackRectangleRequest*>(
        &_TrackRectangleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(TrackRectangleRequest& a, TrackRectangleRequest& b) { a.Swap(&b); }
  inline void Swap(TrackRectangleRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackRectangleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackRectangleRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackRectangleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackRectangleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackRectangleRequest& from) { TrackRectangleRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackRectangleRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TrackRectangleRequest"; }

 protected:
  explicit TrackRectangleRequest(::google::protobuf::Arena* arena);
  TrackRectangleRequest(::google::protobuf::Arena* arena, const TrackRectangleRequest& from);
  TrackRectangleRequest(::google::protobuf::Arena* arena, TrackRectangleRequest&& from) noexcept
      : TrackRectangleRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kTopLeftXFieldNumber = 2,
    kTopLeftYFieldNumber = 3,
    kBottomRightXFieldNumber = 4,
    kBottomRightYFieldNumber = 5,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // float top_left_x = 2;
  void clear_top_left_x() ;
  float top_left_x() const;
  void set_top_left_x(float value);

  private:
  float _internal_top_left_x() const;
  void _internal_set_top_left_x(float value);

  public:
  // float top_left_y = 3;
  void clear_top_left_y() ;
  float top_left_y() const;
  void set_top_left_y(float value);

  private:
  float _internal_top_left_y() const;
  void _internal_set_top_left_y(float value);

  public:
  // float bottom_right_x = 4;
  void clear_bottom_right_x() ;
  float bottom_right_x() const;
  void set_bottom_right_x(float value);

  private:
  float _internal_bottom_right_x() const;
  void _internal_set_bottom_right_x(float value);

  public:
  // float bottom_right_y = 5;
  void clear_bottom_right_y() ;
  float bottom_right_y() const;
  void set_bottom_right_y(float value);

  private:
  float _internal_bottom_right_y() const;
  void _internal_set_bottom_right_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TrackRectangleRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrackRectangleRequest& from_msg);
    ::int32_t component_id_;
    float top_left_x_;
    float top_left_y_;
    float bottom_right_x_;
    float bottom_right_y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TrackPointRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TrackPointRequest) */ {
 public:
  inline TrackPointRequest() : TrackPointRequest(nullptr) {}
  ~TrackPointRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackPointRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackPointRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackPointRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrackPointRequest(const TrackPointRequest& from) : TrackPointRequest(nullptr, from) {}
  inline TrackPointRequest(TrackPointRequest&& from) noexcept
      : TrackPointRequest(nullptr, std::move(from)) {}
  inline TrackPointRequest& operator=(const TrackPointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackPointRequest& operator=(TrackPointRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackPointRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackPointRequest* internal_default_instance() {
    return reinterpret_cast<const TrackPointRequest*>(
        &_TrackPointRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(TrackPointRequest& a, TrackPointRequest& b) { a.Swap(&b); }
  inline void Swap(TrackPointRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackPointRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackPointRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackPointRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackPointRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackPointRequest& from) { TrackPointRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackPointRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TrackPointRequest"; }

 protected:
  explicit TrackPointRequest(::google::protobuf::Arena* arena);
  TrackPointRequest(::google::protobuf::Arena* arena, const TrackPointRequest& from);
  TrackPointRequest(::google::protobuf::Arena* arena, TrackPointRequest&& from) noexcept
      : TrackPointRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kPointXFieldNumber = 2,
    kPointYFieldNumber = 3,
    kRadiusFieldNumber = 4,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // float point_x = 2;
  void clear_point_x() ;
  float point_x() const;
  void set_point_x(float value);

  private:
  float _internal_point_x() const;
  void _internal_set_point_x(float value);

  public:
  // float point_y = 3;
  void clear_point_y() ;
  float point_y() const;
  void set_point_y(float value);

  private:
  float _internal_point_y() const;
  void _internal_set_point_y(float value);

  public:
  // float radius = 4;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TrackPointRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrackPointRequest& from_msg);
    ::int32_t component_id_;
    float point_x_;
    float point_y_;
    float radius_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TakePhotoRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TakePhotoRequest) */ {
 public:
  inline TakePhotoRequest() : TakePhotoRequest(nullptr) {}
  ~TakePhotoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TakePhotoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TakePhotoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TakePhotoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TakePhotoRequest(const TakePhotoRequest& from) : TakePhotoRequest(nullptr, from) {}
  inline TakePhotoRequest(TakePhotoRequest&& from) noexcept
      : TakePhotoRequest(nullptr, std::move(from)) {}
  inline TakePhotoRequest& operator=(const TakePhotoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TakePhotoRequest& operator=(TakePhotoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TakePhotoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TakePhotoRequest* internal_default_instance() {
    return reinterpret_cast<const TakePhotoRequest*>(
        &_TakePhotoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TakePhotoRequest& a, TakePhotoRequest& b) { a.Swap(&b); }
  inline void Swap(TakePhotoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TakePhotoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TakePhotoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TakePhotoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TakePhotoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TakePhotoRequest& from) { TakePhotoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TakePhotoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TakePhotoRequest"; }

 protected:
  explicit TakePhotoRequest(::google::protobuf::Arena* arena);
  TakePhotoRequest(::google::protobuf::Arena* arena, const TakePhotoRequest& from);
  TakePhotoRequest(::google::protobuf::Arena* arena, TakePhotoRequest&& from) noexcept
      : TakePhotoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TakePhotoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TakePhotoRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribeVideoStreamInfoRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest) */ {
 public:
  inline SubscribeVideoStreamInfoRequest() : SubscribeVideoStreamInfoRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeVideoStreamInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeVideoStreamInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeVideoStreamInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeVideoStreamInfoRequest(const SubscribeVideoStreamInfoRequest& from) : SubscribeVideoStreamInfoRequest(nullptr, from) {}
  inline SubscribeVideoStreamInfoRequest(SubscribeVideoStreamInfoRequest&& from) noexcept
      : SubscribeVideoStreamInfoRequest(nullptr, std::move(from)) {}
  inline SubscribeVideoStreamInfoRequest& operator=(const SubscribeVideoStreamInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeVideoStreamInfoRequest& operator=(SubscribeVideoStreamInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeVideoStreamInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeVideoStreamInfoRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeVideoStreamInfoRequest*>(
        &_SubscribeVideoStreamInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SubscribeVideoStreamInfoRequest& a, SubscribeVideoStreamInfoRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeVideoStreamInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeVideoStreamInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeVideoStreamInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeVideoStreamInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeVideoStreamInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeVideoStreamInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest"; }

 protected:
  explicit SubscribeVideoStreamInfoRequest(::google::protobuf::Arena* arena);
  SubscribeVideoStreamInfoRequest(::google::protobuf::Arena* arena, const SubscribeVideoStreamInfoRequest& from);
  SubscribeVideoStreamInfoRequest(::google::protobuf::Arena* arena, SubscribeVideoStreamInfoRequest&& from) noexcept
      : SubscribeVideoStreamInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeVideoStreamInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribeStorageRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribeStorageRequest) */ {
 public:
  inline SubscribeStorageRequest() : SubscribeStorageRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeStorageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeStorageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeStorageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeStorageRequest(const SubscribeStorageRequest& from) : SubscribeStorageRequest(nullptr, from) {}
  inline SubscribeStorageRequest(SubscribeStorageRequest&& from) noexcept
      : SubscribeStorageRequest(nullptr, std::move(from)) {}
  inline SubscribeStorageRequest& operator=(const SubscribeStorageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeStorageRequest& operator=(SubscribeStorageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeStorageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeStorageRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeStorageRequest*>(
        &_SubscribeStorageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(SubscribeStorageRequest& a, SubscribeStorageRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeStorageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeStorageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeStorageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeStorageRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeStorageRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeStorageRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribeStorageRequest"; }

 protected:
  explicit SubscribeStorageRequest(::google::protobuf::Arena* arena);
  SubscribeStorageRequest(::google::protobuf::Arena* arena, const SubscribeStorageRequest& from);
  SubscribeStorageRequest(::google::protobuf::Arena* arena, SubscribeStorageRequest&& from) noexcept
      : SubscribeStorageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribeStorageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeStorageRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribePossibleSettingOptionsRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest) */ {
 public:
  inline SubscribePossibleSettingOptionsRequest() : SubscribePossibleSettingOptionsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribePossibleSettingOptionsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribePossibleSettingOptionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribePossibleSettingOptionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribePossibleSettingOptionsRequest(const SubscribePossibleSettingOptionsRequest& from) : SubscribePossibleSettingOptionsRequest(nullptr, from) {}
  inline SubscribePossibleSettingOptionsRequest(SubscribePossibleSettingOptionsRequest&& from) noexcept
      : SubscribePossibleSettingOptionsRequest(nullptr, std::move(from)) {}
  inline SubscribePossibleSettingOptionsRequest& operator=(const SubscribePossibleSettingOptionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribePossibleSettingOptionsRequest& operator=(SubscribePossibleSettingOptionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribePossibleSettingOptionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribePossibleSettingOptionsRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribePossibleSettingOptionsRequest*>(
        &_SubscribePossibleSettingOptionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(SubscribePossibleSettingOptionsRequest& a, SubscribePossibleSettingOptionsRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribePossibleSettingOptionsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribePossibleSettingOptionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribePossibleSettingOptionsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribePossibleSettingOptionsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribePossibleSettingOptionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribePossibleSettingOptionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest"; }

 protected:
  explicit SubscribePossibleSettingOptionsRequest(::google::protobuf::Arena* arena);
  SubscribePossibleSettingOptionsRequest(::google::protobuf::Arena* arena, const SubscribePossibleSettingOptionsRequest& from);
  SubscribePossibleSettingOptionsRequest(::google::protobuf::Arena* arena, SubscribePossibleSettingOptionsRequest&& from) noexcept
      : SubscribePossibleSettingOptionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribePossibleSettingOptionsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribeModeRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribeModeRequest) */ {
 public:
  inline SubscribeModeRequest() : SubscribeModeRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeModeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeModeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeModeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeModeRequest(const SubscribeModeRequest& from) : SubscribeModeRequest(nullptr, from) {}
  inline SubscribeModeRequest(SubscribeModeRequest&& from) noexcept
      : SubscribeModeRequest(nullptr, std::move(from)) {}
  inline SubscribeModeRequest& operator=(const SubscribeModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeModeRequest& operator=(SubscribeModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeModeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeModeRequest*>(
        &_SubscribeModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SubscribeModeRequest& a, SubscribeModeRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeModeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeModeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeModeRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeModeRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeModeRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribeModeRequest"; }

 protected:
  explicit SubscribeModeRequest(::google::protobuf::Arena* arena);
  SubscribeModeRequest(::google::protobuf::Arena* arena, const SubscribeModeRequest& from);
  SubscribeModeRequest(::google::protobuf::Arena* arena, SubscribeModeRequest&& from) noexcept
      : SubscribeModeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribeModeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeModeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCurrentSettingsRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribeCurrentSettingsRequest) */ {
 public:
  inline SubscribeCurrentSettingsRequest() : SubscribeCurrentSettingsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeCurrentSettingsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeCurrentSettingsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeCurrentSettingsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeCurrentSettingsRequest(const SubscribeCurrentSettingsRequest& from) : SubscribeCurrentSettingsRequest(nullptr, from) {}
  inline SubscribeCurrentSettingsRequest(SubscribeCurrentSettingsRequest&& from) noexcept
      : SubscribeCurrentSettingsRequest(nullptr, std::move(from)) {}
  inline SubscribeCurrentSettingsRequest& operator=(const SubscribeCurrentSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCurrentSettingsRequest& operator=(SubscribeCurrentSettingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCurrentSettingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCurrentSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCurrentSettingsRequest*>(
        &_SubscribeCurrentSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(SubscribeCurrentSettingsRequest& a, SubscribeCurrentSettingsRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeCurrentSettingsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCurrentSettingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCurrentSettingsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeCurrentSettingsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCurrentSettingsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCurrentSettingsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribeCurrentSettingsRequest"; }

 protected:
  explicit SubscribeCurrentSettingsRequest(::google::protobuf::Arena* arena);
  SubscribeCurrentSettingsRequest(::google::protobuf::Arena* arena, const SubscribeCurrentSettingsRequest& from);
  SubscribeCurrentSettingsRequest(::google::protobuf::Arena* arena, SubscribeCurrentSettingsRequest&& from) noexcept
      : SubscribeCurrentSettingsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribeCurrentSettingsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeCurrentSettingsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCaptureInfoRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribeCaptureInfoRequest) */ {
 public:
  inline SubscribeCaptureInfoRequest() : SubscribeCaptureInfoRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeCaptureInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeCaptureInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeCaptureInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeCaptureInfoRequest(const SubscribeCaptureInfoRequest& from) : SubscribeCaptureInfoRequest(nullptr, from) {}
  inline SubscribeCaptureInfoRequest(SubscribeCaptureInfoRequest&& from) noexcept
      : SubscribeCaptureInfoRequest(nullptr, std::move(from)) {}
  inline SubscribeCaptureInfoRequest& operator=(const SubscribeCaptureInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCaptureInfoRequest& operator=(SubscribeCaptureInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCaptureInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCaptureInfoRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCaptureInfoRequest*>(
        &_SubscribeCaptureInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SubscribeCaptureInfoRequest& a, SubscribeCaptureInfoRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeCaptureInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCaptureInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCaptureInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeCaptureInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCaptureInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCaptureInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribeCaptureInfoRequest"; }

 protected:
  explicit SubscribeCaptureInfoRequest(::google::protobuf::Arena* arena);
  SubscribeCaptureInfoRequest(::google::protobuf::Arena* arena, const SubscribeCaptureInfoRequest& from);
  SubscribeCaptureInfoRequest(::google::protobuf::Arena* arena, SubscribeCaptureInfoRequest&& from) noexcept
      : SubscribeCaptureInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribeCaptureInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeCaptureInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCameraListRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SubscribeCameraListRequest) */ {
 public:
  inline SubscribeCameraListRequest() : SubscribeCameraListRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeCameraListRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeCameraListRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeCameraListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeCameraListRequest(const SubscribeCameraListRequest& from) : SubscribeCameraListRequest(nullptr, from) {}
  inline SubscribeCameraListRequest(SubscribeCameraListRequest&& from) noexcept
      : SubscribeCameraListRequest(nullptr, std::move(from)) {}
  inline SubscribeCameraListRequest& operator=(const SubscribeCameraListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCameraListRequest& operator=(SubscribeCameraListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCameraListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCameraListRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCameraListRequest*>(
        &_SubscribeCameraListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(SubscribeCameraListRequest& a, SubscribeCameraListRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeCameraListRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCameraListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCameraListRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeCameraListRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCameraListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCameraListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SubscribeCameraListRequest"; }

 protected:
  explicit SubscribeCameraListRequest(::google::protobuf::Arena* arena);
  SubscribeCameraListRequest(::google::protobuf::Arena* arena, const SubscribeCameraListRequest& from);
  SubscribeCameraListRequest(::google::protobuf::Arena* arena, SubscribeCameraListRequest&& from) noexcept
      : SubscribeCameraListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SubscribeCameraListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeCameraListRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class Storage final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.Storage) */ {
 public:
  inline Storage() : Storage(nullptr) {}
  ~Storage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Storage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Storage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Storage(
      ::google::protobuf::internal::ConstantInitialized);

  inline Storage(const Storage& from) : Storage(nullptr, from) {}
  inline Storage(Storage&& from) noexcept
      : Storage(nullptr, std::move(from)) {}
  inline Storage& operator=(const Storage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Storage& operator=(Storage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Storage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Storage* internal_default_instance() {
    return reinterpret_cast<const Storage*>(
        &_Storage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(Storage& a, Storage& b) { a.Swap(&b); }
  inline void Swap(Storage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Storage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Storage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Storage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Storage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Storage& from) { Storage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Storage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.Storage"; }

 protected:
  explicit Storage(::google::protobuf::Arena* arena);
  Storage(::google::protobuf::Arena* arena, const Storage& from);
  Storage(::google::protobuf::Arena* arena, Storage&& from) noexcept
      : Storage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using StorageStatus = Storage_StorageStatus;
  static constexpr StorageStatus STORAGE_STATUS_NOT_AVAILABLE = Storage_StorageStatus_STORAGE_STATUS_NOT_AVAILABLE;
  static constexpr StorageStatus STORAGE_STATUS_UNFORMATTED = Storage_StorageStatus_STORAGE_STATUS_UNFORMATTED;
  static constexpr StorageStatus STORAGE_STATUS_FORMATTED = Storage_StorageStatus_STORAGE_STATUS_FORMATTED;
  static constexpr StorageStatus STORAGE_STATUS_NOT_SUPPORTED = Storage_StorageStatus_STORAGE_STATUS_NOT_SUPPORTED;
  static inline bool StorageStatus_IsValid(int value) {
    return Storage_StorageStatus_IsValid(value);
  }
  static constexpr StorageStatus StorageStatus_MIN = Storage_StorageStatus_StorageStatus_MIN;
  static constexpr StorageStatus StorageStatus_MAX = Storage_StorageStatus_StorageStatus_MAX;
  static constexpr int StorageStatus_ARRAYSIZE = Storage_StorageStatus_StorageStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* StorageStatus_descriptor() {
    return Storage_StorageStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& StorageStatus_Name(T value) {
    return Storage_StorageStatus_Name(value);
  }
  static inline bool StorageStatus_Parse(absl::string_view name, StorageStatus* value) {
    return Storage_StorageStatus_Parse(name, value);
  }
  using StorageType = Storage_StorageType;
  static constexpr StorageType STORAGE_TYPE_UNKNOWN = Storage_StorageType_STORAGE_TYPE_UNKNOWN;
  static constexpr StorageType STORAGE_TYPE_USB_STICK = Storage_StorageType_STORAGE_TYPE_USB_STICK;
  static constexpr StorageType STORAGE_TYPE_SD = Storage_StorageType_STORAGE_TYPE_SD;
  static constexpr StorageType STORAGE_TYPE_MICROSD = Storage_StorageType_STORAGE_TYPE_MICROSD;
  static constexpr StorageType STORAGE_TYPE_HD = Storage_StorageType_STORAGE_TYPE_HD;
  static constexpr StorageType STORAGE_TYPE_OTHER = Storage_StorageType_STORAGE_TYPE_OTHER;
  static inline bool StorageType_IsValid(int value) {
    return Storage_StorageType_IsValid(value);
  }
  static constexpr StorageType StorageType_MIN = Storage_StorageType_StorageType_MIN;
  static constexpr StorageType StorageType_MAX = Storage_StorageType_StorageType_MAX;
  static constexpr int StorageType_ARRAYSIZE = Storage_StorageType_StorageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* StorageType_descriptor() {
    return Storage_StorageType_descriptor();
  }
  template <typename T>
  static inline const std::string& StorageType_Name(T value) {
    return Storage_StorageType_Name(value);
  }
  static inline bool StorageType_Parse(absl::string_view name, StorageType* value) {
    return Storage_StorageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kMediaFolderNameFieldNumber = 8,
    kComponentIdFieldNumber = 1,
    kVideoOnFieldNumber = 2,
    kPhotoIntervalOnFieldNumber = 3,
    kUsedStorageMibFieldNumber = 4,
    kAvailableStorageMibFieldNumber = 5,
    kTotalStorageMibFieldNumber = 6,
    kRecordingTimeSFieldNumber = 7,
    kStorageStatusFieldNumber = 9,
    kStorageIdFieldNumber = 10,
    kStorageTypeFieldNumber = 11,
  };
  // string media_folder_name = 8;
  void clear_media_folder_name() ;
  const std::string& media_folder_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_media_folder_name(Arg_&& arg, Args_... args);
  std::string* mutable_media_folder_name();
  PROTOBUF_NODISCARD std::string* release_media_folder_name();
  void set_allocated_media_folder_name(std::string* value);

  private:
  const std::string& _internal_media_folder_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_media_folder_name(
      const std::string& value);
  std::string* _internal_mutable_media_folder_name();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // bool video_on = 2;
  void clear_video_on() ;
  bool video_on() const;
  void set_video_on(bool value);

  private:
  bool _internal_video_on() const;
  void _internal_set_video_on(bool value);

  public:
  // bool photo_interval_on = 3;
  void clear_photo_interval_on() ;
  bool photo_interval_on() const;
  void set_photo_interval_on(bool value);

  private:
  bool _internal_photo_interval_on() const;
  void _internal_set_photo_interval_on(bool value);

  public:
  // float used_storage_mib = 4;
  void clear_used_storage_mib() ;
  float used_storage_mib() const;
  void set_used_storage_mib(float value);

  private:
  float _internal_used_storage_mib() const;
  void _internal_set_used_storage_mib(float value);

  public:
  // float available_storage_mib = 5;
  void clear_available_storage_mib() ;
  float available_storage_mib() const;
  void set_available_storage_mib(float value);

  private:
  float _internal_available_storage_mib() const;
  void _internal_set_available_storage_mib(float value);

  public:
  // float total_storage_mib = 6;
  void clear_total_storage_mib() ;
  float total_storage_mib() const;
  void set_total_storage_mib(float value);

  private:
  float _internal_total_storage_mib() const;
  void _internal_set_total_storage_mib(float value);

  public:
  // float recording_time_s = 7;
  void clear_recording_time_s() ;
  float recording_time_s() const;
  void set_recording_time_s(float value);

  private:
  float _internal_recording_time_s() const;
  void _internal_set_recording_time_s(float value);

  public:
  // .mavsdk.rpc.camera.Storage.StorageStatus storage_status = 9;
  void clear_storage_status() ;
  ::mavsdk::rpc::camera::Storage_StorageStatus storage_status() const;
  void set_storage_status(::mavsdk::rpc::camera::Storage_StorageStatus value);

  private:
  ::mavsdk::rpc::camera::Storage_StorageStatus _internal_storage_status() const;
  void _internal_set_storage_status(::mavsdk::rpc::camera::Storage_StorageStatus value);

  public:
  // uint32 storage_id = 10;
  void clear_storage_id() ;
  ::uint32_t storage_id() const;
  void set_storage_id(::uint32_t value);

  private:
  ::uint32_t _internal_storage_id() const;
  void _internal_set_storage_id(::uint32_t value);

  public:
  // .mavsdk.rpc.camera.Storage.StorageType storage_type = 11;
  void clear_storage_type() ;
  ::mavsdk::rpc::camera::Storage_StorageType storage_type() const;
  void set_storage_type(::mavsdk::rpc::camera::Storage_StorageType value);

  private:
  ::mavsdk::rpc::camera::Storage_StorageType _internal_storage_type() const;
  void _internal_set_storage_type(::mavsdk::rpc::camera::Storage_StorageType value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.Storage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Storage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr media_folder_name_;
    ::int32_t component_id_;
    bool video_on_;
    bool photo_interval_on_;
    float used_storage_mib_;
    float available_storage_mib_;
    float total_storage_mib_;
    float recording_time_s_;
    int storage_status_;
    ::uint32_t storage_id_;
    int storage_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StopVideoStreamingRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StopVideoStreamingRequest) */ {
 public:
  inline StopVideoStreamingRequest() : StopVideoStreamingRequest(nullptr) {}
  ~StopVideoStreamingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopVideoStreamingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopVideoStreamingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopVideoStreamingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopVideoStreamingRequest(const StopVideoStreamingRequest& from) : StopVideoStreamingRequest(nullptr, from) {}
  inline StopVideoStreamingRequest(StopVideoStreamingRequest&& from) noexcept
      : StopVideoStreamingRequest(nullptr, std::move(from)) {}
  inline StopVideoStreamingRequest& operator=(const StopVideoStreamingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopVideoStreamingRequest& operator=(StopVideoStreamingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopVideoStreamingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopVideoStreamingRequest* internal_default_instance() {
    return reinterpret_cast<const StopVideoStreamingRequest*>(
        &_StopVideoStreamingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(StopVideoStreamingRequest& a, StopVideoStreamingRequest& b) { a.Swap(&b); }
  inline void Swap(StopVideoStreamingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopVideoStreamingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopVideoStreamingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopVideoStreamingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopVideoStreamingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopVideoStreamingRequest& from) { StopVideoStreamingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopVideoStreamingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StopVideoStreamingRequest"; }

 protected:
  explicit StopVideoStreamingRequest(::google::protobuf::Arena* arena);
  StopVideoStreamingRequest(::google::protobuf::Arena* arena, const StopVideoStreamingRequest& from);
  StopVideoStreamingRequest(::google::protobuf::Arena* arena, StopVideoStreamingRequest&& from) noexcept
      : StopVideoStreamingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kStreamIdFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // int32 stream_id = 2;
  void clear_stream_id() ;
  ::int32_t stream_id() const;
  void set_stream_id(::int32_t value);

  private:
  ::int32_t _internal_stream_id() const;
  void _internal_set_stream_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StopVideoStreamingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopVideoStreamingRequest& from_msg);
    ::int32_t component_id_;
    ::int32_t stream_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StopVideoRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StopVideoRequest) */ {
 public:
  inline StopVideoRequest() : StopVideoRequest(nullptr) {}
  ~StopVideoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopVideoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopVideoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopVideoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopVideoRequest(const StopVideoRequest& from) : StopVideoRequest(nullptr, from) {}
  inline StopVideoRequest(StopVideoRequest&& from) noexcept
      : StopVideoRequest(nullptr, std::move(from)) {}
  inline StopVideoRequest& operator=(const StopVideoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopVideoRequest& operator=(StopVideoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopVideoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopVideoRequest* internal_default_instance() {
    return reinterpret_cast<const StopVideoRequest*>(
        &_StopVideoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(StopVideoRequest& a, StopVideoRequest& b) { a.Swap(&b); }
  inline void Swap(StopVideoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopVideoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopVideoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopVideoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopVideoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopVideoRequest& from) { StopVideoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopVideoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StopVideoRequest"; }

 protected:
  explicit StopVideoRequest(::google::protobuf::Arena* arena);
  StopVideoRequest(::google::protobuf::Arena* arena, const StopVideoRequest& from);
  StopVideoRequest(::google::protobuf::Arena* arena, StopVideoRequest&& from) noexcept
      : StopVideoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StopVideoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopVideoRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StopPhotoIntervalRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StopPhotoIntervalRequest) */ {
 public:
  inline StopPhotoIntervalRequest() : StopPhotoIntervalRequest(nullptr) {}
  ~StopPhotoIntervalRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopPhotoIntervalRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopPhotoIntervalRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopPhotoIntervalRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopPhotoIntervalRequest(const StopPhotoIntervalRequest& from) : StopPhotoIntervalRequest(nullptr, from) {}
  inline StopPhotoIntervalRequest(StopPhotoIntervalRequest&& from) noexcept
      : StopPhotoIntervalRequest(nullptr, std::move(from)) {}
  inline StopPhotoIntervalRequest& operator=(const StopPhotoIntervalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopPhotoIntervalRequest& operator=(StopPhotoIntervalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopPhotoIntervalRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopPhotoIntervalRequest* internal_default_instance() {
    return reinterpret_cast<const StopPhotoIntervalRequest*>(
        &_StopPhotoIntervalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(StopPhotoIntervalRequest& a, StopPhotoIntervalRequest& b) { a.Swap(&b); }
  inline void Swap(StopPhotoIntervalRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopPhotoIntervalRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopPhotoIntervalRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopPhotoIntervalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopPhotoIntervalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopPhotoIntervalRequest& from) { StopPhotoIntervalRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopPhotoIntervalRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StopPhotoIntervalRequest"; }

 protected:
  explicit StopPhotoIntervalRequest(::google::protobuf::Arena* arena);
  StopPhotoIntervalRequest(::google::protobuf::Arena* arena, const StopPhotoIntervalRequest& from);
  StopPhotoIntervalRequest(::google::protobuf::Arena* arena, StopPhotoIntervalRequest&& from) noexcept
      : StopPhotoIntervalRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StopPhotoIntervalRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopPhotoIntervalRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StartVideoStreamingRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StartVideoStreamingRequest) */ {
 public:
  inline StartVideoStreamingRequest() : StartVideoStreamingRequest(nullptr) {}
  ~StartVideoStreamingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartVideoStreamingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartVideoStreamingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartVideoStreamingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartVideoStreamingRequest(const StartVideoStreamingRequest& from) : StartVideoStreamingRequest(nullptr, from) {}
  inline StartVideoStreamingRequest(StartVideoStreamingRequest&& from) noexcept
      : StartVideoStreamingRequest(nullptr, std::move(from)) {}
  inline StartVideoStreamingRequest& operator=(const StartVideoStreamingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartVideoStreamingRequest& operator=(StartVideoStreamingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartVideoStreamingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartVideoStreamingRequest* internal_default_instance() {
    return reinterpret_cast<const StartVideoStreamingRequest*>(
        &_StartVideoStreamingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(StartVideoStreamingRequest& a, StartVideoStreamingRequest& b) { a.Swap(&b); }
  inline void Swap(StartVideoStreamingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartVideoStreamingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartVideoStreamingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartVideoStreamingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartVideoStreamingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartVideoStreamingRequest& from) { StartVideoStreamingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartVideoStreamingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StartVideoStreamingRequest"; }

 protected:
  explicit StartVideoStreamingRequest(::google::protobuf::Arena* arena);
  StartVideoStreamingRequest(::google::protobuf::Arena* arena, const StartVideoStreamingRequest& from);
  StartVideoStreamingRequest(::google::protobuf::Arena* arena, StartVideoStreamingRequest&& from) noexcept
      : StartVideoStreamingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kStreamIdFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // int32 stream_id = 2;
  void clear_stream_id() ;
  ::int32_t stream_id() const;
  void set_stream_id(::int32_t value);

  private:
  ::int32_t _internal_stream_id() const;
  void _internal_set_stream_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StartVideoStreamingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartVideoStreamingRequest& from_msg);
    ::int32_t component_id_;
    ::int32_t stream_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StartVideoRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StartVideoRequest) */ {
 public:
  inline StartVideoRequest() : StartVideoRequest(nullptr) {}
  ~StartVideoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartVideoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartVideoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartVideoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartVideoRequest(const StartVideoRequest& from) : StartVideoRequest(nullptr, from) {}
  inline StartVideoRequest(StartVideoRequest&& from) noexcept
      : StartVideoRequest(nullptr, std::move(from)) {}
  inline StartVideoRequest& operator=(const StartVideoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartVideoRequest& operator=(StartVideoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartVideoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartVideoRequest* internal_default_instance() {
    return reinterpret_cast<const StartVideoRequest*>(
        &_StartVideoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(StartVideoRequest& a, StartVideoRequest& b) { a.Swap(&b); }
  inline void Swap(StartVideoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartVideoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartVideoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartVideoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartVideoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartVideoRequest& from) { StartVideoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartVideoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StartVideoRequest"; }

 protected:
  explicit StartVideoRequest(::google::protobuf::Arena* arena);
  StartVideoRequest(::google::protobuf::Arena* arena, const StartVideoRequest& from);
  StartVideoRequest(::google::protobuf::Arena* arena, StartVideoRequest&& from) noexcept
      : StartVideoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StartVideoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartVideoRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StartPhotoIntervalRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StartPhotoIntervalRequest) */ {
 public:
  inline StartPhotoIntervalRequest() : StartPhotoIntervalRequest(nullptr) {}
  ~StartPhotoIntervalRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartPhotoIntervalRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartPhotoIntervalRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartPhotoIntervalRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartPhotoIntervalRequest(const StartPhotoIntervalRequest& from) : StartPhotoIntervalRequest(nullptr, from) {}
  inline StartPhotoIntervalRequest(StartPhotoIntervalRequest&& from) noexcept
      : StartPhotoIntervalRequest(nullptr, std::move(from)) {}
  inline StartPhotoIntervalRequest& operator=(const StartPhotoIntervalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartPhotoIntervalRequest& operator=(StartPhotoIntervalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartPhotoIntervalRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartPhotoIntervalRequest* internal_default_instance() {
    return reinterpret_cast<const StartPhotoIntervalRequest*>(
        &_StartPhotoIntervalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(StartPhotoIntervalRequest& a, StartPhotoIntervalRequest& b) { a.Swap(&b); }
  inline void Swap(StartPhotoIntervalRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartPhotoIntervalRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartPhotoIntervalRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartPhotoIntervalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartPhotoIntervalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartPhotoIntervalRequest& from) { StartPhotoIntervalRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartPhotoIntervalRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StartPhotoIntervalRequest"; }

 protected:
  explicit StartPhotoIntervalRequest(::google::protobuf::Arena* arena);
  StartPhotoIntervalRequest(::google::protobuf::Arena* arena, const StartPhotoIntervalRequest& from);
  StartPhotoIntervalRequest(::google::protobuf::Arena* arena, StartPhotoIntervalRequest&& from) noexcept
      : StartPhotoIntervalRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kIntervalSFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // float interval_s = 2;
  void clear_interval_s() ;
  float interval_s() const;
  void set_interval_s(float value);

  private:
  float _internal_interval_s() const;
  void _internal_set_interval_s(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StartPhotoIntervalRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartPhotoIntervalRequest& from_msg);
    ::int32_t component_id_;
    float interval_s_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SetModeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SetModeRequest) */ {
 public:
  inline SetModeRequest() : SetModeRequest(nullptr) {}
  ~SetModeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetModeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetModeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetModeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetModeRequest(const SetModeRequest& from) : SetModeRequest(nullptr, from) {}
  inline SetModeRequest(SetModeRequest&& from) noexcept
      : SetModeRequest(nullptr, std::move(from)) {}
  inline SetModeRequest& operator=(const SetModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModeRequest& operator=(SetModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModeRequest* internal_default_instance() {
    return reinterpret_cast<const SetModeRequest*>(
        &_SetModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SetModeRequest& a, SetModeRequest& b) { a.Swap(&b); }
  inline void Swap(SetModeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetModeRequest& from) { SetModeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetModeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SetModeRequest"; }

 protected:
  explicit SetModeRequest(::google::protobuf::Arena* arena);
  SetModeRequest(::google::protobuf::Arena* arena, const SetModeRequest& from);
  SetModeRequest(::google::protobuf::Arena* arena, SetModeRequest&& from) noexcept
      : SetModeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kModeFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // .mavsdk.rpc.camera.Mode mode = 2;
  void clear_mode() ;
  ::mavsdk::rpc::camera::Mode mode() const;
  void set_mode(::mavsdk::rpc::camera::Mode value);

  private:
  ::mavsdk::rpc::camera::Mode _internal_mode() const;
  void _internal_set_mode(::mavsdk::rpc::camera::Mode value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SetModeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetModeRequest& from_msg);
    ::int32_t component_id_;
    int mode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ResetSettingsRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ResetSettingsRequest) */ {
 public:
  inline ResetSettingsRequest() : ResetSettingsRequest(nullptr) {}
  ~ResetSettingsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResetSettingsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResetSettingsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResetSettingsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResetSettingsRequest(const ResetSettingsRequest& from) : ResetSettingsRequest(nullptr, from) {}
  inline ResetSettingsRequest(ResetSettingsRequest&& from) noexcept
      : ResetSettingsRequest(nullptr, std::move(from)) {}
  inline ResetSettingsRequest& operator=(const ResetSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetSettingsRequest& operator=(ResetSettingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetSettingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const ResetSettingsRequest*>(
        &_ResetSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(ResetSettingsRequest& a, ResetSettingsRequest& b) { a.Swap(&b); }
  inline void Swap(ResetSettingsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetSettingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetSettingsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResetSettingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResetSettingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResetSettingsRequest& from) { ResetSettingsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResetSettingsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ResetSettingsRequest"; }

 protected:
  explicit ResetSettingsRequest(::google::protobuf::Arena* arena);
  ResetSettingsRequest(::google::protobuf::Arena* arena, const ResetSettingsRequest& from);
  ResetSettingsRequest(::google::protobuf::Arena* arena, ResetSettingsRequest&& from) noexcept
      : ResetSettingsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ResetSettingsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResetSettingsRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class Quaternion final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.Quaternion) */ {
 public:
  inline Quaternion() : Quaternion(nullptr) {}
  ~Quaternion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Quaternion* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Quaternion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Quaternion(
      ::google::protobuf::internal::ConstantInitialized);

  inline Quaternion(const Quaternion& from) : Quaternion(nullptr, from) {}
  inline Quaternion(Quaternion&& from) noexcept
      : Quaternion(nullptr, std::move(from)) {}
  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quaternion& default_instance() {
    return *internal_default_instance();
  }
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
        &_Quaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 85;
  friend void swap(Quaternion& a, Quaternion& b) { a.Swap(&b); }
  inline void Swap(Quaternion* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quaternion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Quaternion* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Quaternion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Quaternion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Quaternion& from) { Quaternion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Quaternion* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.Quaternion"; }

 protected:
  explicit Quaternion(::google::protobuf::Arena* arena);
  Quaternion(::google::protobuf::Arena* arena, const Quaternion& from);
  Quaternion(::google::protobuf::Arena* arena, Quaternion&& from) noexcept
      : Quaternion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
  };
  // float w = 1;
  void clear_w() ;
  float w() const;
  void set_w(float value);

  private:
  float _internal_w() const;
  void _internal_set_w(float value);

  public:
  // float x = 2;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 3;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 4;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.Quaternion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Quaternion& from_msg);
    float w_;
    float x_;
    float y_;
    float z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class Position final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.Position) */ {
 public:
  inline Position() : Position(nullptr) {}
  ~Position() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Position* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Position));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Position(
      ::google::protobuf::internal::ConstantInitialized);

  inline Position(const Position& from) : Position(nullptr, from) {}
  inline Position(Position&& from) noexcept
      : Position(nullptr, std::move(from)) {}
  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Position& operator=(Position&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Position& default_instance() {
    return *internal_default_instance();
  }
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
        &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 84;
  friend void swap(Position& a, Position& b) { a.Swap(&b); }
  inline void Swap(Position* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Position* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Position* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Position>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Position& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Position& from) { Position::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Position* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.Position"; }

 protected:
  explicit Position(::google::protobuf::Arena* arena);
  Position(::google::protobuf::Arena* arena, const Position& from);
  Position(::google::protobuf::Arena* arena, Position&& from) noexcept
      : Position(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLatitudeDegFieldNumber = 1,
    kLongitudeDegFieldNumber = 2,
    kAbsoluteAltitudeMFieldNumber = 3,
    kRelativeAltitudeMFieldNumber = 4,
  };
  // double latitude_deg = 1;
  void clear_latitude_deg() ;
  double latitude_deg() const;
  void set_latitude_deg(double value);

  private:
  double _internal_latitude_deg() const;
  void _internal_set_latitude_deg(double value);

  public:
  // double longitude_deg = 2;
  void clear_longitude_deg() ;
  double longitude_deg() const;
  void set_longitude_deg(double value);

  private:
  double _internal_longitude_deg() const;
  void _internal_set_longitude_deg(double value);

  public:
  // float absolute_altitude_m = 3;
  void clear_absolute_altitude_m() ;
  float absolute_altitude_m() const;
  void set_absolute_altitude_m(float value);

  private:
  float _internal_absolute_altitude_m() const;
  void _internal_set_absolute_altitude_m(float value);

  public:
  // float relative_altitude_m = 4;
  void clear_relative_altitude_m() ;
  float relative_altitude_m() const;
  void set_relative_altitude_m(float value);

  private:
  float _internal_relative_altitude_m() const;
  void _internal_set_relative_altitude_m(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.Position)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Position& from_msg);
    double latitude_deg_;
    double longitude_deg_;
    float absolute_altitude_m_;
    float relative_altitude_m_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class Option final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.Option) */ {
 public:
  inline Option() : Option(nullptr) {}
  ~Option() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Option* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Option));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Option(
      ::google::protobuf::internal::ConstantInitialized);

  inline Option(const Option& from) : Option(nullptr, from) {}
  inline Option(Option&& from) noexcept
      : Option(nullptr, std::move(from)) {}
  inline Option& operator=(const Option& from) {
    CopyFrom(from);
    return *this;
  }
  inline Option& operator=(Option&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Option& default_instance() {
    return *internal_default_instance();
  }
  static inline const Option* internal_default_instance() {
    return reinterpret_cast<const Option*>(
        &_Option_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Option& a, Option& b) { a.Swap(&b); }
  inline void Swap(Option* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Option* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Option* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Option>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Option& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Option& from) { Option::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Option* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.Option"; }

 protected:
  explicit Option(::google::protobuf::Arena* arena);
  Option(::google::protobuf::Arena* arena, const Option& from);
  Option(::google::protobuf::Arena* arena, Option&& from) noexcept
      : Option(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionIdFieldNumber = 1,
    kOptionDescriptionFieldNumber = 2,
  };
  // string option_id = 1;
  void clear_option_id() ;
  const std::string& option_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_option_id(Arg_&& arg, Args_... args);
  std::string* mutable_option_id();
  PROTOBUF_NODISCARD std::string* release_option_id();
  void set_allocated_option_id(std::string* value);

  private:
  const std::string& _internal_option_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_option_id(
      const std::string& value);
  std::string* _internal_mutable_option_id();

  public:
  // string option_description = 2;
  void clear_option_description() ;
  const std::string& option_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_option_description(Arg_&& arg, Args_... args);
  std::string* mutable_option_description();
  PROTOBUF_NODISCARD std::string* release_option_description();
  void set_allocated_option_description(std::string* value);

  private:
  const std::string& _internal_option_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_option_description(
      const std::string& value);
  std::string* _internal_mutable_option_description();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.Option)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Option& from_msg);
    ::google::protobuf::internal::ArenaStringPtr option_id_;
    ::google::protobuf::internal::ArenaStringPtr option_description_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ModeUpdate final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ModeUpdate) */ {
 public:
  inline ModeUpdate() : ModeUpdate(nullptr) {}
  ~ModeUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModeUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModeUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModeUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModeUpdate(const ModeUpdate& from) : ModeUpdate(nullptr, from) {}
  inline ModeUpdate(ModeUpdate&& from) noexcept
      : ModeUpdate(nullptr, std::move(from)) {}
  inline ModeUpdate& operator=(const ModeUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModeUpdate& operator=(ModeUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModeUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModeUpdate* internal_default_instance() {
    return reinterpret_cast<const ModeUpdate*>(
        &_ModeUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(ModeUpdate& a, ModeUpdate& b) { a.Swap(&b); }
  inline void Swap(ModeUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModeUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModeUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModeUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModeUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModeUpdate& from) { ModeUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModeUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ModeUpdate"; }

 protected:
  explicit ModeUpdate(::google::protobuf::Arena* arena);
  ModeUpdate(::google::protobuf::Arena* arena, const ModeUpdate& from);
  ModeUpdate(::google::protobuf::Arena* arena, ModeUpdate&& from) noexcept
      : ModeUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kModeFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // .mavsdk.rpc.camera.Mode mode = 2;
  void clear_mode() ;
  ::mavsdk::rpc::camera::Mode mode() const;
  void set_mode(::mavsdk::rpc::camera::Mode value);

  private:
  ::mavsdk::rpc::camera::Mode _internal_mode() const;
  void _internal_set_mode(::mavsdk::rpc::camera::Mode value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ModeUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModeUpdate& from_msg);
    ::int32_t component_id_;
    int mode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ListPhotosRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ListPhotosRequest) */ {
 public:
  inline ListPhotosRequest() : ListPhotosRequest(nullptr) {}
  ~ListPhotosRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListPhotosRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListPhotosRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPhotosRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPhotosRequest(const ListPhotosRequest& from) : ListPhotosRequest(nullptr, from) {}
  inline ListPhotosRequest(ListPhotosRequest&& from) noexcept
      : ListPhotosRequest(nullptr, std::move(from)) {}
  inline ListPhotosRequest& operator=(const ListPhotosRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPhotosRequest& operator=(ListPhotosRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPhotosRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPhotosRequest* internal_default_instance() {
    return reinterpret_cast<const ListPhotosRequest*>(
        &_ListPhotosRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ListPhotosRequest& a, ListPhotosRequest& b) { a.Swap(&b); }
  inline void Swap(ListPhotosRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPhotosRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPhotosRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListPhotosRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPhotosRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPhotosRequest& from) { ListPhotosRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListPhotosRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ListPhotosRequest"; }

 protected:
  explicit ListPhotosRequest(::google::protobuf::Arena* arena);
  ListPhotosRequest(::google::protobuf::Arena* arena, const ListPhotosRequest& from);
  ListPhotosRequest(::google::protobuf::Arena* arena, ListPhotosRequest&& from) noexcept
      : ListPhotosRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kPhotosRangeFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // .mavsdk.rpc.camera.PhotosRange photos_range = 2;
  void clear_photos_range() ;
  ::mavsdk::rpc::camera::PhotosRange photos_range() const;
  void set_photos_range(::mavsdk::rpc::camera::PhotosRange value);

  private:
  ::mavsdk::rpc::camera::PhotosRange _internal_photos_range() const;
  void _internal_set_photos_range(::mavsdk::rpc::camera::PhotosRange value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ListPhotosRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPhotosRequest& from_msg);
    ::int32_t component_id_;
    int photos_range_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class Information final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.Information) */ {
 public:
  inline Information() : Information(nullptr) {}
  ~Information() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Information* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Information));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Information(
      ::google::protobuf::internal::ConstantInitialized);

  inline Information(const Information& from) : Information(nullptr, from) {}
  inline Information(Information&& from) noexcept
      : Information(nullptr, std::move(from)) {}
  inline Information& operator=(const Information& from) {
    CopyFrom(from);
    return *this;
  }
  inline Information& operator=(Information&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Information& default_instance() {
    return *internal_default_instance();
  }
  static inline const Information* internal_default_instance() {
    return reinterpret_cast<const Information*>(
        &_Information_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 88;
  friend void swap(Information& a, Information& b) { a.Swap(&b); }
  inline void Swap(Information* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Information* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Information* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Information>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Information& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Information& from) { Information::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Information* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.Information"; }

 protected:
  explicit Information(::google::protobuf::Arena* arena);
  Information(::google::protobuf::Arena* arena, const Information& from);
  Information(::google::protobuf::Arena* arena, Information&& from) noexcept
      : Information(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVendorNameFieldNumber = 2,
    kModelNameFieldNumber = 3,
    kComponentIdFieldNumber = 1,
    kFocalLengthMmFieldNumber = 4,
    kHorizontalSensorSizeMmFieldNumber = 5,
    kVerticalSensorSizeMmFieldNumber = 6,
    kHorizontalResolutionPxFieldNumber = 7,
    kVerticalResolutionPxFieldNumber = 8,
  };
  // string vendor_name = 2;
  void clear_vendor_name() ;
  const std::string& vendor_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vendor_name(Arg_&& arg, Args_... args);
  std::string* mutable_vendor_name();
  PROTOBUF_NODISCARD std::string* release_vendor_name();
  void set_allocated_vendor_name(std::string* value);

  private:
  const std::string& _internal_vendor_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vendor_name(
      const std::string& value);
  std::string* _internal_mutable_vendor_name();

  public:
  // string model_name = 3;
  void clear_model_name() ;
  const std::string& model_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_name(Arg_&& arg, Args_... args);
  std::string* mutable_model_name();
  PROTOBUF_NODISCARD std::string* release_model_name();
  void set_allocated_model_name(std::string* value);

  private:
  const std::string& _internal_model_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_name(
      const std::string& value);
  std::string* _internal_mutable_model_name();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // float focal_length_mm = 4;
  void clear_focal_length_mm() ;
  float focal_length_mm() const;
  void set_focal_length_mm(float value);

  private:
  float _internal_focal_length_mm() const;
  void _internal_set_focal_length_mm(float value);

  public:
  // float horizontal_sensor_size_mm = 5;
  void clear_horizontal_sensor_size_mm() ;
  float horizontal_sensor_size_mm() const;
  void set_horizontal_sensor_size_mm(float value);

  private:
  float _internal_horizontal_sensor_size_mm() const;
  void _internal_set_horizontal_sensor_size_mm(float value);

  public:
  // float vertical_sensor_size_mm = 6;
  void clear_vertical_sensor_size_mm() ;
  float vertical_sensor_size_mm() const;
  void set_vertical_sensor_size_mm(float value);

  private:
  float _internal_vertical_sensor_size_mm() const;
  void _internal_set_vertical_sensor_size_mm(float value);

  public:
  // uint32 horizontal_resolution_px = 7;
  void clear_horizontal_resolution_px() ;
  ::uint32_t horizontal_resolution_px() const;
  void set_horizontal_resolution_px(::uint32_t value);

  private:
  ::uint32_t _internal_horizontal_resolution_px() const;
  void _internal_set_horizontal_resolution_px(::uint32_t value);

  public:
  // uint32 vertical_resolution_px = 8;
  void clear_vertical_resolution_px() ;
  ::uint32_t vertical_resolution_px() const;
  void set_vertical_resolution_px(::uint32_t value);

  private:
  ::uint32_t _internal_vertical_resolution_px() const;
  void _internal_set_vertical_resolution_px(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.Information)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Information& from_msg);
    ::google::protobuf::internal::ArenaStringPtr vendor_name_;
    ::google::protobuf::internal::ArenaStringPtr model_name_;
    ::int32_t component_id_;
    float focal_length_mm_;
    float horizontal_sensor_size_mm_;
    float vertical_sensor_size_mm_;
    ::uint32_t horizontal_resolution_px_;
    ::uint32_t vertical_resolution_px_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetVideoStreamInfoRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetVideoStreamInfoRequest) */ {
 public:
  inline GetVideoStreamInfoRequest() : GetVideoStreamInfoRequest(nullptr) {}
  ~GetVideoStreamInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetVideoStreamInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetVideoStreamInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVideoStreamInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVideoStreamInfoRequest(const GetVideoStreamInfoRequest& from) : GetVideoStreamInfoRequest(nullptr, from) {}
  inline GetVideoStreamInfoRequest(GetVideoStreamInfoRequest&& from) noexcept
      : GetVideoStreamInfoRequest(nullptr, std::move(from)) {}
  inline GetVideoStreamInfoRequest& operator=(const GetVideoStreamInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVideoStreamInfoRequest& operator=(GetVideoStreamInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVideoStreamInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVideoStreamInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetVideoStreamInfoRequest*>(
        &_GetVideoStreamInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(GetVideoStreamInfoRequest& a, GetVideoStreamInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetVideoStreamInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVideoStreamInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVideoStreamInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetVideoStreamInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVideoStreamInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVideoStreamInfoRequest& from) { GetVideoStreamInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetVideoStreamInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetVideoStreamInfoRequest"; }

 protected:
  explicit GetVideoStreamInfoRequest(::google::protobuf::Arena* arena);
  GetVideoStreamInfoRequest(::google::protobuf::Arena* arena, const GetVideoStreamInfoRequest& from);
  GetVideoStreamInfoRequest(::google::protobuf::Arena* arena, GetVideoStreamInfoRequest&& from) noexcept
      : GetVideoStreamInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVideoStreamInfoRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetStorageRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetStorageRequest) */ {
 public:
  inline GetStorageRequest() : GetStorageRequest(nullptr) {}
  ~GetStorageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetStorageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetStorageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStorageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStorageRequest(const GetStorageRequest& from) : GetStorageRequest(nullptr, from) {}
  inline GetStorageRequest(GetStorageRequest&& from) noexcept
      : GetStorageRequest(nullptr, std::move(from)) {}
  inline GetStorageRequest& operator=(const GetStorageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStorageRequest& operator=(GetStorageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStorageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStorageRequest* internal_default_instance() {
    return reinterpret_cast<const GetStorageRequest*>(
        &_GetStorageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(GetStorageRequest& a, GetStorageRequest& b) { a.Swap(&b); }
  inline void Swap(GetStorageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStorageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStorageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetStorageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStorageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStorageRequest& from) { GetStorageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetStorageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetStorageRequest"; }

 protected:
  explicit GetStorageRequest(::google::protobuf::Arena* arena);
  GetStorageRequest(::google::protobuf::Arena* arena, const GetStorageRequest& from);
  GetStorageRequest(::google::protobuf::Arena* arena, GetStorageRequest&& from) noexcept
      : GetStorageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetStorageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStorageRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetPossibleSettingOptionsRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest) */ {
 public:
  inline GetPossibleSettingOptionsRequest() : GetPossibleSettingOptionsRequest(nullptr) {}
  ~GetPossibleSettingOptionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetPossibleSettingOptionsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetPossibleSettingOptionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPossibleSettingOptionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetPossibleSettingOptionsRequest(const GetPossibleSettingOptionsRequest& from) : GetPossibleSettingOptionsRequest(nullptr, from) {}
  inline GetPossibleSettingOptionsRequest(GetPossibleSettingOptionsRequest&& from) noexcept
      : GetPossibleSettingOptionsRequest(nullptr, std::move(from)) {}
  inline GetPossibleSettingOptionsRequest& operator=(const GetPossibleSettingOptionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPossibleSettingOptionsRequest& operator=(GetPossibleSettingOptionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPossibleSettingOptionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPossibleSettingOptionsRequest* internal_default_instance() {
    return reinterpret_cast<const GetPossibleSettingOptionsRequest*>(
        &_GetPossibleSettingOptionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(GetPossibleSettingOptionsRequest& a, GetPossibleSettingOptionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetPossibleSettingOptionsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPossibleSettingOptionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPossibleSettingOptionsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetPossibleSettingOptionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPossibleSettingOptionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPossibleSettingOptionsRequest& from) { GetPossibleSettingOptionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetPossibleSettingOptionsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetPossibleSettingOptionsRequest"; }

 protected:
  explicit GetPossibleSettingOptionsRequest(::google::protobuf::Arena* arena);
  GetPossibleSettingOptionsRequest(::google::protobuf::Arena* arena, const GetPossibleSettingOptionsRequest& from);
  GetPossibleSettingOptionsRequest(::google::protobuf::Arena* arena, GetPossibleSettingOptionsRequest&& from) noexcept
      : GetPossibleSettingOptionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetPossibleSettingOptionsRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetModeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetModeRequest) */ {
 public:
  inline GetModeRequest() : GetModeRequest(nullptr) {}
  ~GetModeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetModeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetModeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetModeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetModeRequest(const GetModeRequest& from) : GetModeRequest(nullptr, from) {}
  inline GetModeRequest(GetModeRequest&& from) noexcept
      : GetModeRequest(nullptr, std::move(from)) {}
  inline GetModeRequest& operator=(const GetModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModeRequest& operator=(GetModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModeRequest* internal_default_instance() {
    return reinterpret_cast<const GetModeRequest*>(
        &_GetModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(GetModeRequest& a, GetModeRequest& b) { a.Swap(&b); }
  inline void Swap(GetModeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetModeRequest& from) { GetModeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetModeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetModeRequest"; }

 protected:
  explicit GetModeRequest(::google::protobuf::Arena* arena);
  GetModeRequest(::google::protobuf::Arena* arena, const GetModeRequest& from);
  GetModeRequest(::google::protobuf::Arena* arena, GetModeRequest&& from) noexcept
      : GetModeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetModeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetModeRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetCurrentSettingsRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetCurrentSettingsRequest) */ {
 public:
  inline GetCurrentSettingsRequest() : GetCurrentSettingsRequest(nullptr) {}
  ~GetCurrentSettingsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCurrentSettingsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCurrentSettingsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCurrentSettingsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCurrentSettingsRequest(const GetCurrentSettingsRequest& from) : GetCurrentSettingsRequest(nullptr, from) {}
  inline GetCurrentSettingsRequest(GetCurrentSettingsRequest&& from) noexcept
      : GetCurrentSettingsRequest(nullptr, std::move(from)) {}
  inline GetCurrentSettingsRequest& operator=(const GetCurrentSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCurrentSettingsRequest& operator=(GetCurrentSettingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCurrentSettingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCurrentSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const GetCurrentSettingsRequest*>(
        &_GetCurrentSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(GetCurrentSettingsRequest& a, GetCurrentSettingsRequest& b) { a.Swap(&b); }
  inline void Swap(GetCurrentSettingsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCurrentSettingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCurrentSettingsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCurrentSettingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCurrentSettingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCurrentSettingsRequest& from) { GetCurrentSettingsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCurrentSettingsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetCurrentSettingsRequest"; }

 protected:
  explicit GetCurrentSettingsRequest(::google::protobuf::Arena* arena);
  GetCurrentSettingsRequest(::google::protobuf::Arena* arena, const GetCurrentSettingsRequest& from);
  GetCurrentSettingsRequest(::google::protobuf::Arena* arena, GetCurrentSettingsRequest&& from) noexcept
      : GetCurrentSettingsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetCurrentSettingsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCurrentSettingsRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FormatStorageRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FormatStorageRequest) */ {
 public:
  inline FormatStorageRequest() : FormatStorageRequest(nullptr) {}
  ~FormatStorageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FormatStorageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FormatStorageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FormatStorageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FormatStorageRequest(const FormatStorageRequest& from) : FormatStorageRequest(nullptr, from) {}
  inline FormatStorageRequest(FormatStorageRequest&& from) noexcept
      : FormatStorageRequest(nullptr, std::move(from)) {}
  inline FormatStorageRequest& operator=(const FormatStorageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FormatStorageRequest& operator=(FormatStorageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FormatStorageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FormatStorageRequest* internal_default_instance() {
    return reinterpret_cast<const FormatStorageRequest*>(
        &_FormatStorageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(FormatStorageRequest& a, FormatStorageRequest& b) { a.Swap(&b); }
  inline void Swap(FormatStorageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FormatStorageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FormatStorageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FormatStorageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FormatStorageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FormatStorageRequest& from) { FormatStorageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FormatStorageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FormatStorageRequest"; }

 protected:
  explicit FormatStorageRequest(::google::protobuf::Arena* arena);
  FormatStorageRequest(::google::protobuf::Arena* arena, const FormatStorageRequest& from);
  FormatStorageRequest(::google::protobuf::Arena* arena, FormatStorageRequest&& from) noexcept
      : FormatStorageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kStorageIdFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // int32 storage_id = 2;
  void clear_storage_id() ;
  ::int32_t storage_id() const;
  void set_storage_id(::int32_t value);

  private:
  ::int32_t _internal_storage_id() const;
  void _internal_set_storage_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FormatStorageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FormatStorageRequest& from_msg);
    ::int32_t component_id_;
    ::int32_t storage_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusStopRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusStopRequest) */ {
 public:
  inline FocusStopRequest() : FocusStopRequest(nullptr) {}
  ~FocusStopRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusStopRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusStopRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusStopRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusStopRequest(const FocusStopRequest& from) : FocusStopRequest(nullptr, from) {}
  inline FocusStopRequest(FocusStopRequest&& from) noexcept
      : FocusStopRequest(nullptr, std::move(from)) {}
  inline FocusStopRequest& operator=(const FocusStopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusStopRequest& operator=(FocusStopRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusStopRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusStopRequest* internal_default_instance() {
    return reinterpret_cast<const FocusStopRequest*>(
        &_FocusStopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 79;
  friend void swap(FocusStopRequest& a, FocusStopRequest& b) { a.Swap(&b); }
  inline void Swap(FocusStopRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusStopRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusStopRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusStopRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusStopRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusStopRequest& from) { FocusStopRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusStopRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusStopRequest"; }

 protected:
  explicit FocusStopRequest(::google::protobuf::Arena* arena);
  FocusStopRequest(::google::protobuf::Arena* arena, const FocusStopRequest& from);
  FocusStopRequest(::google::protobuf::Arena* arena, FocusStopRequest&& from) noexcept
      : FocusStopRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusStopRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusStopRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusRangeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusRangeRequest) */ {
 public:
  inline FocusRangeRequest() : FocusRangeRequest(nullptr) {}
  ~FocusRangeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusRangeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusRangeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusRangeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusRangeRequest(const FocusRangeRequest& from) : FocusRangeRequest(nullptr, from) {}
  inline FocusRangeRequest(FocusRangeRequest&& from) noexcept
      : FocusRangeRequest(nullptr, std::move(from)) {}
  inline FocusRangeRequest& operator=(const FocusRangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusRangeRequest& operator=(FocusRangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusRangeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusRangeRequest* internal_default_instance() {
    return reinterpret_cast<const FocusRangeRequest*>(
        &_FocusRangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 81;
  friend void swap(FocusRangeRequest& a, FocusRangeRequest& b) { a.Swap(&b); }
  inline void Swap(FocusRangeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusRangeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusRangeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusRangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusRangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusRangeRequest& from) { FocusRangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusRangeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusRangeRequest"; }

 protected:
  explicit FocusRangeRequest(::google::protobuf::Arena* arena);
  FocusRangeRequest(::google::protobuf::Arena* arena, const FocusRangeRequest& from);
  FocusRangeRequest(::google::protobuf::Arena* arena, FocusRangeRequest&& from) noexcept
      : FocusRangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
    kRangeFieldNumber = 2,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // float range = 2;
  void clear_range() ;
  float range() const;
  void set_range(float value);

  private:
  float _internal_range() const;
  void _internal_set_range(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusRangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusRangeRequest& from_msg);
    ::int32_t component_id_;
    float range_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusOutStartRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusOutStartRequest) */ {
 public:
  inline FocusOutStartRequest() : FocusOutStartRequest(nullptr) {}
  ~FocusOutStartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusOutStartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusOutStartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusOutStartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusOutStartRequest(const FocusOutStartRequest& from) : FocusOutStartRequest(nullptr, from) {}
  inline FocusOutStartRequest(FocusOutStartRequest&& from) noexcept
      : FocusOutStartRequest(nullptr, std::move(from)) {}
  inline FocusOutStartRequest& operator=(const FocusOutStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusOutStartRequest& operator=(FocusOutStartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusOutStartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusOutStartRequest* internal_default_instance() {
    return reinterpret_cast<const FocusOutStartRequest*>(
        &_FocusOutStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 77;
  friend void swap(FocusOutStartRequest& a, FocusOutStartRequest& b) { a.Swap(&b); }
  inline void Swap(FocusOutStartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusOutStartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusOutStartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusOutStartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusOutStartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusOutStartRequest& from) { FocusOutStartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusOutStartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusOutStartRequest"; }

 protected:
  explicit FocusOutStartRequest(::google::protobuf::Arena* arena);
  FocusOutStartRequest(::google::protobuf::Arena* arena, const FocusOutStartRequest& from);
  FocusOutStartRequest(::google::protobuf::Arena* arena, FocusOutStartRequest&& from) noexcept
      : FocusOutStartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusOutStartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusOutStartRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusInStartRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusInStartRequest) */ {
 public:
  inline FocusInStartRequest() : FocusInStartRequest(nullptr) {}
  ~FocusInStartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusInStartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusInStartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusInStartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusInStartRequest(const FocusInStartRequest& from) : FocusInStartRequest(nullptr, from) {}
  inline FocusInStartRequest(FocusInStartRequest&& from) noexcept
      : FocusInStartRequest(nullptr, std::move(from)) {}
  inline FocusInStartRequest& operator=(const FocusInStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusInStartRequest& operator=(FocusInStartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusInStartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusInStartRequest* internal_default_instance() {
    return reinterpret_cast<const FocusInStartRequest*>(
        &_FocusInStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(FocusInStartRequest& a, FocusInStartRequest& b) { a.Swap(&b); }
  inline void Swap(FocusInStartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusInStartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusInStartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusInStartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusInStartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusInStartRequest& from) { FocusInStartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusInStartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusInStartRequest"; }

 protected:
  explicit FocusInStartRequest(::google::protobuf::Arena* arena);
  FocusInStartRequest(::google::protobuf::Arena* arena, const FocusInStartRequest& from);
  FocusInStartRequest(::google::protobuf::Arena* arena, FocusInStartRequest&& from) noexcept
      : FocusInStartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentIdFieldNumber = 1,
  };
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusInStartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusInStartRequest& from_msg);
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class EulerAngle final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.EulerAngle) */ {
 public:
  inline EulerAngle() : EulerAngle(nullptr) {}
  ~EulerAngle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EulerAngle* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EulerAngle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EulerAngle(
      ::google::protobuf::internal::ConstantInitialized);

  inline EulerAngle(const EulerAngle& from) : EulerAngle(nullptr, from) {}
  inline EulerAngle(EulerAngle&& from) noexcept
      : EulerAngle(nullptr, std::move(from)) {}
  inline EulerAngle& operator=(const EulerAngle& from) {
    CopyFrom(from);
    return *this;
  }
  inline EulerAngle& operator=(EulerAngle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EulerAngle& default_instance() {
    return *internal_default_instance();
  }
  static inline const EulerAngle* internal_default_instance() {
    return reinterpret_cast<const EulerAngle*>(
        &_EulerAngle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 86;
  friend void swap(EulerAngle& a, EulerAngle& b) { a.Swap(&b); }
  inline void Swap(EulerAngle* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EulerAngle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EulerAngle* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EulerAngle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EulerAngle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EulerAngle& from) { EulerAngle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EulerAngle* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.EulerAngle"; }

 protected:
  explicit EulerAngle(::google::protobuf::Arena* arena);
  EulerAngle(::google::protobuf::Arena* arena, const EulerAngle& from);
  EulerAngle(::google::protobuf::Arena* arena, EulerAngle&& from) noexcept
      : EulerAngle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRollDegFieldNumber = 1,
    kPitchDegFieldNumber = 2,
    kYawDegFieldNumber = 3,
  };
  // float roll_deg = 1;
  void clear_roll_deg() ;
  float roll_deg() const;
  void set_roll_deg(float value);

  private:
  float _internal_roll_deg() const;
  void _internal_set_roll_deg(float value);

  public:
  // float pitch_deg = 2;
  void clear_pitch_deg() ;
  float pitch_deg() const;
  void set_pitch_deg(float value);

  private:
  float _internal_pitch_deg() const;
  void _internal_set_pitch_deg(float value);

  public:
  // float yaw_deg = 3;
  void clear_yaw_deg() ;
  float yaw_deg() const;
  void set_yaw_deg(float value);

  private:
  float _internal_yaw_deg() const;
  void _internal_set_yaw_deg(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.EulerAngle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EulerAngle& from_msg);
    float roll_deg_;
    float pitch_deg_;
    float yaw_deg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CameraResult final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CameraResult) */ {
 public:
  inline CameraResult() : CameraResult(nullptr) {}
  ~CameraResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraResult(const CameraResult& from) : CameraResult(nullptr, from) {}
  inline CameraResult(CameraResult&& from) noexcept
      : CameraResult(nullptr, std::move(from)) {}
  inline CameraResult& operator=(const CameraResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraResult& operator=(CameraResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraResult* internal_default_instance() {
    return reinterpret_cast<const CameraResult*>(
        &_CameraResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 83;
  friend void swap(CameraResult& a, CameraResult& b) { a.Swap(&b); }
  inline void Swap(CameraResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraResult& from) { CameraResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CameraResult"; }

 protected:
  explicit CameraResult(::google::protobuf::Arena* arena);
  CameraResult(::google::protobuf::Arena* arena, const CameraResult& from);
  CameraResult(::google::protobuf::Arena* arena, CameraResult&& from) noexcept
      : CameraResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Result = CameraResult_Result;
  static constexpr Result RESULT_UNKNOWN = CameraResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = CameraResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_IN_PROGRESS = CameraResult_Result_RESULT_IN_PROGRESS;
  static constexpr Result RESULT_BUSY = CameraResult_Result_RESULT_BUSY;
  static constexpr Result RESULT_DENIED = CameraResult_Result_RESULT_DENIED;
  static constexpr Result RESULT_ERROR = CameraResult_Result_RESULT_ERROR;
  static constexpr Result RESULT_TIMEOUT = CameraResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_WRONG_ARGUMENT = CameraResult_Result_RESULT_WRONG_ARGUMENT;
  static constexpr Result RESULT_NO_SYSTEM = CameraResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_PROTOCOL_UNSUPPORTED = CameraResult_Result_RESULT_PROTOCOL_UNSUPPORTED;
  static constexpr Result RESULT_UNAVAILABLE = CameraResult_Result_RESULT_UNAVAILABLE;
  static constexpr Result RESULT_CAMERA_ID_INVALID = CameraResult_Result_RESULT_CAMERA_ID_INVALID;
  static constexpr Result RESULT_ACTION_UNSUPPORTED = CameraResult_Result_RESULT_ACTION_UNSUPPORTED;
  static inline bool Result_IsValid(int value) {
    return CameraResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = CameraResult_Result_Result_MIN;
  static constexpr Result Result_MAX = CameraResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = CameraResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return CameraResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return CameraResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return CameraResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.camera.CameraResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::camera::CameraResult_Result result() const;
  void set_result(::mavsdk::rpc::camera::CameraResult_Result value);

  private:
  ::mavsdk::rpc::camera::CameraResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::camera::CameraResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CameraResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomStopResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomStopResponse) */ {
 public:
  inline ZoomStopResponse() : ZoomStopResponse(nullptr) {}
  ~ZoomStopResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomStopResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomStopResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomStopResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomStopResponse(const ZoomStopResponse& from) : ZoomStopResponse(nullptr, from) {}
  inline ZoomStopResponse(ZoomStopResponse&& from) noexcept
      : ZoomStopResponse(nullptr, std::move(from)) {}
  inline ZoomStopResponse& operator=(const ZoomStopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomStopResponse& operator=(ZoomStopResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomStopResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomStopResponse* internal_default_instance() {
    return reinterpret_cast<const ZoomStopResponse*>(
        &_ZoomStopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(ZoomStopResponse& a, ZoomStopResponse& b) { a.Swap(&b); }
  inline void Swap(ZoomStopResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomStopResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomStopResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomStopResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomStopResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomStopResponse& from) { ZoomStopResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomStopResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomStopResponse"; }

 protected:
  explicit ZoomStopResponse(::google::protobuf::Arena* arena);
  ZoomStopResponse(::google::protobuf::Arena* arena, const ZoomStopResponse& from);
  ZoomStopResponse(::google::protobuf::Arena* arena, ZoomStopResponse&& from) noexcept
      : ZoomStopResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomStopResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomStopResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomRangeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomRangeResponse) */ {
 public:
  inline ZoomRangeResponse() : ZoomRangeResponse(nullptr) {}
  ~ZoomRangeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomRangeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomRangeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomRangeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomRangeResponse(const ZoomRangeResponse& from) : ZoomRangeResponse(nullptr, from) {}
  inline ZoomRangeResponse(ZoomRangeResponse&& from) noexcept
      : ZoomRangeResponse(nullptr, std::move(from)) {}
  inline ZoomRangeResponse& operator=(const ZoomRangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomRangeResponse& operator=(ZoomRangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomRangeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomRangeResponse* internal_default_instance() {
    return reinterpret_cast<const ZoomRangeResponse*>(
        &_ZoomRangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(ZoomRangeResponse& a, ZoomRangeResponse& b) { a.Swap(&b); }
  inline void Swap(ZoomRangeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomRangeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomRangeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomRangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomRangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomRangeResponse& from) { ZoomRangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomRangeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomRangeResponse"; }

 protected:
  explicit ZoomRangeResponse(::google::protobuf::Arena* arena);
  ZoomRangeResponse(::google::protobuf::Arena* arena, const ZoomRangeResponse& from);
  ZoomRangeResponse(::google::protobuf::Arena* arena, ZoomRangeResponse&& from) noexcept
      : ZoomRangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomRangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomRangeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomOutStartResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomOutStartResponse) */ {
 public:
  inline ZoomOutStartResponse() : ZoomOutStartResponse(nullptr) {}
  ~ZoomOutStartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomOutStartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomOutStartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomOutStartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomOutStartResponse(const ZoomOutStartResponse& from) : ZoomOutStartResponse(nullptr, from) {}
  inline ZoomOutStartResponse(ZoomOutStartResponse&& from) noexcept
      : ZoomOutStartResponse(nullptr, std::move(from)) {}
  inline ZoomOutStartResponse& operator=(const ZoomOutStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomOutStartResponse& operator=(ZoomOutStartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomOutStartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomOutStartResponse* internal_default_instance() {
    return reinterpret_cast<const ZoomOutStartResponse*>(
        &_ZoomOutStartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(ZoomOutStartResponse& a, ZoomOutStartResponse& b) { a.Swap(&b); }
  inline void Swap(ZoomOutStartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomOutStartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomOutStartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomOutStartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomOutStartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomOutStartResponse& from) { ZoomOutStartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomOutStartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomOutStartResponse"; }

 protected:
  explicit ZoomOutStartResponse(::google::protobuf::Arena* arena);
  ZoomOutStartResponse(::google::protobuf::Arena* arena, const ZoomOutStartResponse& from);
  ZoomOutStartResponse(::google::protobuf::Arena* arena, ZoomOutStartResponse&& from) noexcept
      : ZoomOutStartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomOutStartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomOutStartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ZoomInStartResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ZoomInStartResponse) */ {
 public:
  inline ZoomInStartResponse() : ZoomInStartResponse(nullptr) {}
  ~ZoomInStartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZoomInStartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZoomInStartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZoomInStartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ZoomInStartResponse(const ZoomInStartResponse& from) : ZoomInStartResponse(nullptr, from) {}
  inline ZoomInStartResponse(ZoomInStartResponse&& from) noexcept
      : ZoomInStartResponse(nullptr, std::move(from)) {}
  inline ZoomInStartResponse& operator=(const ZoomInStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoomInStartResponse& operator=(ZoomInStartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoomInStartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoomInStartResponse* internal_default_instance() {
    return reinterpret_cast<const ZoomInStartResponse*>(
        &_ZoomInStartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(ZoomInStartResponse& a, ZoomInStartResponse& b) { a.Swap(&b); }
  inline void Swap(ZoomInStartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoomInStartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoomInStartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZoomInStartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoomInStartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoomInStartResponse& from) { ZoomInStartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZoomInStartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ZoomInStartResponse"; }

 protected:
  explicit ZoomInStartResponse(::google::protobuf::Arena* arena);
  ZoomInStartResponse(::google::protobuf::Arena* arena, const ZoomInStartResponse& from);
  ZoomInStartResponse(::google::protobuf::Arena* arena, ZoomInStartResponse&& from) noexcept
      : ZoomInStartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ZoomInStartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ZoomInStartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class VideoStreamInfo final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.VideoStreamInfo) */ {
 public:
  inline VideoStreamInfo() : VideoStreamInfo(nullptr) {}
  ~VideoStreamInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VideoStreamInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VideoStreamInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoStreamInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline VideoStreamInfo(const VideoStreamInfo& from) : VideoStreamInfo(nullptr, from) {}
  inline VideoStreamInfo(VideoStreamInfo&& from) noexcept
      : VideoStreamInfo(nullptr, std::move(from)) {}
  inline VideoStreamInfo& operator=(const VideoStreamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoStreamInfo& operator=(VideoStreamInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoStreamInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoStreamInfo* internal_default_instance() {
    return reinterpret_cast<const VideoStreamInfo*>(
        &_VideoStreamInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(VideoStreamInfo& a, VideoStreamInfo& b) { a.Swap(&b); }
  inline void Swap(VideoStreamInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoStreamInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoStreamInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VideoStreamInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoStreamInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoStreamInfo& from) { VideoStreamInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VideoStreamInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.VideoStreamInfo"; }

 protected:
  explicit VideoStreamInfo(::google::protobuf::Arena* arena);
  VideoStreamInfo(::google::protobuf::Arena* arena, const VideoStreamInfo& from);
  VideoStreamInfo(::google::protobuf::Arena* arena, VideoStreamInfo&& from) noexcept
      : VideoStreamInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using VideoStreamStatus = VideoStreamInfo_VideoStreamStatus;
  static constexpr VideoStreamStatus VIDEO_STREAM_STATUS_NOT_RUNNING = VideoStreamInfo_VideoStreamStatus_VIDEO_STREAM_STATUS_NOT_RUNNING;
  static constexpr VideoStreamStatus VIDEO_STREAM_STATUS_IN_PROGRESS = VideoStreamInfo_VideoStreamStatus_VIDEO_STREAM_STATUS_IN_PROGRESS;
  static inline bool VideoStreamStatus_IsValid(int value) {
    return VideoStreamInfo_VideoStreamStatus_IsValid(value);
  }
  static constexpr VideoStreamStatus VideoStreamStatus_MIN = VideoStreamInfo_VideoStreamStatus_VideoStreamStatus_MIN;
  static constexpr VideoStreamStatus VideoStreamStatus_MAX = VideoStreamInfo_VideoStreamStatus_VideoStreamStatus_MAX;
  static constexpr int VideoStreamStatus_ARRAYSIZE = VideoStreamInfo_VideoStreamStatus_VideoStreamStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* VideoStreamStatus_descriptor() {
    return VideoStreamInfo_VideoStreamStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& VideoStreamStatus_Name(T value) {
    return VideoStreamInfo_VideoStreamStatus_Name(value);
  }
  static inline bool VideoStreamStatus_Parse(absl::string_view name, VideoStreamStatus* value) {
    return VideoStreamInfo_VideoStreamStatus_Parse(name, value);
  }
  using VideoStreamSpectrum = VideoStreamInfo_VideoStreamSpectrum;
  static constexpr VideoStreamSpectrum VIDEO_STREAM_SPECTRUM_UNKNOWN = VideoStreamInfo_VideoStreamSpectrum_VIDEO_STREAM_SPECTRUM_UNKNOWN;
  static constexpr VideoStreamSpectrum VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT = VideoStreamInfo_VideoStreamSpectrum_VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT;
  static constexpr VideoStreamSpectrum VIDEO_STREAM_SPECTRUM_INFRARED = VideoStreamInfo_VideoStreamSpectrum_VIDEO_STREAM_SPECTRUM_INFRARED;
  static inline bool VideoStreamSpectrum_IsValid(int value) {
    return VideoStreamInfo_VideoStreamSpectrum_IsValid(value);
  }
  static constexpr VideoStreamSpectrum VideoStreamSpectrum_MIN = VideoStreamInfo_VideoStreamSpectrum_VideoStreamSpectrum_MIN;
  static constexpr VideoStreamSpectrum VideoStreamSpectrum_MAX = VideoStreamInfo_VideoStreamSpectrum_VideoStreamSpectrum_MAX;
  static constexpr int VideoStreamSpectrum_ARRAYSIZE = VideoStreamInfo_VideoStreamSpectrum_VideoStreamSpectrum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* VideoStreamSpectrum_descriptor() {
    return VideoStreamInfo_VideoStreamSpectrum_descriptor();
  }
  template <typename T>
  static inline const std::string& VideoStreamSpectrum_Name(T value) {
    return VideoStreamInfo_VideoStreamSpectrum_Name(value);
  }
  static inline bool VideoStreamSpectrum_Parse(absl::string_view name, VideoStreamSpectrum* value) {
    return VideoStreamInfo_VideoStreamSpectrum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kSettingsFieldNumber = 2,
    kStreamIdFieldNumber = 1,
    kStatusFieldNumber = 3,
    kSpectrumFieldNumber = 4,
  };
  // .mavsdk.rpc.camera.VideoStreamSettings settings = 2;
  bool has_settings() const;
  void clear_settings() ;
  const ::mavsdk::rpc::camera::VideoStreamSettings& settings() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::VideoStreamSettings* release_settings();
  ::mavsdk::rpc::camera::VideoStreamSettings* mutable_settings();
  void set_allocated_settings(::mavsdk::rpc::camera::VideoStreamSettings* value);
  void unsafe_arena_set_allocated_settings(::mavsdk::rpc::camera::VideoStreamSettings* value);
  ::mavsdk::rpc::camera::VideoStreamSettings* unsafe_arena_release_settings();

  private:
  const ::mavsdk::rpc::camera::VideoStreamSettings& _internal_settings() const;
  ::mavsdk::rpc::camera::VideoStreamSettings* _internal_mutable_settings();

  public:
  // int32 stream_id = 1;
  void clear_stream_id() ;
  ::int32_t stream_id() const;
  void set_stream_id(::int32_t value);

  private:
  ::int32_t _internal_stream_id() const;
  void _internal_set_stream_id(::int32_t value);

  public:
  // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus status = 3;
  void clear_status() ;
  ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus status() const;
  void set_status(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus value);

  private:
  ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus _internal_status() const;
  void _internal_set_status(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus value);

  public:
  // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
  void clear_spectrum() ;
  ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum spectrum() const;
  void set_spectrum(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum value);

  private:
  ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum _internal_spectrum() const;
  void _internal_set_spectrum(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.VideoStreamInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VideoStreamInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::VideoStreamSettings* settings_;
    ::int32_t stream_id_;
    int status_;
    int spectrum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TrackStopResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TrackStopResponse) */ {
 public:
  inline TrackStopResponse() : TrackStopResponse(nullptr) {}
  ~TrackStopResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackStopResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackStopResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackStopResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrackStopResponse(const TrackStopResponse& from) : TrackStopResponse(nullptr, from) {}
  inline TrackStopResponse(TrackStopResponse&& from) noexcept
      : TrackStopResponse(nullptr, std::move(from)) {}
  inline TrackStopResponse& operator=(const TrackStopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackStopResponse& operator=(TrackStopResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackStopResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackStopResponse* internal_default_instance() {
    return reinterpret_cast<const TrackStopResponse*>(
        &_TrackStopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 74;
  friend void swap(TrackStopResponse& a, TrackStopResponse& b) { a.Swap(&b); }
  inline void Swap(TrackStopResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackStopResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackStopResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackStopResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackStopResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackStopResponse& from) { TrackStopResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackStopResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TrackStopResponse"; }

 protected:
  explicit TrackStopResponse(::google::protobuf::Arena* arena);
  TrackStopResponse(::google::protobuf::Arena* arena, const TrackStopResponse& from);
  TrackStopResponse(::google::protobuf::Arena* arena, TrackStopResponse&& from) noexcept
      : TrackStopResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TrackStopResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrackStopResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TrackRectangleResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TrackRectangleResponse) */ {
 public:
  inline TrackRectangleResponse() : TrackRectangleResponse(nullptr) {}
  ~TrackRectangleResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackRectangleResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackRectangleResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackRectangleResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrackRectangleResponse(const TrackRectangleResponse& from) : TrackRectangleResponse(nullptr, from) {}
  inline TrackRectangleResponse(TrackRectangleResponse&& from) noexcept
      : TrackRectangleResponse(nullptr, std::move(from)) {}
  inline TrackRectangleResponse& operator=(const TrackRectangleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackRectangleResponse& operator=(TrackRectangleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackRectangleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackRectangleResponse* internal_default_instance() {
    return reinterpret_cast<const TrackRectangleResponse*>(
        &_TrackRectangleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(TrackRectangleResponse& a, TrackRectangleResponse& b) { a.Swap(&b); }
  inline void Swap(TrackRectangleResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackRectangleResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackRectangleResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackRectangleResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackRectangleResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackRectangleResponse& from) { TrackRectangleResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackRectangleResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TrackRectangleResponse"; }

 protected:
  explicit TrackRectangleResponse(::google::protobuf::Arena* arena);
  TrackRectangleResponse(::google::protobuf::Arena* arena, const TrackRectangleResponse& from);
  TrackRectangleResponse(::google::protobuf::Arena* arena, TrackRectangleResponse&& from) noexcept
      : TrackRectangleResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TrackRectangleResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrackRectangleResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TrackPointResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TrackPointResponse) */ {
 public:
  inline TrackPointResponse() : TrackPointResponse(nullptr) {}
  ~TrackPointResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackPointResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackPointResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackPointResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrackPointResponse(const TrackPointResponse& from) : TrackPointResponse(nullptr, from) {}
  inline TrackPointResponse(TrackPointResponse&& from) noexcept
      : TrackPointResponse(nullptr, std::move(from)) {}
  inline TrackPointResponse& operator=(const TrackPointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackPointResponse& operator=(TrackPointResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackPointResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackPointResponse* internal_default_instance() {
    return reinterpret_cast<const TrackPointResponse*>(
        &_TrackPointResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(TrackPointResponse& a, TrackPointResponse& b) { a.Swap(&b); }
  inline void Swap(TrackPointResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackPointResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackPointResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackPointResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackPointResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackPointResponse& from) { TrackPointResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackPointResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TrackPointResponse"; }

 protected:
  explicit TrackPointResponse(::google::protobuf::Arena* arena);
  TrackPointResponse(::google::protobuf::Arena* arena, const TrackPointResponse& from);
  TrackPointResponse(::google::protobuf::Arena* arena, TrackPointResponse&& from) noexcept
      : TrackPointResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TrackPointResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrackPointResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class TakePhotoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.TakePhotoResponse) */ {
 public:
  inline TakePhotoResponse() : TakePhotoResponse(nullptr) {}
  ~TakePhotoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TakePhotoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TakePhotoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TakePhotoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TakePhotoResponse(const TakePhotoResponse& from) : TakePhotoResponse(nullptr, from) {}
  inline TakePhotoResponse(TakePhotoResponse&& from) noexcept
      : TakePhotoResponse(nullptr, std::move(from)) {}
  inline TakePhotoResponse& operator=(const TakePhotoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TakePhotoResponse& operator=(TakePhotoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TakePhotoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TakePhotoResponse* internal_default_instance() {
    return reinterpret_cast<const TakePhotoResponse*>(
        &_TakePhotoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TakePhotoResponse& a, TakePhotoResponse& b) { a.Swap(&b); }
  inline void Swap(TakePhotoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TakePhotoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TakePhotoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TakePhotoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TakePhotoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TakePhotoResponse& from) { TakePhotoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TakePhotoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.TakePhotoResponse"; }

 protected:
  explicit TakePhotoResponse(::google::protobuf::Arena* arena);
  TakePhotoResponse(::google::protobuf::Arena* arena, const TakePhotoResponse& from);
  TakePhotoResponse(::google::protobuf::Arena* arena, TakePhotoResponse&& from) noexcept
      : TakePhotoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.TakePhotoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TakePhotoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StorageUpdate final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StorageUpdate) */ {
 public:
  inline StorageUpdate() : StorageUpdate(nullptr) {}
  ~StorageUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StorageUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StorageUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StorageUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline StorageUpdate(const StorageUpdate& from) : StorageUpdate(nullptr, from) {}
  inline StorageUpdate(StorageUpdate&& from) noexcept
      : StorageUpdate(nullptr, std::move(from)) {}
  inline StorageUpdate& operator=(const StorageUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline StorageUpdate& operator=(StorageUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StorageUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const StorageUpdate* internal_default_instance() {
    return reinterpret_cast<const StorageUpdate*>(
        &_StorageUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(StorageUpdate& a, StorageUpdate& b) { a.Swap(&b); }
  inline void Swap(StorageUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StorageUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StorageUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StorageUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StorageUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StorageUpdate& from) { StorageUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StorageUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StorageUpdate"; }

 protected:
  explicit StorageUpdate(::google::protobuf::Arena* arena);
  StorageUpdate(::google::protobuf::Arena* arena, const StorageUpdate& from);
  StorageUpdate(::google::protobuf::Arena* arena, StorageUpdate&& from) noexcept
      : StorageUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStorageFieldNumber = 2,
    kComponentIdFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.Storage storage = 2;
  bool has_storage() const;
  void clear_storage() ;
  const ::mavsdk::rpc::camera::Storage& storage() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Storage* release_storage();
  ::mavsdk::rpc::camera::Storage* mutable_storage();
  void set_allocated_storage(::mavsdk::rpc::camera::Storage* value);
  void unsafe_arena_set_allocated_storage(::mavsdk::rpc::camera::Storage* value);
  ::mavsdk::rpc::camera::Storage* unsafe_arena_release_storage();

  private:
  const ::mavsdk::rpc::camera::Storage& _internal_storage() const;
  ::mavsdk::rpc::camera::Storage* _internal_mutable_storage();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StorageUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StorageUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::Storage* storage_;
    ::int32_t component_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StopVideoStreamingResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StopVideoStreamingResponse) */ {
 public:
  inline StopVideoStreamingResponse() : StopVideoStreamingResponse(nullptr) {}
  ~StopVideoStreamingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopVideoStreamingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopVideoStreamingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopVideoStreamingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopVideoStreamingResponse(const StopVideoStreamingResponse& from) : StopVideoStreamingResponse(nullptr, from) {}
  inline StopVideoStreamingResponse(StopVideoStreamingResponse&& from) noexcept
      : StopVideoStreamingResponse(nullptr, std::move(from)) {}
  inline StopVideoStreamingResponse& operator=(const StopVideoStreamingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopVideoStreamingResponse& operator=(StopVideoStreamingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopVideoStreamingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopVideoStreamingResponse* internal_default_instance() {
    return reinterpret_cast<const StopVideoStreamingResponse*>(
        &_StopVideoStreamingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(StopVideoStreamingResponse& a, StopVideoStreamingResponse& b) { a.Swap(&b); }
  inline void Swap(StopVideoStreamingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopVideoStreamingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopVideoStreamingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopVideoStreamingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopVideoStreamingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopVideoStreamingResponse& from) { StopVideoStreamingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopVideoStreamingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StopVideoStreamingResponse"; }

 protected:
  explicit StopVideoStreamingResponse(::google::protobuf::Arena* arena);
  StopVideoStreamingResponse(::google::protobuf::Arena* arena, const StopVideoStreamingResponse& from);
  StopVideoStreamingResponse(::google::protobuf::Arena* arena, StopVideoStreamingResponse&& from) noexcept
      : StopVideoStreamingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StopVideoStreamingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopVideoStreamingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StopVideoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StopVideoResponse) */ {
 public:
  inline StopVideoResponse() : StopVideoResponse(nullptr) {}
  ~StopVideoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopVideoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopVideoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopVideoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopVideoResponse(const StopVideoResponse& from) : StopVideoResponse(nullptr, from) {}
  inline StopVideoResponse(StopVideoResponse&& from) noexcept
      : StopVideoResponse(nullptr, std::move(from)) {}
  inline StopVideoResponse& operator=(const StopVideoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopVideoResponse& operator=(StopVideoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopVideoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopVideoResponse* internal_default_instance() {
    return reinterpret_cast<const StopVideoResponse*>(
        &_StopVideoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(StopVideoResponse& a, StopVideoResponse& b) { a.Swap(&b); }
  inline void Swap(StopVideoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopVideoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopVideoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopVideoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopVideoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopVideoResponse& from) { StopVideoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopVideoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StopVideoResponse"; }

 protected:
  explicit StopVideoResponse(::google::protobuf::Arena* arena);
  StopVideoResponse(::google::protobuf::Arena* arena, const StopVideoResponse& from);
  StopVideoResponse(::google::protobuf::Arena* arena, StopVideoResponse&& from) noexcept
      : StopVideoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StopVideoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopVideoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StopPhotoIntervalResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StopPhotoIntervalResponse) */ {
 public:
  inline StopPhotoIntervalResponse() : StopPhotoIntervalResponse(nullptr) {}
  ~StopPhotoIntervalResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopPhotoIntervalResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopPhotoIntervalResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopPhotoIntervalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopPhotoIntervalResponse(const StopPhotoIntervalResponse& from) : StopPhotoIntervalResponse(nullptr, from) {}
  inline StopPhotoIntervalResponse(StopPhotoIntervalResponse&& from) noexcept
      : StopPhotoIntervalResponse(nullptr, std::move(from)) {}
  inline StopPhotoIntervalResponse& operator=(const StopPhotoIntervalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopPhotoIntervalResponse& operator=(StopPhotoIntervalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopPhotoIntervalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopPhotoIntervalResponse* internal_default_instance() {
    return reinterpret_cast<const StopPhotoIntervalResponse*>(
        &_StopPhotoIntervalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(StopPhotoIntervalResponse& a, StopPhotoIntervalResponse& b) { a.Swap(&b); }
  inline void Swap(StopPhotoIntervalResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopPhotoIntervalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopPhotoIntervalResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StopPhotoIntervalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopPhotoIntervalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopPhotoIntervalResponse& from) { StopPhotoIntervalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StopPhotoIntervalResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StopPhotoIntervalResponse"; }

 protected:
  explicit StopPhotoIntervalResponse(::google::protobuf::Arena* arena);
  StopPhotoIntervalResponse(::google::protobuf::Arena* arena, const StopPhotoIntervalResponse& from);
  StopPhotoIntervalResponse(::google::protobuf::Arena* arena, StopPhotoIntervalResponse&& from) noexcept
      : StopPhotoIntervalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StopPhotoIntervalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopPhotoIntervalResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StartVideoStreamingResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StartVideoStreamingResponse) */ {
 public:
  inline StartVideoStreamingResponse() : StartVideoStreamingResponse(nullptr) {}
  ~StartVideoStreamingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartVideoStreamingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartVideoStreamingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartVideoStreamingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartVideoStreamingResponse(const StartVideoStreamingResponse& from) : StartVideoStreamingResponse(nullptr, from) {}
  inline StartVideoStreamingResponse(StartVideoStreamingResponse&& from) noexcept
      : StartVideoStreamingResponse(nullptr, std::move(from)) {}
  inline StartVideoStreamingResponse& operator=(const StartVideoStreamingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartVideoStreamingResponse& operator=(StartVideoStreamingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartVideoStreamingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartVideoStreamingResponse* internal_default_instance() {
    return reinterpret_cast<const StartVideoStreamingResponse*>(
        &_StartVideoStreamingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(StartVideoStreamingResponse& a, StartVideoStreamingResponse& b) { a.Swap(&b); }
  inline void Swap(StartVideoStreamingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartVideoStreamingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartVideoStreamingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartVideoStreamingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartVideoStreamingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartVideoStreamingResponse& from) { StartVideoStreamingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartVideoStreamingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StartVideoStreamingResponse"; }

 protected:
  explicit StartVideoStreamingResponse(::google::protobuf::Arena* arena);
  StartVideoStreamingResponse(::google::protobuf::Arena* arena, const StartVideoStreamingResponse& from);
  StartVideoStreamingResponse(::google::protobuf::Arena* arena, StartVideoStreamingResponse&& from) noexcept
      : StartVideoStreamingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StartVideoStreamingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartVideoStreamingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StartVideoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StartVideoResponse) */ {
 public:
  inline StartVideoResponse() : StartVideoResponse(nullptr) {}
  ~StartVideoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartVideoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartVideoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartVideoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartVideoResponse(const StartVideoResponse& from) : StartVideoResponse(nullptr, from) {}
  inline StartVideoResponse(StartVideoResponse&& from) noexcept
      : StartVideoResponse(nullptr, std::move(from)) {}
  inline StartVideoResponse& operator=(const StartVideoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartVideoResponse& operator=(StartVideoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartVideoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartVideoResponse* internal_default_instance() {
    return reinterpret_cast<const StartVideoResponse*>(
        &_StartVideoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(StartVideoResponse& a, StartVideoResponse& b) { a.Swap(&b); }
  inline void Swap(StartVideoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartVideoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartVideoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartVideoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartVideoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartVideoResponse& from) { StartVideoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartVideoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StartVideoResponse"; }

 protected:
  explicit StartVideoResponse(::google::protobuf::Arena* arena);
  StartVideoResponse(::google::protobuf::Arena* arena, const StartVideoResponse& from);
  StartVideoResponse(::google::protobuf::Arena* arena, StartVideoResponse&& from) noexcept
      : StartVideoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StartVideoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartVideoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StartPhotoIntervalResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StartPhotoIntervalResponse) */ {
 public:
  inline StartPhotoIntervalResponse() : StartPhotoIntervalResponse(nullptr) {}
  ~StartPhotoIntervalResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartPhotoIntervalResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartPhotoIntervalResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartPhotoIntervalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartPhotoIntervalResponse(const StartPhotoIntervalResponse& from) : StartPhotoIntervalResponse(nullptr, from) {}
  inline StartPhotoIntervalResponse(StartPhotoIntervalResponse&& from) noexcept
      : StartPhotoIntervalResponse(nullptr, std::move(from)) {}
  inline StartPhotoIntervalResponse& operator=(const StartPhotoIntervalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartPhotoIntervalResponse& operator=(StartPhotoIntervalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartPhotoIntervalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartPhotoIntervalResponse* internal_default_instance() {
    return reinterpret_cast<const StartPhotoIntervalResponse*>(
        &_StartPhotoIntervalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(StartPhotoIntervalResponse& a, StartPhotoIntervalResponse& b) { a.Swap(&b); }
  inline void Swap(StartPhotoIntervalResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartPhotoIntervalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartPhotoIntervalResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartPhotoIntervalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartPhotoIntervalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartPhotoIntervalResponse& from) { StartPhotoIntervalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartPhotoIntervalResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StartPhotoIntervalResponse"; }

 protected:
  explicit StartPhotoIntervalResponse(::google::protobuf::Arena* arena);
  StartPhotoIntervalResponse(::google::protobuf::Arena* arena, const StartPhotoIntervalResponse& from);
  StartPhotoIntervalResponse(::google::protobuf::Arena* arena, StartPhotoIntervalResponse&& from) noexcept
      : StartPhotoIntervalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StartPhotoIntervalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartPhotoIntervalResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SettingOptions final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SettingOptions) */ {
 public:
  inline SettingOptions() : SettingOptions(nullptr) {}
  ~SettingOptions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SettingOptions* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SettingOptions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SettingOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline SettingOptions(const SettingOptions& from) : SettingOptions(nullptr, from) {}
  inline SettingOptions(SettingOptions&& from) noexcept
      : SettingOptions(nullptr, std::move(from)) {}
  inline SettingOptions& operator=(const SettingOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingOptions& operator=(SettingOptions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingOptions* internal_default_instance() {
    return reinterpret_cast<const SettingOptions*>(
        &_SettingOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SettingOptions& a, SettingOptions& b) { a.Swap(&b); }
  inline void Swap(SettingOptions* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingOptions* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SettingOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SettingOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SettingOptions& from) { SettingOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SettingOptions* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SettingOptions"; }

 protected:
  explicit SettingOptions(::google::protobuf::Arena* arena);
  SettingOptions(::google::protobuf::Arena* arena, const SettingOptions& from);
  SettingOptions(::google::protobuf::Arena* arena, SettingOptions&& from) noexcept
      : SettingOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 4,
    kSettingIdFieldNumber = 2,
    kSettingDescriptionFieldNumber = 3,
    kComponentIdFieldNumber = 1,
    kIsRangeFieldNumber = 5,
  };
  // repeated .mavsdk.rpc.camera.Option options = 4;
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  ::mavsdk::rpc::camera::Option* mutable_options(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>* mutable_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>& _internal_options() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>* _internal_mutable_options();
  public:
  const ::mavsdk::rpc::camera::Option& options(int index) const;
  ::mavsdk::rpc::camera::Option* add_options();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>& options() const;
  // string setting_id = 2;
  void clear_setting_id() ;
  const std::string& setting_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_setting_id(Arg_&& arg, Args_... args);
  std::string* mutable_setting_id();
  PROTOBUF_NODISCARD std::string* release_setting_id();
  void set_allocated_setting_id(std::string* value);

  private:
  const std::string& _internal_setting_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_setting_id(
      const std::string& value);
  std::string* _internal_mutable_setting_id();

  public:
  // string setting_description = 3;
  void clear_setting_description() ;
  const std::string& setting_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_setting_description(Arg_&& arg, Args_... args);
  std::string* mutable_setting_description();
  PROTOBUF_NODISCARD std::string* release_setting_description();
  void set_allocated_setting_description(std::string* value);

  private:
  const std::string& _internal_setting_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_setting_description(
      const std::string& value);
  std::string* _internal_mutable_setting_description();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // bool is_range = 5;
  void clear_is_range() ;
  bool is_range() const;
  void set_is_range(bool value);

  private:
  bool _internal_is_range() const;
  void _internal_set_is_range(bool value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SettingOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SettingOptions& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::Option > options_;
    ::google::protobuf::internal::ArenaStringPtr setting_id_;
    ::google::protobuf::internal::ArenaStringPtr setting_description_;
    ::int32_t component_id_;
    bool is_range_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class Setting final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.Setting) */ {
 public:
  inline Setting() : Setting(nullptr) {}
  ~Setting() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Setting* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Setting));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Setting(
      ::google::protobuf::internal::ConstantInitialized);

  inline Setting(const Setting& from) : Setting(nullptr, from) {}
  inline Setting(Setting&& from) noexcept
      : Setting(nullptr, std::move(from)) {}
  inline Setting& operator=(const Setting& from) {
    CopyFrom(from);
    return *this;
  }
  inline Setting& operator=(Setting&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Setting& default_instance() {
    return *internal_default_instance();
  }
  static inline const Setting* internal_default_instance() {
    return reinterpret_cast<const Setting*>(
        &_Setting_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Setting& a, Setting& b) { a.Swap(&b); }
  inline void Swap(Setting* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Setting* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Setting* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Setting>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Setting& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Setting& from) { Setting::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Setting* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.Setting"; }

 protected:
  explicit Setting(::google::protobuf::Arena* arena);
  Setting(::google::protobuf::Arena* arena, const Setting& from);
  Setting(::google::protobuf::Arena* arena, Setting&& from) noexcept
      : Setting(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettingIdFieldNumber = 1,
    kSettingDescriptionFieldNumber = 2,
    kOptionFieldNumber = 3,
    kIsRangeFieldNumber = 4,
  };
  // string setting_id = 1;
  void clear_setting_id() ;
  const std::string& setting_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_setting_id(Arg_&& arg, Args_... args);
  std::string* mutable_setting_id();
  PROTOBUF_NODISCARD std::string* release_setting_id();
  void set_allocated_setting_id(std::string* value);

  private:
  const std::string& _internal_setting_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_setting_id(
      const std::string& value);
  std::string* _internal_mutable_setting_id();

  public:
  // string setting_description = 2;
  void clear_setting_description() ;
  const std::string& setting_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_setting_description(Arg_&& arg, Args_... args);
  std::string* mutable_setting_description();
  PROTOBUF_NODISCARD std::string* release_setting_description();
  void set_allocated_setting_description(std::string* value);

  private:
  const std::string& _internal_setting_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_setting_description(
      const std::string& value);
  std::string* _internal_mutable_setting_description();

  public:
  // .mavsdk.rpc.camera.Option option = 3;
  bool has_option() const;
  void clear_option() ;
  const ::mavsdk::rpc::camera::Option& option() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Option* release_option();
  ::mavsdk::rpc::camera::Option* mutable_option();
  void set_allocated_option(::mavsdk::rpc::camera::Option* value);
  void unsafe_arena_set_allocated_option(::mavsdk::rpc::camera::Option* value);
  ::mavsdk::rpc::camera::Option* unsafe_arena_release_option();

  private:
  const ::mavsdk::rpc::camera::Option& _internal_option() const;
  ::mavsdk::rpc::camera::Option* _internal_mutable_option();

  public:
  // bool is_range = 4;
  void clear_is_range() ;
  bool is_range() const;
  void set_is_range(bool value);

  private:
  bool _internal_is_range() const;
  void _internal_set_is_range(bool value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.Setting)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Setting& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr setting_id_;
    ::google::protobuf::internal::ArenaStringPtr setting_description_;
    ::mavsdk::rpc::camera::Option* option_;
    bool is_range_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SetSettingResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SetSettingResponse) */ {
 public:
  inline SetSettingResponse() : SetSettingResponse(nullptr) {}
  ~SetSettingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetSettingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetSettingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetSettingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetSettingResponse(const SetSettingResponse& from) : SetSettingResponse(nullptr, from) {}
  inline SetSettingResponse(SetSettingResponse&& from) noexcept
      : SetSettingResponse(nullptr, std::move(from)) {}
  inline SetSettingResponse& operator=(const SetSettingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSettingResponse& operator=(SetSettingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSettingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSettingResponse* internal_default_instance() {
    return reinterpret_cast<const SetSettingResponse*>(
        &_SetSettingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(SetSettingResponse& a, SetSettingResponse& b) { a.Swap(&b); }
  inline void Swap(SetSettingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSettingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSettingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetSettingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSettingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetSettingResponse& from) { SetSettingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetSettingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SetSettingResponse"; }

 protected:
  explicit SetSettingResponse(::google::protobuf::Arena* arena);
  SetSettingResponse(::google::protobuf::Arena* arena, const SetSettingResponse& from);
  SetSettingResponse(::google::protobuf::Arena* arena, SetSettingResponse&& from) noexcept
      : SetSettingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SetSettingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetSettingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SetModeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SetModeResponse) */ {
 public:
  inline SetModeResponse() : SetModeResponse(nullptr) {}
  ~SetModeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetModeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetModeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetModeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetModeResponse(const SetModeResponse& from) : SetModeResponse(nullptr, from) {}
  inline SetModeResponse(SetModeResponse&& from) noexcept
      : SetModeResponse(nullptr, std::move(from)) {}
  inline SetModeResponse& operator=(const SetModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModeResponse& operator=(SetModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModeResponse* internal_default_instance() {
    return reinterpret_cast<const SetModeResponse*>(
        &_SetModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(SetModeResponse& a, SetModeResponse& b) { a.Swap(&b); }
  inline void Swap(SetModeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetModeResponse& from) { SetModeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetModeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SetModeResponse"; }

 protected:
  explicit SetModeResponse(::google::protobuf::Arena* arena);
  SetModeResponse(::google::protobuf::Arena* arena, const SetModeResponse& from);
  SetModeResponse(::google::protobuf::Arena* arena, SetModeResponse&& from) noexcept
      : SetModeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SetModeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetModeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ResetSettingsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ResetSettingsResponse) */ {
 public:
  inline ResetSettingsResponse() : ResetSettingsResponse(nullptr) {}
  ~ResetSettingsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResetSettingsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResetSettingsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResetSettingsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResetSettingsResponse(const ResetSettingsResponse& from) : ResetSettingsResponse(nullptr, from) {}
  inline ResetSettingsResponse(ResetSettingsResponse&& from) noexcept
      : ResetSettingsResponse(nullptr, std::move(from)) {}
  inline ResetSettingsResponse& operator=(const ResetSettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetSettingsResponse& operator=(ResetSettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetSettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetSettingsResponse* internal_default_instance() {
    return reinterpret_cast<const ResetSettingsResponse*>(
        &_ResetSettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(ResetSettingsResponse& a, ResetSettingsResponse& b) { a.Swap(&b); }
  inline void Swap(ResetSettingsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetSettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetSettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResetSettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResetSettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResetSettingsResponse& from) { ResetSettingsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResetSettingsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ResetSettingsResponse"; }

 protected:
  explicit ResetSettingsResponse(::google::protobuf::Arena* arena);
  ResetSettingsResponse(::google::protobuf::Arena* arena, const ResetSettingsResponse& from);
  ResetSettingsResponse(::google::protobuf::Arena* arena, ResetSettingsResponse&& from) noexcept
      : ResetSettingsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ResetSettingsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResetSettingsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ModeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ModeResponse) */ {
 public:
  inline ModeResponse() : ModeResponse(nullptr) {}
  ~ModeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModeResponse(const ModeResponse& from) : ModeResponse(nullptr, from) {}
  inline ModeResponse(ModeResponse&& from) noexcept
      : ModeResponse(nullptr, std::move(from)) {}
  inline ModeResponse& operator=(const ModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModeResponse& operator=(ModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModeResponse* internal_default_instance() {
    return reinterpret_cast<const ModeResponse*>(
        &_ModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ModeResponse& a, ModeResponse& b) { a.Swap(&b); }
  inline void Swap(ModeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModeResponse& from) { ModeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ModeResponse"; }

 protected:
  explicit ModeResponse(::google::protobuf::Arena* arena);
  ModeResponse(::google::protobuf::Arena* arena, const ModeResponse& from);
  ModeResponse(::google::protobuf::Arena* arena, ModeResponse&& from) noexcept
      : ModeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.ModeUpdate update = 1;
  bool has_update() const;
  void clear_update() ;
  const ::mavsdk::rpc::camera::ModeUpdate& update() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::ModeUpdate* release_update();
  ::mavsdk::rpc::camera::ModeUpdate* mutable_update();
  void set_allocated_update(::mavsdk::rpc::camera::ModeUpdate* value);
  void unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::ModeUpdate* value);
  ::mavsdk::rpc::camera::ModeUpdate* unsafe_arena_release_update();

  private:
  const ::mavsdk::rpc::camera::ModeUpdate& _internal_update() const;
  ::mavsdk::rpc::camera::ModeUpdate* _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ModeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::ModeUpdate* update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetStorageResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetStorageResponse) */ {
 public:
  inline GetStorageResponse() : GetStorageResponse(nullptr) {}
  ~GetStorageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetStorageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetStorageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStorageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStorageResponse(const GetStorageResponse& from) : GetStorageResponse(nullptr, from) {}
  inline GetStorageResponse(GetStorageResponse&& from) noexcept
      : GetStorageResponse(nullptr, std::move(from)) {}
  inline GetStorageResponse& operator=(const GetStorageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStorageResponse& operator=(GetStorageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStorageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStorageResponse* internal_default_instance() {
    return reinterpret_cast<const GetStorageResponse*>(
        &_GetStorageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(GetStorageResponse& a, GetStorageResponse& b) { a.Swap(&b); }
  inline void Swap(GetStorageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStorageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStorageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetStorageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStorageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStorageResponse& from) { GetStorageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetStorageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetStorageResponse"; }

 protected:
  explicit GetStorageResponse(::google::protobuf::Arena* arena);
  GetStorageResponse(::google::protobuf::Arena* arena, const GetStorageResponse& from);
  GetStorageResponse(::google::protobuf::Arena* arena, GetStorageResponse&& from) noexcept
      : GetStorageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
    kStorageFieldNumber = 2,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // .mavsdk.rpc.camera.Storage storage = 2;
  bool has_storage() const;
  void clear_storage() ;
  const ::mavsdk::rpc::camera::Storage& storage() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Storage* release_storage();
  ::mavsdk::rpc::camera::Storage* mutable_storage();
  void set_allocated_storage(::mavsdk::rpc::camera::Storage* value);
  void unsafe_arena_set_allocated_storage(::mavsdk::rpc::camera::Storage* value);
  ::mavsdk::rpc::camera::Storage* unsafe_arena_release_storage();

  private:
  const ::mavsdk::rpc::camera::Storage& _internal_storage() const;
  ::mavsdk::rpc::camera::Storage* _internal_mutable_storage();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetStorageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStorageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    ::mavsdk::rpc::camera::Storage* storage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetModeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetModeResponse) */ {
 public:
  inline GetModeResponse() : GetModeResponse(nullptr) {}
  ~GetModeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetModeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetModeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetModeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetModeResponse(const GetModeResponse& from) : GetModeResponse(nullptr, from) {}
  inline GetModeResponse(GetModeResponse&& from) noexcept
      : GetModeResponse(nullptr, std::move(from)) {}
  inline GetModeResponse& operator=(const GetModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModeResponse& operator=(GetModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModeResponse* internal_default_instance() {
    return reinterpret_cast<const GetModeResponse*>(
        &_GetModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(GetModeResponse& a, GetModeResponse& b) { a.Swap(&b); }
  inline void Swap(GetModeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetModeResponse& from) { GetModeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetModeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetModeResponse"; }

 protected:
  explicit GetModeResponse(::google::protobuf::Arena* arena);
  GetModeResponse(::google::protobuf::Arena* arena, const GetModeResponse& from);
  GetModeResponse(::google::protobuf::Arena* arena, GetModeResponse&& from) noexcept
      : GetModeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
    kModeFieldNumber = 2,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // .mavsdk.rpc.camera.Mode mode = 2;
  void clear_mode() ;
  ::mavsdk::rpc::camera::Mode mode() const;
  void set_mode(::mavsdk::rpc::camera::Mode value);

  private:
  ::mavsdk::rpc::camera::Mode _internal_mode() const;
  void _internal_set_mode(::mavsdk::rpc::camera::Mode value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetModeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetModeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FormatStorageResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FormatStorageResponse) */ {
 public:
  inline FormatStorageResponse() : FormatStorageResponse(nullptr) {}
  ~FormatStorageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FormatStorageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FormatStorageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FormatStorageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FormatStorageResponse(const FormatStorageResponse& from) : FormatStorageResponse(nullptr, from) {}
  inline FormatStorageResponse(FormatStorageResponse&& from) noexcept
      : FormatStorageResponse(nullptr, std::move(from)) {}
  inline FormatStorageResponse& operator=(const FormatStorageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FormatStorageResponse& operator=(FormatStorageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FormatStorageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FormatStorageResponse* internal_default_instance() {
    return reinterpret_cast<const FormatStorageResponse*>(
        &_FormatStorageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(FormatStorageResponse& a, FormatStorageResponse& b) { a.Swap(&b); }
  inline void Swap(FormatStorageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FormatStorageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FormatStorageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FormatStorageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FormatStorageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FormatStorageResponse& from) { FormatStorageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FormatStorageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FormatStorageResponse"; }

 protected:
  explicit FormatStorageResponse(::google::protobuf::Arena* arena);
  FormatStorageResponse(::google::protobuf::Arena* arena, const FormatStorageResponse& from);
  FormatStorageResponse(::google::protobuf::Arena* arena, FormatStorageResponse&& from) noexcept
      : FormatStorageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FormatStorageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FormatStorageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusStopResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusStopResponse) */ {
 public:
  inline FocusStopResponse() : FocusStopResponse(nullptr) {}
  ~FocusStopResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusStopResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusStopResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusStopResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusStopResponse(const FocusStopResponse& from) : FocusStopResponse(nullptr, from) {}
  inline FocusStopResponse(FocusStopResponse&& from) noexcept
      : FocusStopResponse(nullptr, std::move(from)) {}
  inline FocusStopResponse& operator=(const FocusStopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusStopResponse& operator=(FocusStopResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusStopResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusStopResponse* internal_default_instance() {
    return reinterpret_cast<const FocusStopResponse*>(
        &_FocusStopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 80;
  friend void swap(FocusStopResponse& a, FocusStopResponse& b) { a.Swap(&b); }
  inline void Swap(FocusStopResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusStopResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusStopResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusStopResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusStopResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusStopResponse& from) { FocusStopResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusStopResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusStopResponse"; }

 protected:
  explicit FocusStopResponse(::google::protobuf::Arena* arena);
  FocusStopResponse(::google::protobuf::Arena* arena, const FocusStopResponse& from);
  FocusStopResponse(::google::protobuf::Arena* arena, FocusStopResponse&& from) noexcept
      : FocusStopResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusStopResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusStopResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusRangeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusRangeResponse) */ {
 public:
  inline FocusRangeResponse() : FocusRangeResponse(nullptr) {}
  ~FocusRangeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusRangeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusRangeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusRangeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusRangeResponse(const FocusRangeResponse& from) : FocusRangeResponse(nullptr, from) {}
  inline FocusRangeResponse(FocusRangeResponse&& from) noexcept
      : FocusRangeResponse(nullptr, std::move(from)) {}
  inline FocusRangeResponse& operator=(const FocusRangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusRangeResponse& operator=(FocusRangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusRangeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusRangeResponse* internal_default_instance() {
    return reinterpret_cast<const FocusRangeResponse*>(
        &_FocusRangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 82;
  friend void swap(FocusRangeResponse& a, FocusRangeResponse& b) { a.Swap(&b); }
  inline void Swap(FocusRangeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusRangeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusRangeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusRangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusRangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusRangeResponse& from) { FocusRangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusRangeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusRangeResponse"; }

 protected:
  explicit FocusRangeResponse(::google::protobuf::Arena* arena);
  FocusRangeResponse(::google::protobuf::Arena* arena, const FocusRangeResponse& from);
  FocusRangeResponse(::google::protobuf::Arena* arena, FocusRangeResponse&& from) noexcept
      : FocusRangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusRangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusRangeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusOutStartResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusOutStartResponse) */ {
 public:
  inline FocusOutStartResponse() : FocusOutStartResponse(nullptr) {}
  ~FocusOutStartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusOutStartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusOutStartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusOutStartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusOutStartResponse(const FocusOutStartResponse& from) : FocusOutStartResponse(nullptr, from) {}
  inline FocusOutStartResponse(FocusOutStartResponse&& from) noexcept
      : FocusOutStartResponse(nullptr, std::move(from)) {}
  inline FocusOutStartResponse& operator=(const FocusOutStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusOutStartResponse& operator=(FocusOutStartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusOutStartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusOutStartResponse* internal_default_instance() {
    return reinterpret_cast<const FocusOutStartResponse*>(
        &_FocusOutStartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 78;
  friend void swap(FocusOutStartResponse& a, FocusOutStartResponse& b) { a.Swap(&b); }
  inline void Swap(FocusOutStartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusOutStartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusOutStartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusOutStartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusOutStartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusOutStartResponse& from) { FocusOutStartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusOutStartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusOutStartResponse"; }

 protected:
  explicit FocusOutStartResponse(::google::protobuf::Arena* arena);
  FocusOutStartResponse(::google::protobuf::Arena* arena, const FocusOutStartResponse& from);
  FocusOutStartResponse(::google::protobuf::Arena* arena, FocusOutStartResponse&& from) noexcept
      : FocusOutStartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusOutStartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusOutStartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class FocusInStartResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.FocusInStartResponse) */ {
 public:
  inline FocusInStartResponse() : FocusInStartResponse(nullptr) {}
  ~FocusInStartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FocusInStartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FocusInStartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FocusInStartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FocusInStartResponse(const FocusInStartResponse& from) : FocusInStartResponse(nullptr, from) {}
  inline FocusInStartResponse(FocusInStartResponse&& from) noexcept
      : FocusInStartResponse(nullptr, std::move(from)) {}
  inline FocusInStartResponse& operator=(const FocusInStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FocusInStartResponse& operator=(FocusInStartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FocusInStartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FocusInStartResponse* internal_default_instance() {
    return reinterpret_cast<const FocusInStartResponse*>(
        &_FocusInStartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 76;
  friend void swap(FocusInStartResponse& a, FocusInStartResponse& b) { a.Swap(&b); }
  inline void Swap(FocusInStartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FocusInStartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FocusInStartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FocusInStartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FocusInStartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FocusInStartResponse& from) { FocusInStartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FocusInStartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.FocusInStartResponse"; }

 protected:
  explicit FocusInStartResponse(::google::protobuf::Arena* arena);
  FocusInStartResponse(::google::protobuf::Arena* arena, const FocusInStartResponse& from);
  FocusInStartResponse(::google::protobuf::Arena* arena, FocusInStartResponse&& from) noexcept
      : FocusInStartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.FocusInStartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FocusInStartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CaptureInfo final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CaptureInfo) */ {
 public:
  inline CaptureInfo() : CaptureInfo(nullptr) {}
  ~CaptureInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CaptureInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CaptureInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CaptureInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CaptureInfo(const CaptureInfo& from) : CaptureInfo(nullptr, from) {}
  inline CaptureInfo(CaptureInfo&& from) noexcept
      : CaptureInfo(nullptr, std::move(from)) {}
  inline CaptureInfo& operator=(const CaptureInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaptureInfo& operator=(CaptureInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaptureInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaptureInfo* internal_default_instance() {
    return reinterpret_cast<const CaptureInfo*>(
        &_CaptureInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 87;
  friend void swap(CaptureInfo& a, CaptureInfo& b) { a.Swap(&b); }
  inline void Swap(CaptureInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaptureInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaptureInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CaptureInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaptureInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CaptureInfo& from) { CaptureInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CaptureInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CaptureInfo"; }

 protected:
  explicit CaptureInfo(::google::protobuf::Arena* arena);
  CaptureInfo(::google::protobuf::Arena* arena, const CaptureInfo& from);
  CaptureInfo(::google::protobuf::Arena* arena, CaptureInfo&& from) noexcept
      : CaptureInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileUrlFieldNumber = 8,
    kPositionFieldNumber = 2,
    kAttitudeQuaternionFieldNumber = 3,
    kAttitudeEulerAngleFieldNumber = 4,
    kComponentIdFieldNumber = 1,
    kIsSuccessFieldNumber = 6,
    kTimeUtcUsFieldNumber = 5,
    kIndexFieldNumber = 7,
  };
  // string file_url = 8;
  void clear_file_url() ;
  const std::string& file_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_url(Arg_&& arg, Args_... args);
  std::string* mutable_file_url();
  PROTOBUF_NODISCARD std::string* release_file_url();
  void set_allocated_file_url(std::string* value);

  private:
  const std::string& _internal_file_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_url(
      const std::string& value);
  std::string* _internal_mutable_file_url();

  public:
  // .mavsdk.rpc.camera.Position position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::mavsdk::rpc::camera::Position& position() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Position* release_position();
  ::mavsdk::rpc::camera::Position* mutable_position();
  void set_allocated_position(::mavsdk::rpc::camera::Position* value);
  void unsafe_arena_set_allocated_position(::mavsdk::rpc::camera::Position* value);
  ::mavsdk::rpc::camera::Position* unsafe_arena_release_position();

  private:
  const ::mavsdk::rpc::camera::Position& _internal_position() const;
  ::mavsdk::rpc::camera::Position* _internal_mutable_position();

  public:
  // .mavsdk.rpc.camera.Quaternion attitude_quaternion = 3;
  bool has_attitude_quaternion() const;
  void clear_attitude_quaternion() ;
  const ::mavsdk::rpc::camera::Quaternion& attitude_quaternion() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Quaternion* release_attitude_quaternion();
  ::mavsdk::rpc::camera::Quaternion* mutable_attitude_quaternion();
  void set_allocated_attitude_quaternion(::mavsdk::rpc::camera::Quaternion* value);
  void unsafe_arena_set_allocated_attitude_quaternion(::mavsdk::rpc::camera::Quaternion* value);
  ::mavsdk::rpc::camera::Quaternion* unsafe_arena_release_attitude_quaternion();

  private:
  const ::mavsdk::rpc::camera::Quaternion& _internal_attitude_quaternion() const;
  ::mavsdk::rpc::camera::Quaternion* _internal_mutable_attitude_quaternion();

  public:
  // .mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 4;
  bool has_attitude_euler_angle() const;
  void clear_attitude_euler_angle() ;
  const ::mavsdk::rpc::camera::EulerAngle& attitude_euler_angle() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::EulerAngle* release_attitude_euler_angle();
  ::mavsdk::rpc::camera::EulerAngle* mutable_attitude_euler_angle();
  void set_allocated_attitude_euler_angle(::mavsdk::rpc::camera::EulerAngle* value);
  void unsafe_arena_set_allocated_attitude_euler_angle(::mavsdk::rpc::camera::EulerAngle* value);
  ::mavsdk::rpc::camera::EulerAngle* unsafe_arena_release_attitude_euler_angle();

  private:
  const ::mavsdk::rpc::camera::EulerAngle& _internal_attitude_euler_angle() const;
  ::mavsdk::rpc::camera::EulerAngle* _internal_mutable_attitude_euler_angle();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // bool is_success = 6;
  void clear_is_success() ;
  bool is_success() const;
  void set_is_success(bool value);

  private:
  bool _internal_is_success() const;
  void _internal_set_is_success(bool value);

  public:
  // uint64 time_utc_us = 5;
  void clear_time_utc_us() ;
  ::uint64_t time_utc_us() const;
  void set_time_utc_us(::uint64_t value);

  private:
  ::uint64_t _internal_time_utc_us() const;
  void _internal_set_time_utc_us(::uint64_t value);

  public:
  // int32 index = 7;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CaptureInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 3,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CaptureInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_url_;
    ::mavsdk::rpc::camera::Position* position_;
    ::mavsdk::rpc::camera::Quaternion* attitude_quaternion_;
    ::mavsdk::rpc::camera::EulerAngle* attitude_euler_angle_;
    ::int32_t component_id_;
    bool is_success_;
    ::uint64_t time_utc_us_;
    ::int32_t index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CameraList final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CameraList) */ {
 public:
  inline CameraList() : CameraList(nullptr) {}
  ~CameraList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraList(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraList(const CameraList& from) : CameraList(nullptr, from) {}
  inline CameraList(CameraList&& from) noexcept
      : CameraList(nullptr, std::move(from)) {}
  inline CameraList& operator=(const CameraList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraList& operator=(CameraList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraList* internal_default_instance() {
    return reinterpret_cast<const CameraList*>(
        &_CameraList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 89;
  friend void swap(CameraList& a, CameraList& b) { a.Swap(&b); }
  inline void Swap(CameraList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraList& from) { CameraList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraList* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CameraList"; }

 protected:
  explicit CameraList(::google::protobuf::Arena* arena);
  CameraList(::google::protobuf::Arena* arena, const CameraList& from);
  CameraList(::google::protobuf::Arena* arena, CameraList&& from) noexcept
      : CameraList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCamerasFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.camera.Information cameras = 1;
  int cameras_size() const;
  private:
  int _internal_cameras_size() const;

  public:
  void clear_cameras() ;
  ::mavsdk::rpc::camera::Information* mutable_cameras(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>* mutable_cameras();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>& _internal_cameras() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>* _internal_mutable_cameras();
  public:
  const ::mavsdk::rpc::camera::Information& cameras(int index) const;
  ::mavsdk::rpc::camera::Information* add_cameras();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>& cameras() const;
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CameraList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::Information > cameras_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class VideoStreamUpdate final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.VideoStreamUpdate) */ {
 public:
  inline VideoStreamUpdate() : VideoStreamUpdate(nullptr) {}
  ~VideoStreamUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VideoStreamUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VideoStreamUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoStreamUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline VideoStreamUpdate(const VideoStreamUpdate& from) : VideoStreamUpdate(nullptr, from) {}
  inline VideoStreamUpdate(VideoStreamUpdate&& from) noexcept
      : VideoStreamUpdate(nullptr, std::move(from)) {}
  inline VideoStreamUpdate& operator=(const VideoStreamUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoStreamUpdate& operator=(VideoStreamUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoStreamUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoStreamUpdate* internal_default_instance() {
    return reinterpret_cast<const VideoStreamUpdate*>(
        &_VideoStreamUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(VideoStreamUpdate& a, VideoStreamUpdate& b) { a.Swap(&b); }
  inline void Swap(VideoStreamUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoStreamUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoStreamUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VideoStreamUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoStreamUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoStreamUpdate& from) { VideoStreamUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VideoStreamUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.VideoStreamUpdate"; }

 protected:
  explicit VideoStreamUpdate(::google::protobuf::Arena* arena);
  VideoStreamUpdate(::google::protobuf::Arena* arena, const VideoStreamUpdate& from);
  VideoStreamUpdate(::google::protobuf::Arena* arena, VideoStreamUpdate&& from) noexcept
      : VideoStreamUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVideoStreamInfoFieldNumber = 2,
    kComponentIdFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
  bool has_video_stream_info() const;
  void clear_video_stream_info() ;
  const ::mavsdk::rpc::camera::VideoStreamInfo& video_stream_info() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::VideoStreamInfo* release_video_stream_info();
  ::mavsdk::rpc::camera::VideoStreamInfo* mutable_video_stream_info();
  void set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value);
  void unsafe_arena_set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value);
  ::mavsdk::rpc::camera::VideoStreamInfo* unsafe_arena_release_video_stream_info();

  private:
  const ::mavsdk::rpc::camera::VideoStreamInfo& _internal_video_stream_info() const;
  ::mavsdk::rpc::camera::VideoStreamInfo* _internal_mutable_video_stream_info();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.VideoStreamUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VideoStreamUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::VideoStreamInfo* video_stream_info_;
    ::int32_t component_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class StorageResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.StorageResponse) */ {
 public:
  inline StorageResponse() : StorageResponse(nullptr) {}
  ~StorageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StorageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StorageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StorageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StorageResponse(const StorageResponse& from) : StorageResponse(nullptr, from) {}
  inline StorageResponse(StorageResponse&& from) noexcept
      : StorageResponse(nullptr, std::move(from)) {}
  inline StorageResponse& operator=(const StorageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StorageResponse& operator=(StorageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StorageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StorageResponse* internal_default_instance() {
    return reinterpret_cast<const StorageResponse*>(
        &_StorageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(StorageResponse& a, StorageResponse& b) { a.Swap(&b); }
  inline void Swap(StorageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StorageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StorageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StorageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StorageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StorageResponse& from) { StorageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StorageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.StorageResponse"; }

 protected:
  explicit StorageResponse(::google::protobuf::Arena* arena);
  StorageResponse(::google::protobuf::Arena* arena, const StorageResponse& from);
  StorageResponse(::google::protobuf::Arena* arena, StorageResponse&& from) noexcept
      : StorageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.StorageUpdate update = 1;
  bool has_update() const;
  void clear_update() ;
  const ::mavsdk::rpc::camera::StorageUpdate& update() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::StorageUpdate* release_update();
  ::mavsdk::rpc::camera::StorageUpdate* mutable_update();
  void set_allocated_update(::mavsdk::rpc::camera::StorageUpdate* value);
  void unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::StorageUpdate* value);
  ::mavsdk::rpc::camera::StorageUpdate* unsafe_arena_release_update();

  private:
  const ::mavsdk::rpc::camera::StorageUpdate& _internal_update() const;
  ::mavsdk::rpc::camera::StorageUpdate* _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.StorageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StorageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::StorageUpdate* update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class SetSettingRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.SetSettingRequest) */ {
 public:
  inline SetSettingRequest() : SetSettingRequest(nullptr) {}
  ~SetSettingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetSettingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetSettingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetSettingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetSettingRequest(const SetSettingRequest& from) : SetSettingRequest(nullptr, from) {}
  inline SetSettingRequest(SetSettingRequest&& from) noexcept
      : SetSettingRequest(nullptr, std::move(from)) {}
  inline SetSettingRequest& operator=(const SetSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSettingRequest& operator=(SetSettingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSettingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSettingRequest* internal_default_instance() {
    return reinterpret_cast<const SetSettingRequest*>(
        &_SetSettingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(SetSettingRequest& a, SetSettingRequest& b) { a.Swap(&b); }
  inline void Swap(SetSettingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSettingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSettingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetSettingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSettingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetSettingRequest& from) { SetSettingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetSettingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.SetSettingRequest"; }

 protected:
  explicit SetSettingRequest(::google::protobuf::Arena* arena);
  SetSettingRequest(::google::protobuf::Arena* arena, const SetSettingRequest& from);
  SetSettingRequest(::google::protobuf::Arena* arena, SetSettingRequest&& from) noexcept
      : SetSettingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettingFieldNumber = 2,
    kComponentIdFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.Setting setting = 2;
  bool has_setting() const;
  void clear_setting() ;
  const ::mavsdk::rpc::camera::Setting& setting() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Setting* release_setting();
  ::mavsdk::rpc::camera::Setting* mutable_setting();
  void set_allocated_setting(::mavsdk::rpc::camera::Setting* value);
  void unsafe_arena_set_allocated_setting(::mavsdk::rpc::camera::Setting* value);
  ::mavsdk::rpc::camera::Setting* unsafe_arena_release_setting();

  private:
  const ::mavsdk::rpc::camera::Setting& _internal_setting() const;
  ::mavsdk::rpc::camera::Setting* _internal_mutable_setting();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.SetSettingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetSettingRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::Setting* setting_;
    ::int32_t component_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class PossibleSettingOptionsUpdate final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.PossibleSettingOptionsUpdate) */ {
 public:
  inline PossibleSettingOptionsUpdate() : PossibleSettingOptionsUpdate(nullptr) {}
  ~PossibleSettingOptionsUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PossibleSettingOptionsUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PossibleSettingOptionsUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PossibleSettingOptionsUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline PossibleSettingOptionsUpdate(const PossibleSettingOptionsUpdate& from) : PossibleSettingOptionsUpdate(nullptr, from) {}
  inline PossibleSettingOptionsUpdate(PossibleSettingOptionsUpdate&& from) noexcept
      : PossibleSettingOptionsUpdate(nullptr, std::move(from)) {}
  inline PossibleSettingOptionsUpdate& operator=(const PossibleSettingOptionsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline PossibleSettingOptionsUpdate& operator=(PossibleSettingOptionsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PossibleSettingOptionsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const PossibleSettingOptionsUpdate* internal_default_instance() {
    return reinterpret_cast<const PossibleSettingOptionsUpdate*>(
        &_PossibleSettingOptionsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(PossibleSettingOptionsUpdate& a, PossibleSettingOptionsUpdate& b) { a.Swap(&b); }
  inline void Swap(PossibleSettingOptionsUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PossibleSettingOptionsUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PossibleSettingOptionsUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PossibleSettingOptionsUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PossibleSettingOptionsUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PossibleSettingOptionsUpdate& from) { PossibleSettingOptionsUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PossibleSettingOptionsUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.PossibleSettingOptionsUpdate"; }

 protected:
  explicit PossibleSettingOptionsUpdate(::google::protobuf::Arena* arena);
  PossibleSettingOptionsUpdate(::google::protobuf::Arena* arena, const PossibleSettingOptionsUpdate& from);
  PossibleSettingOptionsUpdate(::google::protobuf::Arena* arena, PossibleSettingOptionsUpdate&& from) noexcept
      : PossibleSettingOptionsUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettingOptionsFieldNumber = 2,
    kComponentIdFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
  int setting_options_size() const;
  private:
  int _internal_setting_options_size() const;

  public:
  void clear_setting_options() ;
  ::mavsdk::rpc::camera::SettingOptions* mutable_setting_options(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>* mutable_setting_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>& _internal_setting_options() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>* _internal_mutable_setting_options();
  public:
  const ::mavsdk::rpc::camera::SettingOptions& setting_options(int index) const;
  ::mavsdk::rpc::camera::SettingOptions* add_setting_options();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>& setting_options() const;
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PossibleSettingOptionsUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::SettingOptions > setting_options_;
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class ListPhotosResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.ListPhotosResponse) */ {
 public:
  inline ListPhotosResponse() : ListPhotosResponse(nullptr) {}
  ~ListPhotosResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListPhotosResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListPhotosResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPhotosResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPhotosResponse(const ListPhotosResponse& from) : ListPhotosResponse(nullptr, from) {}
  inline ListPhotosResponse(ListPhotosResponse&& from) noexcept
      : ListPhotosResponse(nullptr, std::move(from)) {}
  inline ListPhotosResponse& operator=(const ListPhotosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPhotosResponse& operator=(ListPhotosResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPhotosResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPhotosResponse* internal_default_instance() {
    return reinterpret_cast<const ListPhotosResponse*>(
        &_ListPhotosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ListPhotosResponse& a, ListPhotosResponse& b) { a.Swap(&b); }
  inline void Swap(ListPhotosResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPhotosResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPhotosResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListPhotosResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPhotosResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPhotosResponse& from) { ListPhotosResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListPhotosResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.ListPhotosResponse"; }

 protected:
  explicit ListPhotosResponse(::google::protobuf::Arena* arena);
  ListPhotosResponse(::google::protobuf::Arena* arena, const ListPhotosResponse& from);
  ListPhotosResponse(::google::protobuf::Arena* arena, ListPhotosResponse&& from) noexcept
      : ListPhotosResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCaptureInfosFieldNumber = 2,
    kCameraResultFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.camera.CaptureInfo capture_infos = 2;
  int capture_infos_size() const;
  private:
  int _internal_capture_infos_size() const;

  public:
  void clear_capture_infos() ;
  ::mavsdk::rpc::camera::CaptureInfo* mutable_capture_infos(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>* mutable_capture_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>& _internal_capture_infos() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>* _internal_mutable_capture_infos();
  public:
  const ::mavsdk::rpc::camera::CaptureInfo& capture_infos(int index) const;
  ::mavsdk::rpc::camera::CaptureInfo* add_capture_infos();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>& capture_infos() const;
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.ListPhotosResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPhotosResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::CaptureInfo > capture_infos_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetVideoStreamInfoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetVideoStreamInfoResponse) */ {
 public:
  inline GetVideoStreamInfoResponse() : GetVideoStreamInfoResponse(nullptr) {}
  ~GetVideoStreamInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetVideoStreamInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetVideoStreamInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVideoStreamInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVideoStreamInfoResponse(const GetVideoStreamInfoResponse& from) : GetVideoStreamInfoResponse(nullptr, from) {}
  inline GetVideoStreamInfoResponse(GetVideoStreamInfoResponse&& from) noexcept
      : GetVideoStreamInfoResponse(nullptr, std::move(from)) {}
  inline GetVideoStreamInfoResponse& operator=(const GetVideoStreamInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVideoStreamInfoResponse& operator=(GetVideoStreamInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVideoStreamInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVideoStreamInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetVideoStreamInfoResponse*>(
        &_GetVideoStreamInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(GetVideoStreamInfoResponse& a, GetVideoStreamInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetVideoStreamInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVideoStreamInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVideoStreamInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetVideoStreamInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVideoStreamInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVideoStreamInfoResponse& from) { GetVideoStreamInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetVideoStreamInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetVideoStreamInfoResponse"; }

 protected:
  explicit GetVideoStreamInfoResponse(::google::protobuf::Arena* arena);
  GetVideoStreamInfoResponse(::google::protobuf::Arena* arena, const GetVideoStreamInfoResponse& from);
  GetVideoStreamInfoResponse(::google::protobuf::Arena* arena, GetVideoStreamInfoResponse&& from) noexcept
      : GetVideoStreamInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
    kVideoStreamInfoFieldNumber = 2,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
  bool has_video_stream_info() const;
  void clear_video_stream_info() ;
  const ::mavsdk::rpc::camera::VideoStreamInfo& video_stream_info() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::VideoStreamInfo* release_video_stream_info();
  ::mavsdk::rpc::camera::VideoStreamInfo* mutable_video_stream_info();
  void set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value);
  void unsafe_arena_set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value);
  ::mavsdk::rpc::camera::VideoStreamInfo* unsafe_arena_release_video_stream_info();

  private:
  const ::mavsdk::rpc::camera::VideoStreamInfo& _internal_video_stream_info() const;
  ::mavsdk::rpc::camera::VideoStreamInfo* _internal_mutable_video_stream_info();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVideoStreamInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    ::mavsdk::rpc::camera::VideoStreamInfo* video_stream_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetSettingResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetSettingResponse) */ {
 public:
  inline GetSettingResponse() : GetSettingResponse(nullptr) {}
  ~GetSettingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSettingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSettingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSettingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSettingResponse(const GetSettingResponse& from) : GetSettingResponse(nullptr, from) {}
  inline GetSettingResponse(GetSettingResponse&& from) noexcept
      : GetSettingResponse(nullptr, std::move(from)) {}
  inline GetSettingResponse& operator=(const GetSettingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSettingResponse& operator=(GetSettingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSettingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSettingResponse* internal_default_instance() {
    return reinterpret_cast<const GetSettingResponse*>(
        &_GetSettingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(GetSettingResponse& a, GetSettingResponse& b) { a.Swap(&b); }
  inline void Swap(GetSettingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSettingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSettingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSettingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSettingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSettingResponse& from) { GetSettingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSettingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetSettingResponse"; }

 protected:
  explicit GetSettingResponse(::google::protobuf::Arena* arena);
  GetSettingResponse(::google::protobuf::Arena* arena, const GetSettingResponse& from);
  GetSettingResponse(::google::protobuf::Arena* arena, GetSettingResponse&& from) noexcept
      : GetSettingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraResultFieldNumber = 1,
    kSettingFieldNumber = 2,
  };
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // .mavsdk.rpc.camera.Setting setting = 2;
  bool has_setting() const;
  void clear_setting() ;
  const ::mavsdk::rpc::camera::Setting& setting() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Setting* release_setting();
  ::mavsdk::rpc::camera::Setting* mutable_setting();
  void set_allocated_setting(::mavsdk::rpc::camera::Setting* value);
  void unsafe_arena_set_allocated_setting(::mavsdk::rpc::camera::Setting* value);
  ::mavsdk::rpc::camera::Setting* unsafe_arena_release_setting();

  private:
  const ::mavsdk::rpc::camera::Setting& _internal_setting() const;
  ::mavsdk::rpc::camera::Setting* _internal_mutable_setting();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetSettingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSettingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    ::mavsdk::rpc::camera::Setting* setting_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetSettingRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetSettingRequest) */ {
 public:
  inline GetSettingRequest() : GetSettingRequest(nullptr) {}
  ~GetSettingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSettingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSettingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSettingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSettingRequest(const GetSettingRequest& from) : GetSettingRequest(nullptr, from) {}
  inline GetSettingRequest(GetSettingRequest&& from) noexcept
      : GetSettingRequest(nullptr, std::move(from)) {}
  inline GetSettingRequest& operator=(const GetSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSettingRequest& operator=(GetSettingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSettingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSettingRequest* internal_default_instance() {
    return reinterpret_cast<const GetSettingRequest*>(
        &_GetSettingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(GetSettingRequest& a, GetSettingRequest& b) { a.Swap(&b); }
  inline void Swap(GetSettingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSettingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSettingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSettingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSettingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSettingRequest& from) { GetSettingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSettingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetSettingRequest"; }

 protected:
  explicit GetSettingRequest(::google::protobuf::Arena* arena);
  GetSettingRequest(::google::protobuf::Arena* arena, const GetSettingRequest& from);
  GetSettingRequest(::google::protobuf::Arena* arena, GetSettingRequest&& from) noexcept
      : GetSettingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettingFieldNumber = 2,
    kComponentIdFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.Setting setting = 2;
  bool has_setting() const;
  void clear_setting() ;
  const ::mavsdk::rpc::camera::Setting& setting() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::Setting* release_setting();
  ::mavsdk::rpc::camera::Setting* mutable_setting();
  void set_allocated_setting(::mavsdk::rpc::camera::Setting* value);
  void unsafe_arena_set_allocated_setting(::mavsdk::rpc::camera::Setting* value);
  ::mavsdk::rpc::camera::Setting* unsafe_arena_release_setting();

  private:
  const ::mavsdk::rpc::camera::Setting& _internal_setting() const;
  ::mavsdk::rpc::camera::Setting* _internal_mutable_setting();

  public:
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetSettingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSettingRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::Setting* setting_;
    ::int32_t component_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetPossibleSettingOptionsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse) */ {
 public:
  inline GetPossibleSettingOptionsResponse() : GetPossibleSettingOptionsResponse(nullptr) {}
  ~GetPossibleSettingOptionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetPossibleSettingOptionsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetPossibleSettingOptionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPossibleSettingOptionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetPossibleSettingOptionsResponse(const GetPossibleSettingOptionsResponse& from) : GetPossibleSettingOptionsResponse(nullptr, from) {}
  inline GetPossibleSettingOptionsResponse(GetPossibleSettingOptionsResponse&& from) noexcept
      : GetPossibleSettingOptionsResponse(nullptr, std::move(from)) {}
  inline GetPossibleSettingOptionsResponse& operator=(const GetPossibleSettingOptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPossibleSettingOptionsResponse& operator=(GetPossibleSettingOptionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPossibleSettingOptionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPossibleSettingOptionsResponse* internal_default_instance() {
    return reinterpret_cast<const GetPossibleSettingOptionsResponse*>(
        &_GetPossibleSettingOptionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(GetPossibleSettingOptionsResponse& a, GetPossibleSettingOptionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetPossibleSettingOptionsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPossibleSettingOptionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPossibleSettingOptionsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetPossibleSettingOptionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPossibleSettingOptionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPossibleSettingOptionsResponse& from) { GetPossibleSettingOptionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetPossibleSettingOptionsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetPossibleSettingOptionsResponse"; }

 protected:
  explicit GetPossibleSettingOptionsResponse(::google::protobuf::Arena* arena);
  GetPossibleSettingOptionsResponse(::google::protobuf::Arena* arena, const GetPossibleSettingOptionsResponse& from);
  GetPossibleSettingOptionsResponse(::google::protobuf::Arena* arena, GetPossibleSettingOptionsResponse&& from) noexcept
      : GetPossibleSettingOptionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettingOptionsFieldNumber = 2,
    kCameraResultFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
  int setting_options_size() const;
  private:
  int _internal_setting_options_size() const;

  public:
  void clear_setting_options() ;
  ::mavsdk::rpc::camera::SettingOptions* mutable_setting_options(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>* mutable_setting_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>& _internal_setting_options() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>* _internal_mutable_setting_options();
  public:
  const ::mavsdk::rpc::camera::SettingOptions& setting_options(int index) const;
  ::mavsdk::rpc::camera::SettingOptions* add_setting_options();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>& setting_options() const;
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetPossibleSettingOptionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::SettingOptions > setting_options_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class GetCurrentSettingsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.GetCurrentSettingsResponse) */ {
 public:
  inline GetCurrentSettingsResponse() : GetCurrentSettingsResponse(nullptr) {}
  ~GetCurrentSettingsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCurrentSettingsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCurrentSettingsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCurrentSettingsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCurrentSettingsResponse(const GetCurrentSettingsResponse& from) : GetCurrentSettingsResponse(nullptr, from) {}
  inline GetCurrentSettingsResponse(GetCurrentSettingsResponse&& from) noexcept
      : GetCurrentSettingsResponse(nullptr, std::move(from)) {}
  inline GetCurrentSettingsResponse& operator=(const GetCurrentSettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCurrentSettingsResponse& operator=(GetCurrentSettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCurrentSettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCurrentSettingsResponse* internal_default_instance() {
    return reinterpret_cast<const GetCurrentSettingsResponse*>(
        &_GetCurrentSettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(GetCurrentSettingsResponse& a, GetCurrentSettingsResponse& b) { a.Swap(&b); }
  inline void Swap(GetCurrentSettingsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCurrentSettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCurrentSettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCurrentSettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCurrentSettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCurrentSettingsResponse& from) { GetCurrentSettingsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCurrentSettingsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.GetCurrentSettingsResponse"; }

 protected:
  explicit GetCurrentSettingsResponse(::google::protobuf::Arena* arena);
  GetCurrentSettingsResponse(::google::protobuf::Arena* arena, const GetCurrentSettingsResponse& from);
  GetCurrentSettingsResponse(::google::protobuf::Arena* arena, GetCurrentSettingsResponse&& from) noexcept
      : GetCurrentSettingsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrentSettingsFieldNumber = 2,
    kCameraResultFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
  int current_settings_size() const;
  private:
  int _internal_current_settings_size() const;

  public:
  void clear_current_settings() ;
  ::mavsdk::rpc::camera::Setting* mutable_current_settings(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>* mutable_current_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>& _internal_current_settings() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>* _internal_mutable_current_settings();
  public:
  const ::mavsdk::rpc::camera::Setting& current_settings(int index) const;
  ::mavsdk::rpc::camera::Setting* add_current_settings();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>& current_settings() const;
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  bool has_camera_result() const;
  void clear_camera_result() ;
  const ::mavsdk::rpc::camera::CameraResult& camera_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraResult* release_camera_result();
  ::mavsdk::rpc::camera::CameraResult* mutable_camera_result();
  void set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  void unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value);
  ::mavsdk::rpc::camera::CameraResult* unsafe_arena_release_camera_result();

  private:
  const ::mavsdk::rpc::camera::CameraResult& _internal_camera_result() const;
  ::mavsdk::rpc::camera::CameraResult* _internal_mutable_camera_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.GetCurrentSettingsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCurrentSettingsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::Setting > current_settings_;
    ::mavsdk::rpc::camera::CameraResult* camera_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CurrentSettingsUpdate final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CurrentSettingsUpdate) */ {
 public:
  inline CurrentSettingsUpdate() : CurrentSettingsUpdate(nullptr) {}
  ~CurrentSettingsUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CurrentSettingsUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CurrentSettingsUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CurrentSettingsUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline CurrentSettingsUpdate(const CurrentSettingsUpdate& from) : CurrentSettingsUpdate(nullptr, from) {}
  inline CurrentSettingsUpdate(CurrentSettingsUpdate&& from) noexcept
      : CurrentSettingsUpdate(nullptr, std::move(from)) {}
  inline CurrentSettingsUpdate& operator=(const CurrentSettingsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CurrentSettingsUpdate& operator=(CurrentSettingsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CurrentSettingsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CurrentSettingsUpdate* internal_default_instance() {
    return reinterpret_cast<const CurrentSettingsUpdate*>(
        &_CurrentSettingsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(CurrentSettingsUpdate& a, CurrentSettingsUpdate& b) { a.Swap(&b); }
  inline void Swap(CurrentSettingsUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CurrentSettingsUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CurrentSettingsUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CurrentSettingsUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CurrentSettingsUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CurrentSettingsUpdate& from) { CurrentSettingsUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CurrentSettingsUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CurrentSettingsUpdate"; }

 protected:
  explicit CurrentSettingsUpdate(::google::protobuf::Arena* arena);
  CurrentSettingsUpdate(::google::protobuf::Arena* arena, const CurrentSettingsUpdate& from);
  CurrentSettingsUpdate(::google::protobuf::Arena* arena, CurrentSettingsUpdate&& from) noexcept
      : CurrentSettingsUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrentSettingsFieldNumber = 2,
    kComponentIdFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
  int current_settings_size() const;
  private:
  int _internal_current_settings_size() const;

  public:
  void clear_current_settings() ;
  ::mavsdk::rpc::camera::Setting* mutable_current_settings(int index);
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>* mutable_current_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>& _internal_current_settings() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>* _internal_mutable_current_settings();
  public:
  const ::mavsdk::rpc::camera::Setting& current_settings(int index) const;
  ::mavsdk::rpc::camera::Setting* add_current_settings();
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>& current_settings() const;
  // int32 component_id = 1;
  void clear_component_id() ;
  ::int32_t component_id() const;
  void set_component_id(::int32_t value);

  private:
  ::int32_t _internal_component_id() const;
  void _internal_set_component_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CurrentSettingsUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CurrentSettingsUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::camera::Setting > current_settings_;
    ::int32_t component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CaptureInfoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CaptureInfoResponse) */ {
 public:
  inline CaptureInfoResponse() : CaptureInfoResponse(nullptr) {}
  ~CaptureInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CaptureInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CaptureInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CaptureInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CaptureInfoResponse(const CaptureInfoResponse& from) : CaptureInfoResponse(nullptr, from) {}
  inline CaptureInfoResponse(CaptureInfoResponse&& from) noexcept
      : CaptureInfoResponse(nullptr, std::move(from)) {}
  inline CaptureInfoResponse& operator=(const CaptureInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaptureInfoResponse& operator=(CaptureInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaptureInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaptureInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CaptureInfoResponse*>(
        &_CaptureInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(CaptureInfoResponse& a, CaptureInfoResponse& b) { a.Swap(&b); }
  inline void Swap(CaptureInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaptureInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaptureInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CaptureInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaptureInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CaptureInfoResponse& from) { CaptureInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CaptureInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CaptureInfoResponse"; }

 protected:
  explicit CaptureInfoResponse(::google::protobuf::Arena* arena);
  CaptureInfoResponse(::google::protobuf::Arena* arena, const CaptureInfoResponse& from);
  CaptureInfoResponse(::google::protobuf::Arena* arena, CaptureInfoResponse&& from) noexcept
      : CaptureInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCaptureInfoFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CaptureInfo capture_info = 1;
  bool has_capture_info() const;
  void clear_capture_info() ;
  const ::mavsdk::rpc::camera::CaptureInfo& capture_info() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CaptureInfo* release_capture_info();
  ::mavsdk::rpc::camera::CaptureInfo* mutable_capture_info();
  void set_allocated_capture_info(::mavsdk::rpc::camera::CaptureInfo* value);
  void unsafe_arena_set_allocated_capture_info(::mavsdk::rpc::camera::CaptureInfo* value);
  ::mavsdk::rpc::camera::CaptureInfo* unsafe_arena_release_capture_info();

  private:
  const ::mavsdk::rpc::camera::CaptureInfo& _internal_capture_info() const;
  ::mavsdk::rpc::camera::CaptureInfo* _internal_mutable_capture_info();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CaptureInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CaptureInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CaptureInfo* capture_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CameraListResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CameraListResponse) */ {
 public:
  inline CameraListResponse() : CameraListResponse(nullptr) {}
  ~CameraListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraListResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraListResponse(const CameraListResponse& from) : CameraListResponse(nullptr, from) {}
  inline CameraListResponse(CameraListResponse&& from) noexcept
      : CameraListResponse(nullptr, std::move(from)) {}
  inline CameraListResponse& operator=(const CameraListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraListResponse& operator=(CameraListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraListResponse* internal_default_instance() {
    return reinterpret_cast<const CameraListResponse*>(
        &_CameraListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CameraListResponse& a, CameraListResponse& b) { a.Swap(&b); }
  inline void Swap(CameraListResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraListResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraListResponse& from) { CameraListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraListResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CameraListResponse"; }

 protected:
  explicit CameraListResponse(::google::protobuf::Arena* arena);
  CameraListResponse(::google::protobuf::Arena* arena, const CameraListResponse& from);
  CameraListResponse(::google::protobuf::Arena* arena, CameraListResponse&& from) noexcept
      : CameraListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraListFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CameraList camera_list = 1;
  bool has_camera_list() const;
  void clear_camera_list() ;
  const ::mavsdk::rpc::camera::CameraList& camera_list() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CameraList* release_camera_list();
  ::mavsdk::rpc::camera::CameraList* mutable_camera_list();
  void set_allocated_camera_list(::mavsdk::rpc::camera::CameraList* value);
  void unsafe_arena_set_allocated_camera_list(::mavsdk::rpc::camera::CameraList* value);
  ::mavsdk::rpc::camera::CameraList* unsafe_arena_release_camera_list();

  private:
  const ::mavsdk::rpc::camera::CameraList& _internal_camera_list() const;
  ::mavsdk::rpc::camera::CameraList* _internal_mutable_camera_list();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CameraListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraListResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CameraList* camera_list_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class VideoStreamInfoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.VideoStreamInfoResponse) */ {
 public:
  inline VideoStreamInfoResponse() : VideoStreamInfoResponse(nullptr) {}
  ~VideoStreamInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VideoStreamInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VideoStreamInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoStreamInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline VideoStreamInfoResponse(const VideoStreamInfoResponse& from) : VideoStreamInfoResponse(nullptr, from) {}
  inline VideoStreamInfoResponse(VideoStreamInfoResponse&& from) noexcept
      : VideoStreamInfoResponse(nullptr, std::move(from)) {}
  inline VideoStreamInfoResponse& operator=(const VideoStreamInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoStreamInfoResponse& operator=(VideoStreamInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoStreamInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoStreamInfoResponse* internal_default_instance() {
    return reinterpret_cast<const VideoStreamInfoResponse*>(
        &_VideoStreamInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(VideoStreamInfoResponse& a, VideoStreamInfoResponse& b) { a.Swap(&b); }
  inline void Swap(VideoStreamInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoStreamInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoStreamInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VideoStreamInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoStreamInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoStreamInfoResponse& from) { VideoStreamInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VideoStreamInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.VideoStreamInfoResponse"; }

 protected:
  explicit VideoStreamInfoResponse(::google::protobuf::Arena* arena);
  VideoStreamInfoResponse(::google::protobuf::Arena* arena, const VideoStreamInfoResponse& from);
  VideoStreamInfoResponse(::google::protobuf::Arena* arena, VideoStreamInfoResponse&& from) noexcept
      : VideoStreamInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.VideoStreamUpdate update = 1;
  bool has_update() const;
  void clear_update() ;
  const ::mavsdk::rpc::camera::VideoStreamUpdate& update() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::VideoStreamUpdate* release_update();
  ::mavsdk::rpc::camera::VideoStreamUpdate* mutable_update();
  void set_allocated_update(::mavsdk::rpc::camera::VideoStreamUpdate* value);
  void unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::VideoStreamUpdate* value);
  ::mavsdk::rpc::camera::VideoStreamUpdate* unsafe_arena_release_update();

  private:
  const ::mavsdk::rpc::camera::VideoStreamUpdate& _internal_update() const;
  ::mavsdk::rpc::camera::VideoStreamUpdate* _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.VideoStreamInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VideoStreamInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::VideoStreamUpdate* update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class PossibleSettingOptionsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.PossibleSettingOptionsResponse) */ {
 public:
  inline PossibleSettingOptionsResponse() : PossibleSettingOptionsResponse(nullptr) {}
  ~PossibleSettingOptionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PossibleSettingOptionsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PossibleSettingOptionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PossibleSettingOptionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PossibleSettingOptionsResponse(const PossibleSettingOptionsResponse& from) : PossibleSettingOptionsResponse(nullptr, from) {}
  inline PossibleSettingOptionsResponse(PossibleSettingOptionsResponse&& from) noexcept
      : PossibleSettingOptionsResponse(nullptr, std::move(from)) {}
  inline PossibleSettingOptionsResponse& operator=(const PossibleSettingOptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PossibleSettingOptionsResponse& operator=(PossibleSettingOptionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PossibleSettingOptionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PossibleSettingOptionsResponse* internal_default_instance() {
    return reinterpret_cast<const PossibleSettingOptionsResponse*>(
        &_PossibleSettingOptionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(PossibleSettingOptionsResponse& a, PossibleSettingOptionsResponse& b) { a.Swap(&b); }
  inline void Swap(PossibleSettingOptionsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PossibleSettingOptionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PossibleSettingOptionsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PossibleSettingOptionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PossibleSettingOptionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PossibleSettingOptionsResponse& from) { PossibleSettingOptionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PossibleSettingOptionsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.PossibleSettingOptionsResponse"; }

 protected:
  explicit PossibleSettingOptionsResponse(::google::protobuf::Arena* arena);
  PossibleSettingOptionsResponse(::google::protobuf::Arena* arena, const PossibleSettingOptionsResponse& from);
  PossibleSettingOptionsResponse(::google::protobuf::Arena* arena, PossibleSettingOptionsResponse&& from) noexcept
      : PossibleSettingOptionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.PossibleSettingOptionsUpdate update = 1;
  bool has_update() const;
  void clear_update() ;
  const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate& update() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* release_update();
  ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* mutable_update();
  void set_allocated_update(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* value);
  void unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* value);
  ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* unsafe_arena_release_update();

  private:
  const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate& _internal_update() const;
  ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PossibleSettingOptionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};
// -------------------------------------------------------------------

class CurrentSettingsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.camera.CurrentSettingsResponse) */ {
 public:
  inline CurrentSettingsResponse() : CurrentSettingsResponse(nullptr) {}
  ~CurrentSettingsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CurrentSettingsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CurrentSettingsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CurrentSettingsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CurrentSettingsResponse(const CurrentSettingsResponse& from) : CurrentSettingsResponse(nullptr, from) {}
  inline CurrentSettingsResponse(CurrentSettingsResponse&& from) noexcept
      : CurrentSettingsResponse(nullptr, std::move(from)) {}
  inline CurrentSettingsResponse& operator=(const CurrentSettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CurrentSettingsResponse& operator=(CurrentSettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CurrentSettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CurrentSettingsResponse* internal_default_instance() {
    return reinterpret_cast<const CurrentSettingsResponse*>(
        &_CurrentSettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(CurrentSettingsResponse& a, CurrentSettingsResponse& b) { a.Swap(&b); }
  inline void Swap(CurrentSettingsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CurrentSettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CurrentSettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CurrentSettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CurrentSettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CurrentSettingsResponse& from) { CurrentSettingsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CurrentSettingsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.camera.CurrentSettingsResponse"; }

 protected:
  explicit CurrentSettingsResponse(::google::protobuf::Arena* arena);
  CurrentSettingsResponse(::google::protobuf::Arena* arena, const CurrentSettingsResponse& from);
  CurrentSettingsResponse(::google::protobuf::Arena* arena, CurrentSettingsResponse&& from) noexcept
      : CurrentSettingsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateFieldNumber = 1,
  };
  // .mavsdk.rpc.camera.CurrentSettingsUpdate update = 1;
  bool has_update() const;
  void clear_update() ;
  const ::mavsdk::rpc::camera::CurrentSettingsUpdate& update() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::camera::CurrentSettingsUpdate* release_update();
  ::mavsdk::rpc::camera::CurrentSettingsUpdate* mutable_update();
  void set_allocated_update(::mavsdk::rpc::camera::CurrentSettingsUpdate* value);
  void unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::CurrentSettingsUpdate* value);
  ::mavsdk::rpc::camera::CurrentSettingsUpdate* unsafe_arena_release_update();

  private:
  const ::mavsdk::rpc::camera::CurrentSettingsUpdate& _internal_update() const;
  ::mavsdk::rpc::camera::CurrentSettingsUpdate* _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.camera.CurrentSettingsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CurrentSettingsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::camera::CurrentSettingsUpdate* update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_2fcamera_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Option

// string option_id = 1;
inline void Option::clear_option_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_id_.ClearToEmpty();
}
inline const std::string& Option::option_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Option.option_id)
  return _internal_option_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Option::set_option_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Option.option_id)
}
inline std::string* Option::mutable_option_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_option_id();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Option.option_id)
  return _s;
}
inline const std::string& Option::_internal_option_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.option_id_.Get();
}
inline void Option::_internal_set_option_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_id_.Set(value, GetArena());
}
inline std::string* Option::_internal_mutable_option_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.option_id_.Mutable( GetArena());
}
inline std::string* Option::release_option_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Option.option_id)
  return _impl_.option_id_.Release();
}
inline void Option::set_allocated_option_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.option_id_.IsDefault()) {
    _impl_.option_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Option.option_id)
}

// string option_description = 2;
inline void Option::clear_option_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_description_.ClearToEmpty();
}
inline const std::string& Option::option_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Option.option_description)
  return _internal_option_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Option::set_option_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Option.option_description)
}
inline std::string* Option::mutable_option_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_option_description();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Option.option_description)
  return _s;
}
inline const std::string& Option::_internal_option_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.option_description_.Get();
}
inline void Option::_internal_set_option_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_description_.Set(value, GetArena());
}
inline std::string* Option::_internal_mutable_option_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.option_description_.Mutable( GetArena());
}
inline std::string* Option::release_option_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Option.option_description)
  return _impl_.option_description_.Release();
}
inline void Option::set_allocated_option_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.option_description_.IsDefault()) {
    _impl_.option_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Option.option_description)
}

// -------------------------------------------------------------------

// Setting

// string setting_id = 1;
inline void Setting::clear_setting_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.ClearToEmpty();
}
inline const std::string& Setting::setting_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Setting.setting_id)
  return _internal_setting_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Setting::set_setting_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Setting.setting_id)
}
inline std::string* Setting::mutable_setting_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_setting_id();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Setting.setting_id)
  return _s;
}
inline const std::string& Setting::_internal_setting_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_id_.Get();
}
inline void Setting::_internal_set_setting_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.Set(value, GetArena());
}
inline std::string* Setting::_internal_mutable_setting_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.setting_id_.Mutable( GetArena());
}
inline std::string* Setting::release_setting_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Setting.setting_id)
  return _impl_.setting_id_.Release();
}
inline void Setting::set_allocated_setting_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.setting_id_.IsDefault()) {
    _impl_.setting_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Setting.setting_id)
}

// string setting_description = 2;
inline void Setting::clear_setting_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.ClearToEmpty();
}
inline const std::string& Setting::setting_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Setting.setting_description)
  return _internal_setting_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Setting::set_setting_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Setting.setting_description)
}
inline std::string* Setting::mutable_setting_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_setting_description();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Setting.setting_description)
  return _s;
}
inline const std::string& Setting::_internal_setting_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_description_.Get();
}
inline void Setting::_internal_set_setting_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.Set(value, GetArena());
}
inline std::string* Setting::_internal_mutable_setting_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.setting_description_.Mutable( GetArena());
}
inline std::string* Setting::release_setting_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Setting.setting_description)
  return _impl_.setting_description_.Release();
}
inline void Setting::set_allocated_setting_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.setting_description_.IsDefault()) {
    _impl_.setting_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Setting.setting_description)
}

// .mavsdk.rpc.camera.Option option = 3;
inline bool Setting::has_option() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.option_ != nullptr);
  return value;
}
inline void Setting::clear_option() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.option_ != nullptr) _impl_.option_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::Option& Setting::_internal_option() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Option* p = _impl_.option_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Option&>(::mavsdk::rpc::camera::_Option_default_instance_);
}
inline const ::mavsdk::rpc::camera::Option& Setting::option() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Setting.option)
  return _internal_option();
}
inline void Setting::unsafe_arena_set_allocated_option(::mavsdk::rpc::camera::Option* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.option_);
  }
  _impl_.option_ = reinterpret_cast<::mavsdk::rpc::camera::Option*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.Setting.option)
}
inline ::mavsdk::rpc::camera::Option* Setting::release_option() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Option* released = _impl_.option_;
  _impl_.option_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Option* Setting::unsafe_arena_release_option() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Setting.option)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Option* temp = _impl_.option_;
  _impl_.option_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Option* Setting::_internal_mutable_option() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.option_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Option>(GetArena());
    _impl_.option_ = reinterpret_cast<::mavsdk::rpc::camera::Option*>(p);
  }
  return _impl_.option_;
}
inline ::mavsdk::rpc::camera::Option* Setting::mutable_option() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::Option* _msg = _internal_mutable_option();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Setting.option)
  return _msg;
}
inline void Setting::set_allocated_option(::mavsdk::rpc::camera::Option* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.option_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.option_ = reinterpret_cast<::mavsdk::rpc::camera::Option*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Setting.option)
}

// bool is_range = 4;
inline void Setting::clear_is_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_range_ = false;
}
inline bool Setting::is_range() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Setting.is_range)
  return _internal_is_range();
}
inline void Setting::set_is_range(bool value) {
  _internal_set_is_range(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Setting.is_range)
}
inline bool Setting::_internal_is_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_range_;
}
inline void Setting::_internal_set_is_range(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_range_ = value;
}

// -------------------------------------------------------------------

// SettingOptions

// int32 component_id = 1;
inline void SettingOptions::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t SettingOptions::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SettingOptions.component_id)
  return _internal_component_id();
}
inline void SettingOptions::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SettingOptions.component_id)
}
inline ::int32_t SettingOptions::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void SettingOptions::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// string setting_id = 2;
inline void SettingOptions::clear_setting_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.ClearToEmpty();
}
inline const std::string& SettingOptions::setting_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SettingOptions.setting_id)
  return _internal_setting_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingOptions::set_setting_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SettingOptions.setting_id)
}
inline std::string* SettingOptions::mutable_setting_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_setting_id();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.SettingOptions.setting_id)
  return _s;
}
inline const std::string& SettingOptions::_internal_setting_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_id_.Get();
}
inline void SettingOptions::_internal_set_setting_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.Set(value, GetArena());
}
inline std::string* SettingOptions::_internal_mutable_setting_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.setting_id_.Mutable( GetArena());
}
inline std::string* SettingOptions::release_setting_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.SettingOptions.setting_id)
  return _impl_.setting_id_.Release();
}
inline void SettingOptions::set_allocated_setting_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.setting_id_.IsDefault()) {
    _impl_.setting_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.SettingOptions.setting_id)
}

// string setting_description = 3;
inline void SettingOptions::clear_setting_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.ClearToEmpty();
}
inline const std::string& SettingOptions::setting_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SettingOptions.setting_description)
  return _internal_setting_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingOptions::set_setting_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SettingOptions.setting_description)
}
inline std::string* SettingOptions::mutable_setting_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_setting_description();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.SettingOptions.setting_description)
  return _s;
}
inline const std::string& SettingOptions::_internal_setting_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_description_.Get();
}
inline void SettingOptions::_internal_set_setting_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.Set(value, GetArena());
}
inline std::string* SettingOptions::_internal_mutable_setting_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.setting_description_.Mutable( GetArena());
}
inline std::string* SettingOptions::release_setting_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.SettingOptions.setting_description)
  return _impl_.setting_description_.Release();
}
inline void SettingOptions::set_allocated_setting_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.setting_description_.IsDefault()) {
    _impl_.setting_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.SettingOptions.setting_description)
}

// repeated .mavsdk.rpc.camera.Option options = 4;
inline int SettingOptions::_internal_options_size() const {
  return _internal_options().size();
}
inline int SettingOptions::options_size() const {
  return _internal_options_size();
}
inline void SettingOptions::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.options_.Clear();
}
inline ::mavsdk::rpc::camera::Option* SettingOptions::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.SettingOptions.options)
  return _internal_mutable_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>* SettingOptions::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.SettingOptions.options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_options();
}
inline const ::mavsdk::rpc::camera::Option& SettingOptions::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SettingOptions.options)
  return _internal_options().Get(index);
}
inline ::mavsdk::rpc::camera::Option* SettingOptions::add_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::Option* _add = _internal_mutable_options()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.SettingOptions.options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>& SettingOptions::options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.SettingOptions.options)
  return _internal_options();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>&
SettingOptions::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Option>*
SettingOptions::_internal_mutable_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.options_;
}

// bool is_range = 5;
inline void SettingOptions::clear_is_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_range_ = false;
}
inline bool SettingOptions::is_range() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SettingOptions.is_range)
  return _internal_is_range();
}
inline void SettingOptions::set_is_range(bool value) {
  _internal_set_is_range(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SettingOptions.is_range)
}
inline bool SettingOptions::_internal_is_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_range_;
}
inline void SettingOptions::_internal_set_is_range(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_range_ = value;
}

// -------------------------------------------------------------------

// VideoStreamSettings

// float frame_rate_hz = 1;
inline void VideoStreamSettings::clear_frame_rate_hz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_rate_hz_ = 0;
}
inline float VideoStreamSettings::frame_rate_hz() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.frame_rate_hz)
  return _internal_frame_rate_hz();
}
inline void VideoStreamSettings::set_frame_rate_hz(float value) {
  _internal_set_frame_rate_hz(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.frame_rate_hz)
}
inline float VideoStreamSettings::_internal_frame_rate_hz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_rate_hz_;
}
inline void VideoStreamSettings::_internal_set_frame_rate_hz(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_rate_hz_ = value;
}

// uint32 horizontal_resolution_pix = 2;
inline void VideoStreamSettings::clear_horizontal_resolution_pix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_resolution_pix_ = 0u;
}
inline ::uint32_t VideoStreamSettings::horizontal_resolution_pix() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.horizontal_resolution_pix)
  return _internal_horizontal_resolution_pix();
}
inline void VideoStreamSettings::set_horizontal_resolution_pix(::uint32_t value) {
  _internal_set_horizontal_resolution_pix(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.horizontal_resolution_pix)
}
inline ::uint32_t VideoStreamSettings::_internal_horizontal_resolution_pix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.horizontal_resolution_pix_;
}
inline void VideoStreamSettings::_internal_set_horizontal_resolution_pix(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_resolution_pix_ = value;
}

// uint32 vertical_resolution_pix = 3;
inline void VideoStreamSettings::clear_vertical_resolution_pix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_resolution_pix_ = 0u;
}
inline ::uint32_t VideoStreamSettings::vertical_resolution_pix() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.vertical_resolution_pix)
  return _internal_vertical_resolution_pix();
}
inline void VideoStreamSettings::set_vertical_resolution_pix(::uint32_t value) {
  _internal_set_vertical_resolution_pix(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.vertical_resolution_pix)
}
inline ::uint32_t VideoStreamSettings::_internal_vertical_resolution_pix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertical_resolution_pix_;
}
inline void VideoStreamSettings::_internal_set_vertical_resolution_pix(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_resolution_pix_ = value;
}

// uint32 bit_rate_b_s = 4;
inline void VideoStreamSettings::clear_bit_rate_b_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_rate_b_s_ = 0u;
}
inline ::uint32_t VideoStreamSettings::bit_rate_b_s() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.bit_rate_b_s)
  return _internal_bit_rate_b_s();
}
inline void VideoStreamSettings::set_bit_rate_b_s(::uint32_t value) {
  _internal_set_bit_rate_b_s(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.bit_rate_b_s)
}
inline ::uint32_t VideoStreamSettings::_internal_bit_rate_b_s() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bit_rate_b_s_;
}
inline void VideoStreamSettings::_internal_set_bit_rate_b_s(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_rate_b_s_ = value;
}

// uint32 rotation_deg = 5;
inline void VideoStreamSettings::clear_rotation_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_deg_ = 0u;
}
inline ::uint32_t VideoStreamSettings::rotation_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.rotation_deg)
  return _internal_rotation_deg();
}
inline void VideoStreamSettings::set_rotation_deg(::uint32_t value) {
  _internal_set_rotation_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.rotation_deg)
}
inline ::uint32_t VideoStreamSettings::_internal_rotation_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rotation_deg_;
}
inline void VideoStreamSettings::_internal_set_rotation_deg(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_deg_ = value;
}

// string uri = 6;
inline void VideoStreamSettings::clear_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uri_.ClearToEmpty();
}
inline const std::string& VideoStreamSettings::uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.uri)
  return _internal_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VideoStreamSettings::set_uri(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.uri)
}
inline std::string* VideoStreamSettings::mutable_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uri();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.VideoStreamSettings.uri)
  return _s;
}
inline const std::string& VideoStreamSettings::_internal_uri() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uri_.Get();
}
inline void VideoStreamSettings::_internal_set_uri(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uri_.Set(value, GetArena());
}
inline std::string* VideoStreamSettings::_internal_mutable_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uri_.Mutable( GetArena());
}
inline std::string* VideoStreamSettings::release_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.VideoStreamSettings.uri)
  return _impl_.uri_.Release();
}
inline void VideoStreamSettings::set_allocated_uri(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uri_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uri_.IsDefault()) {
    _impl_.uri_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.VideoStreamSettings.uri)
}

// float horizontal_fov_deg = 7;
inline void VideoStreamSettings::clear_horizontal_fov_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_fov_deg_ = 0;
}
inline float VideoStreamSettings::horizontal_fov_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamSettings.horizontal_fov_deg)
  return _internal_horizontal_fov_deg();
}
inline void VideoStreamSettings::set_horizontal_fov_deg(float value) {
  _internal_set_horizontal_fov_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamSettings.horizontal_fov_deg)
}
inline float VideoStreamSettings::_internal_horizontal_fov_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.horizontal_fov_deg_;
}
inline void VideoStreamSettings::_internal_set_horizontal_fov_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_fov_deg_ = value;
}

// -------------------------------------------------------------------

// VideoStreamInfo

// int32 stream_id = 1;
inline void VideoStreamInfo::clear_stream_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_ = 0;
}
inline ::int32_t VideoStreamInfo::stream_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamInfo.stream_id)
  return _internal_stream_id();
}
inline void VideoStreamInfo::set_stream_id(::int32_t value) {
  _internal_set_stream_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamInfo.stream_id)
}
inline ::int32_t VideoStreamInfo::_internal_stream_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_id_;
}
inline void VideoStreamInfo::_internal_set_stream_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_ = value;
}

// .mavsdk.rpc.camera.VideoStreamSettings settings = 2;
inline bool VideoStreamInfo::has_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settings_ != nullptr);
  return value;
}
inline void VideoStreamInfo::clear_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settings_ != nullptr) _impl_.settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::VideoStreamSettings& VideoStreamInfo::_internal_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::VideoStreamSettings* p = _impl_.settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::VideoStreamSettings&>(::mavsdk::rpc::camera::_VideoStreamSettings_default_instance_);
}
inline const ::mavsdk::rpc::camera::VideoStreamSettings& VideoStreamInfo::settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamInfo.settings)
  return _internal_settings();
}
inline void VideoStreamInfo::unsafe_arena_set_allocated_settings(::mavsdk::rpc::camera::VideoStreamSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settings_);
  }
  _impl_.settings_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.VideoStreamInfo.settings)
}
inline ::mavsdk::rpc::camera::VideoStreamSettings* VideoStreamInfo::release_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamSettings* released = _impl_.settings_;
  _impl_.settings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::VideoStreamSettings* VideoStreamInfo::unsafe_arena_release_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.VideoStreamInfo.settings)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamSettings* temp = _impl_.settings_;
  _impl_.settings_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::VideoStreamSettings* VideoStreamInfo::_internal_mutable_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::VideoStreamSettings>(GetArena());
    _impl_.settings_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamSettings*>(p);
  }
  return _impl_.settings_;
}
inline ::mavsdk::rpc::camera::VideoStreamSettings* VideoStreamInfo::mutable_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamSettings* _msg = _internal_mutable_settings();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.VideoStreamInfo.settings)
  return _msg;
}
inline void VideoStreamInfo::set_allocated_settings(::mavsdk::rpc::camera::VideoStreamSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.settings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.settings_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.VideoStreamInfo.settings)
}

// .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus status = 3;
inline void VideoStreamInfo::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus VideoStreamInfo::status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamInfo.status)
  return _internal_status();
}
inline void VideoStreamInfo::set_status(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamInfo.status)
}
inline ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus VideoStreamInfo::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus>(_impl_.status_);
}
inline void VideoStreamInfo::_internal_set_status(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
inline void VideoStreamInfo::clear_spectrum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spectrum_ = 0;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::spectrum() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamInfo.spectrum)
  return _internal_spectrum();
}
inline void VideoStreamInfo::set_spectrum(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum value) {
  _internal_set_spectrum(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamInfo.spectrum)
}
inline ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::_internal_spectrum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum>(_impl_.spectrum_);
}
inline void VideoStreamInfo::_internal_set_spectrum(::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spectrum_ = value;
}

// -------------------------------------------------------------------

// TakePhotoRequest

// int32 component_id = 1;
inline void TakePhotoRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t TakePhotoRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TakePhotoRequest.component_id)
  return _internal_component_id();
}
inline void TakePhotoRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TakePhotoRequest.component_id)
}
inline ::int32_t TakePhotoRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void TakePhotoRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// TakePhotoResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool TakePhotoResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void TakePhotoResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& TakePhotoResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& TakePhotoResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TakePhotoResponse.camera_result)
  return _internal_camera_result();
}
inline void TakePhotoResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.TakePhotoResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* TakePhotoResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* TakePhotoResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.TakePhotoResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* TakePhotoResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* TakePhotoResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.TakePhotoResponse.camera_result)
  return _msg;
}
inline void TakePhotoResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.TakePhotoResponse.camera_result)
}

// -------------------------------------------------------------------

// StartPhotoIntervalRequest

// int32 component_id = 1;
inline void StartPhotoIntervalRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StartPhotoIntervalRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartPhotoIntervalRequest.component_id)
  return _internal_component_id();
}
inline void StartPhotoIntervalRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StartPhotoIntervalRequest.component_id)
}
inline ::int32_t StartPhotoIntervalRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StartPhotoIntervalRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// float interval_s = 2;
inline void StartPhotoIntervalRequest::clear_interval_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_s_ = 0;
}
inline float StartPhotoIntervalRequest::interval_s() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartPhotoIntervalRequest.interval_s)
  return _internal_interval_s();
}
inline void StartPhotoIntervalRequest::set_interval_s(float value) {
  _internal_set_interval_s(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StartPhotoIntervalRequest.interval_s)
}
inline float StartPhotoIntervalRequest::_internal_interval_s() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interval_s_;
}
inline void StartPhotoIntervalRequest::_internal_set_interval_s(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_s_ = value;
}

// -------------------------------------------------------------------

// StartPhotoIntervalResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool StartPhotoIntervalResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void StartPhotoIntervalResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& StartPhotoIntervalResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& StartPhotoIntervalResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartPhotoIntervalResponse.camera_result)
  return _internal_camera_result();
}
inline void StartPhotoIntervalResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StartPhotoIntervalResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* StartPhotoIntervalResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* StartPhotoIntervalResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StartPhotoIntervalResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* StartPhotoIntervalResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* StartPhotoIntervalResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StartPhotoIntervalResponse.camera_result)
  return _msg;
}
inline void StartPhotoIntervalResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StartPhotoIntervalResponse.camera_result)
}

// -------------------------------------------------------------------

// StopPhotoIntervalRequest

// int32 component_id = 1;
inline void StopPhotoIntervalRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StopPhotoIntervalRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopPhotoIntervalRequest.component_id)
  return _internal_component_id();
}
inline void StopPhotoIntervalRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StopPhotoIntervalRequest.component_id)
}
inline ::int32_t StopPhotoIntervalRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StopPhotoIntervalRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// StopPhotoIntervalResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool StopPhotoIntervalResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void StopPhotoIntervalResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& StopPhotoIntervalResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& StopPhotoIntervalResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopPhotoIntervalResponse.camera_result)
  return _internal_camera_result();
}
inline void StopPhotoIntervalResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StopPhotoIntervalResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* StopPhotoIntervalResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* StopPhotoIntervalResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StopPhotoIntervalResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* StopPhotoIntervalResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* StopPhotoIntervalResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StopPhotoIntervalResponse.camera_result)
  return _msg;
}
inline void StopPhotoIntervalResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StopPhotoIntervalResponse.camera_result)
}

// -------------------------------------------------------------------

// StartVideoRequest

// int32 component_id = 1;
inline void StartVideoRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StartVideoRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartVideoRequest.component_id)
  return _internal_component_id();
}
inline void StartVideoRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StartVideoRequest.component_id)
}
inline ::int32_t StartVideoRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StartVideoRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// StartVideoResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool StartVideoResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void StartVideoResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& StartVideoResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& StartVideoResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartVideoResponse.camera_result)
  return _internal_camera_result();
}
inline void StartVideoResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StartVideoResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StartVideoResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StartVideoResponse.camera_result)
  return _msg;
}
inline void StartVideoResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StartVideoResponse.camera_result)
}

// -------------------------------------------------------------------

// StopVideoRequest

// int32 component_id = 1;
inline void StopVideoRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StopVideoRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopVideoRequest.component_id)
  return _internal_component_id();
}
inline void StopVideoRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StopVideoRequest.component_id)
}
inline ::int32_t StopVideoRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StopVideoRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// StopVideoResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool StopVideoResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void StopVideoResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& StopVideoResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& StopVideoResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopVideoResponse.camera_result)
  return _internal_camera_result();
}
inline void StopVideoResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StopVideoResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StopVideoResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StopVideoResponse.camera_result)
  return _msg;
}
inline void StopVideoResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StopVideoResponse.camera_result)
}

// -------------------------------------------------------------------

// StartVideoStreamingRequest

// int32 component_id = 1;
inline void StartVideoStreamingRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StartVideoStreamingRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartVideoStreamingRequest.component_id)
  return _internal_component_id();
}
inline void StartVideoStreamingRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StartVideoStreamingRequest.component_id)
}
inline ::int32_t StartVideoStreamingRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StartVideoStreamingRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// int32 stream_id = 2;
inline void StartVideoStreamingRequest::clear_stream_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_ = 0;
}
inline ::int32_t StartVideoStreamingRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartVideoStreamingRequest.stream_id)
  return _internal_stream_id();
}
inline void StartVideoStreamingRequest::set_stream_id(::int32_t value) {
  _internal_set_stream_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StartVideoStreamingRequest.stream_id)
}
inline ::int32_t StartVideoStreamingRequest::_internal_stream_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_id_;
}
inline void StartVideoStreamingRequest::_internal_set_stream_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_ = value;
}

// -------------------------------------------------------------------

// StartVideoStreamingResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool StartVideoStreamingResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void StartVideoStreamingResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& StartVideoStreamingResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& StartVideoStreamingResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StartVideoStreamingResponse.camera_result)
  return _internal_camera_result();
}
inline void StartVideoStreamingResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StartVideoStreamingResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoStreamingResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoStreamingResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StartVideoStreamingResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoStreamingResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* StartVideoStreamingResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StartVideoStreamingResponse.camera_result)
  return _msg;
}
inline void StartVideoStreamingResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StartVideoStreamingResponse.camera_result)
}

// -------------------------------------------------------------------

// StopVideoStreamingRequest

// int32 component_id = 1;
inline void StopVideoStreamingRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StopVideoStreamingRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopVideoStreamingRequest.component_id)
  return _internal_component_id();
}
inline void StopVideoStreamingRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StopVideoStreamingRequest.component_id)
}
inline ::int32_t StopVideoStreamingRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StopVideoStreamingRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// int32 stream_id = 2;
inline void StopVideoStreamingRequest::clear_stream_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_ = 0;
}
inline ::int32_t StopVideoStreamingRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopVideoStreamingRequest.stream_id)
  return _internal_stream_id();
}
inline void StopVideoStreamingRequest::set_stream_id(::int32_t value) {
  _internal_set_stream_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StopVideoStreamingRequest.stream_id)
}
inline ::int32_t StopVideoStreamingRequest::_internal_stream_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_id_;
}
inline void StopVideoStreamingRequest::_internal_set_stream_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_ = value;
}

// -------------------------------------------------------------------

// StopVideoStreamingResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool StopVideoStreamingResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void StopVideoStreamingResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& StopVideoStreamingResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& StopVideoStreamingResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StopVideoStreamingResponse.camera_result)
  return _internal_camera_result();
}
inline void StopVideoStreamingResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StopVideoStreamingResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoStreamingResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoStreamingResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StopVideoStreamingResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoStreamingResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* StopVideoStreamingResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StopVideoStreamingResponse.camera_result)
  return _msg;
}
inline void StopVideoStreamingResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StopVideoStreamingResponse.camera_result)
}

// -------------------------------------------------------------------

// SetModeRequest

// int32 component_id = 1;
inline void SetModeRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t SetModeRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SetModeRequest.component_id)
  return _internal_component_id();
}
inline void SetModeRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SetModeRequest.component_id)
}
inline ::int32_t SetModeRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void SetModeRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.Mode mode = 2;
inline void SetModeRequest::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::mavsdk::rpc::camera::Mode SetModeRequest::mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SetModeRequest.mode)
  return _internal_mode();
}
inline void SetModeRequest::set_mode(::mavsdk::rpc::camera::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SetModeRequest.mode)
}
inline ::mavsdk::rpc::camera::Mode SetModeRequest::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::Mode>(_impl_.mode_);
}
inline void SetModeRequest::_internal_set_mode(::mavsdk::rpc::camera::Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// SetModeResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool SetModeResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void SetModeResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& SetModeResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& SetModeResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SetModeResponse.camera_result)
  return _internal_camera_result();
}
inline void SetModeResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.SetModeResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* SetModeResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* SetModeResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.SetModeResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* SetModeResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* SetModeResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.SetModeResponse.camera_result)
  return _msg;
}
inline void SetModeResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.SetModeResponse.camera_result)
}

// -------------------------------------------------------------------

// ListPhotosRequest

// int32 component_id = 1;
inline void ListPhotosRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ListPhotosRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ListPhotosRequest.component_id)
  return _internal_component_id();
}
inline void ListPhotosRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ListPhotosRequest.component_id)
}
inline ::int32_t ListPhotosRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ListPhotosRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.PhotosRange photos_range = 2;
inline void ListPhotosRequest::clear_photos_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.photos_range_ = 0;
}
inline ::mavsdk::rpc::camera::PhotosRange ListPhotosRequest::photos_range() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ListPhotosRequest.photos_range)
  return _internal_photos_range();
}
inline void ListPhotosRequest::set_photos_range(::mavsdk::rpc::camera::PhotosRange value) {
  _internal_set_photos_range(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ListPhotosRequest.photos_range)
}
inline ::mavsdk::rpc::camera::PhotosRange ListPhotosRequest::_internal_photos_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::PhotosRange>(_impl_.photos_range_);
}
inline void ListPhotosRequest::_internal_set_photos_range(::mavsdk::rpc::camera::PhotosRange value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.photos_range_ = value;
}

// -------------------------------------------------------------------

// ListPhotosResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool ListPhotosResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void ListPhotosResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& ListPhotosResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& ListPhotosResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ListPhotosResponse.camera_result)
  return _internal_camera_result();
}
inline void ListPhotosResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ListPhotosResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* ListPhotosResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* ListPhotosResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ListPhotosResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* ListPhotosResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* ListPhotosResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ListPhotosResponse.camera_result)
  return _msg;
}
inline void ListPhotosResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ListPhotosResponse.camera_result)
}

// repeated .mavsdk.rpc.camera.CaptureInfo capture_infos = 2;
inline int ListPhotosResponse::_internal_capture_infos_size() const {
  return _internal_capture_infos().size();
}
inline int ListPhotosResponse::capture_infos_size() const {
  return _internal_capture_infos_size();
}
inline void ListPhotosResponse::clear_capture_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capture_infos_.Clear();
}
inline ::mavsdk::rpc::camera::CaptureInfo* ListPhotosResponse::mutable_capture_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ListPhotosResponse.capture_infos)
  return _internal_mutable_capture_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>* ListPhotosResponse::mutable_capture_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.ListPhotosResponse.capture_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_capture_infos();
}
inline const ::mavsdk::rpc::camera::CaptureInfo& ListPhotosResponse::capture_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ListPhotosResponse.capture_infos)
  return _internal_capture_infos().Get(index);
}
inline ::mavsdk::rpc::camera::CaptureInfo* ListPhotosResponse::add_capture_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::CaptureInfo* _add = _internal_mutable_capture_infos()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.ListPhotosResponse.capture_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>& ListPhotosResponse::capture_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.ListPhotosResponse.capture_infos)
  return _internal_capture_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>&
ListPhotosResponse::_internal_capture_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capture_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::CaptureInfo>*
ListPhotosResponse::_internal_mutable_capture_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.capture_infos_;
}

// -------------------------------------------------------------------

// SubscribeCameraListRequest

// -------------------------------------------------------------------

// CameraListResponse

// .mavsdk.rpc.camera.CameraList camera_list = 1;
inline bool CameraListResponse::has_camera_list() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_list_ != nullptr);
  return value;
}
inline void CameraListResponse::clear_camera_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_list_ != nullptr) _impl_.camera_list_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraList& CameraListResponse::_internal_camera_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraList* p = _impl_.camera_list_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraList&>(::mavsdk::rpc::camera::_CameraList_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraList& CameraListResponse::camera_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CameraListResponse.camera_list)
  return _internal_camera_list();
}
inline void CameraListResponse::unsafe_arena_set_allocated_camera_list(::mavsdk::rpc::camera::CameraList* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_list_);
  }
  _impl_.camera_list_ = reinterpret_cast<::mavsdk::rpc::camera::CameraList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.CameraListResponse.camera_list)
}
inline ::mavsdk::rpc::camera::CameraList* CameraListResponse::release_camera_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraList* released = _impl_.camera_list_;
  _impl_.camera_list_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraList* CameraListResponse::unsafe_arena_release_camera_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CameraListResponse.camera_list)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraList* temp = _impl_.camera_list_;
  _impl_.camera_list_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraList* CameraListResponse::_internal_mutable_camera_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_list_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraList>(GetArena());
    _impl_.camera_list_ = reinterpret_cast<::mavsdk::rpc::camera::CameraList*>(p);
  }
  return _impl_.camera_list_;
}
inline ::mavsdk::rpc::camera::CameraList* CameraListResponse::mutable_camera_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraList* _msg = _internal_mutable_camera_list();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CameraListResponse.camera_list)
  return _msg;
}
inline void CameraListResponse::set_allocated_camera_list(::mavsdk::rpc::camera::CameraList* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_list_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_list_ = reinterpret_cast<::mavsdk::rpc::camera::CameraList*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CameraListResponse.camera_list)
}

// -------------------------------------------------------------------

// ModeUpdate

// int32 component_id = 1;
inline void ModeUpdate::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ModeUpdate::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ModeUpdate.component_id)
  return _internal_component_id();
}
inline void ModeUpdate::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ModeUpdate.component_id)
}
inline ::int32_t ModeUpdate::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ModeUpdate::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.Mode mode = 2;
inline void ModeUpdate::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::mavsdk::rpc::camera::Mode ModeUpdate::mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ModeUpdate.mode)
  return _internal_mode();
}
inline void ModeUpdate::set_mode(::mavsdk::rpc::camera::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ModeUpdate.mode)
}
inline ::mavsdk::rpc::camera::Mode ModeUpdate::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::Mode>(_impl_.mode_);
}
inline void ModeUpdate::_internal_set_mode(::mavsdk::rpc::camera::Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// SubscribeModeRequest

// -------------------------------------------------------------------

// ModeResponse

// .mavsdk.rpc.camera.ModeUpdate update = 1;
inline bool ModeResponse::has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline void ModeResponse::clear_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::ModeUpdate& ModeResponse::_internal_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::ModeUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::ModeUpdate&>(::mavsdk::rpc::camera::_ModeUpdate_default_instance_);
}
inline const ::mavsdk::rpc::camera::ModeUpdate& ModeResponse::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ModeResponse.update)
  return _internal_update();
}
inline void ModeResponse::unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::ModeUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::ModeUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ModeResponse.update)
}
inline ::mavsdk::rpc::camera::ModeUpdate* ModeResponse::release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::ModeUpdate* released = _impl_.update_;
  _impl_.update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::ModeUpdate* ModeResponse::unsafe_arena_release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ModeResponse.update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::ModeUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::ModeUpdate* ModeResponse::_internal_mutable_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::ModeUpdate>(GetArena());
    _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::ModeUpdate*>(p);
  }
  return _impl_.update_;
}
inline ::mavsdk::rpc::camera::ModeUpdate* ModeResponse::mutable_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::ModeUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ModeResponse.update)
  return _msg;
}
inline void ModeResponse::set_allocated_update(::mavsdk::rpc::camera::ModeUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::ModeUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ModeResponse.update)
}

// -------------------------------------------------------------------

// VideoStreamUpdate

// int32 component_id = 1;
inline void VideoStreamUpdate::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t VideoStreamUpdate::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamUpdate.component_id)
  return _internal_component_id();
}
inline void VideoStreamUpdate::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.VideoStreamUpdate.component_id)
}
inline ::int32_t VideoStreamUpdate::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void VideoStreamUpdate::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
inline bool VideoStreamUpdate::has_video_stream_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.video_stream_info_ != nullptr);
  return value;
}
inline void VideoStreamUpdate::clear_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.video_stream_info_ != nullptr) _impl_.video_stream_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::VideoStreamInfo& VideoStreamUpdate::_internal_video_stream_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::VideoStreamInfo* p = _impl_.video_stream_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::VideoStreamInfo&>(::mavsdk::rpc::camera::_VideoStreamInfo_default_instance_);
}
inline const ::mavsdk::rpc::camera::VideoStreamInfo& VideoStreamUpdate::video_stream_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamUpdate.video_stream_info)
  return _internal_video_stream_info();
}
inline void VideoStreamUpdate::unsafe_arena_set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.video_stream_info_);
  }
  _impl_.video_stream_info_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.VideoStreamUpdate.video_stream_info)
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* VideoStreamUpdate::release_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamInfo* released = _impl_.video_stream_info_;
  _impl_.video_stream_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* VideoStreamUpdate::unsafe_arena_release_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.VideoStreamUpdate.video_stream_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamInfo* temp = _impl_.video_stream_info_;
  _impl_.video_stream_info_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* VideoStreamUpdate::_internal_mutable_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.video_stream_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::VideoStreamInfo>(GetArena());
    _impl_.video_stream_info_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamInfo*>(p);
  }
  return _impl_.video_stream_info_;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* VideoStreamUpdate::mutable_video_stream_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamInfo* _msg = _internal_mutable_video_stream_info();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.VideoStreamUpdate.video_stream_info)
  return _msg;
}
inline void VideoStreamUpdate::set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.video_stream_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.video_stream_info_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.VideoStreamUpdate.video_stream_info)
}

// -------------------------------------------------------------------

// SubscribeVideoStreamInfoRequest

// -------------------------------------------------------------------

// VideoStreamInfoResponse

// .mavsdk.rpc.camera.VideoStreamUpdate update = 1;
inline bool VideoStreamInfoResponse::has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline void VideoStreamInfoResponse::clear_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::VideoStreamUpdate& VideoStreamInfoResponse::_internal_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::VideoStreamUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::VideoStreamUpdate&>(::mavsdk::rpc::camera::_VideoStreamUpdate_default_instance_);
}
inline const ::mavsdk::rpc::camera::VideoStreamUpdate& VideoStreamInfoResponse::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.VideoStreamInfoResponse.update)
  return _internal_update();
}
inline void VideoStreamInfoResponse::unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::VideoStreamUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.VideoStreamInfoResponse.update)
}
inline ::mavsdk::rpc::camera::VideoStreamUpdate* VideoStreamInfoResponse::release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamUpdate* released = _impl_.update_;
  _impl_.update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::VideoStreamUpdate* VideoStreamInfoResponse::unsafe_arena_release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.VideoStreamInfoResponse.update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::VideoStreamUpdate* VideoStreamInfoResponse::_internal_mutable_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::VideoStreamUpdate>(GetArena());
    _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamUpdate*>(p);
  }
  return _impl_.update_;
}
inline ::mavsdk::rpc::camera::VideoStreamUpdate* VideoStreamInfoResponse::mutable_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::VideoStreamUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.VideoStreamInfoResponse.update)
  return _msg;
}
inline void VideoStreamInfoResponse::set_allocated_update(::mavsdk::rpc::camera::VideoStreamUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.VideoStreamInfoResponse.update)
}

// -------------------------------------------------------------------

// SubscribeCaptureInfoRequest

// -------------------------------------------------------------------

// CaptureInfoResponse

// .mavsdk.rpc.camera.CaptureInfo capture_info = 1;
inline bool CaptureInfoResponse::has_capture_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.capture_info_ != nullptr);
  return value;
}
inline void CaptureInfoResponse::clear_capture_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capture_info_ != nullptr) _impl_.capture_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CaptureInfo& CaptureInfoResponse::_internal_capture_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CaptureInfo* p = _impl_.capture_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CaptureInfo&>(::mavsdk::rpc::camera::_CaptureInfo_default_instance_);
}
inline const ::mavsdk::rpc::camera::CaptureInfo& CaptureInfoResponse::capture_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfoResponse.capture_info)
  return _internal_capture_info();
}
inline void CaptureInfoResponse::unsafe_arena_set_allocated_capture_info(::mavsdk::rpc::camera::CaptureInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capture_info_);
  }
  _impl_.capture_info_ = reinterpret_cast<::mavsdk::rpc::camera::CaptureInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.CaptureInfoResponse.capture_info)
}
inline ::mavsdk::rpc::camera::CaptureInfo* CaptureInfoResponse::release_capture_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CaptureInfo* released = _impl_.capture_info_;
  _impl_.capture_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CaptureInfo* CaptureInfoResponse::unsafe_arena_release_capture_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CaptureInfoResponse.capture_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CaptureInfo* temp = _impl_.capture_info_;
  _impl_.capture_info_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CaptureInfo* CaptureInfoResponse::_internal_mutable_capture_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capture_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CaptureInfo>(GetArena());
    _impl_.capture_info_ = reinterpret_cast<::mavsdk::rpc::camera::CaptureInfo*>(p);
  }
  return _impl_.capture_info_;
}
inline ::mavsdk::rpc::camera::CaptureInfo* CaptureInfoResponse::mutable_capture_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CaptureInfo* _msg = _internal_mutable_capture_info();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CaptureInfoResponse.capture_info)
  return _msg;
}
inline void CaptureInfoResponse::set_allocated_capture_info(::mavsdk::rpc::camera::CaptureInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.capture_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.capture_info_ = reinterpret_cast<::mavsdk::rpc::camera::CaptureInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CaptureInfoResponse.capture_info)
}

// -------------------------------------------------------------------

// Storage

// int32 component_id = 1;
inline void Storage::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t Storage::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.component_id)
  return _internal_component_id();
}
inline void Storage::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.component_id)
}
inline ::int32_t Storage::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void Storage::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// bool video_on = 2;
inline void Storage::clear_video_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.video_on_ = false;
}
inline bool Storage::video_on() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.video_on)
  return _internal_video_on();
}
inline void Storage::set_video_on(bool value) {
  _internal_set_video_on(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.video_on)
}
inline bool Storage::_internal_video_on() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.video_on_;
}
inline void Storage::_internal_set_video_on(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.video_on_ = value;
}

// bool photo_interval_on = 3;
inline void Storage::clear_photo_interval_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.photo_interval_on_ = false;
}
inline bool Storage::photo_interval_on() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.photo_interval_on)
  return _internal_photo_interval_on();
}
inline void Storage::set_photo_interval_on(bool value) {
  _internal_set_photo_interval_on(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.photo_interval_on)
}
inline bool Storage::_internal_photo_interval_on() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.photo_interval_on_;
}
inline void Storage::_internal_set_photo_interval_on(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.photo_interval_on_ = value;
}

// float used_storage_mib = 4;
inline void Storage::clear_used_storage_mib() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.used_storage_mib_ = 0;
}
inline float Storage::used_storage_mib() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.used_storage_mib)
  return _internal_used_storage_mib();
}
inline void Storage::set_used_storage_mib(float value) {
  _internal_set_used_storage_mib(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.used_storage_mib)
}
inline float Storage::_internal_used_storage_mib() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.used_storage_mib_;
}
inline void Storage::_internal_set_used_storage_mib(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.used_storage_mib_ = value;
}

// float available_storage_mib = 5;
inline void Storage::clear_available_storage_mib() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_storage_mib_ = 0;
}
inline float Storage::available_storage_mib() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.available_storage_mib)
  return _internal_available_storage_mib();
}
inline void Storage::set_available_storage_mib(float value) {
  _internal_set_available_storage_mib(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.available_storage_mib)
}
inline float Storage::_internal_available_storage_mib() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_storage_mib_;
}
inline void Storage::_internal_set_available_storage_mib(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_storage_mib_ = value;
}

// float total_storage_mib = 6;
inline void Storage::clear_total_storage_mib() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_storage_mib_ = 0;
}
inline float Storage::total_storage_mib() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.total_storage_mib)
  return _internal_total_storage_mib();
}
inline void Storage::set_total_storage_mib(float value) {
  _internal_set_total_storage_mib(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.total_storage_mib)
}
inline float Storage::_internal_total_storage_mib() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_storage_mib_;
}
inline void Storage::_internal_set_total_storage_mib(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_storage_mib_ = value;
}

// float recording_time_s = 7;
inline void Storage::clear_recording_time_s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recording_time_s_ = 0;
}
inline float Storage::recording_time_s() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.recording_time_s)
  return _internal_recording_time_s();
}
inline void Storage::set_recording_time_s(float value) {
  _internal_set_recording_time_s(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.recording_time_s)
}
inline float Storage::_internal_recording_time_s() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recording_time_s_;
}
inline void Storage::_internal_set_recording_time_s(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recording_time_s_ = value;
}

// string media_folder_name = 8;
inline void Storage::clear_media_folder_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.media_folder_name_.ClearToEmpty();
}
inline const std::string& Storage::media_folder_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.media_folder_name)
  return _internal_media_folder_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Storage::set_media_folder_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.media_folder_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.media_folder_name)
}
inline std::string* Storage::mutable_media_folder_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_media_folder_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Storage.media_folder_name)
  return _s;
}
inline const std::string& Storage::_internal_media_folder_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.media_folder_name_.Get();
}
inline void Storage::_internal_set_media_folder_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.media_folder_name_.Set(value, GetArena());
}
inline std::string* Storage::_internal_mutable_media_folder_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.media_folder_name_.Mutable( GetArena());
}
inline std::string* Storage::release_media_folder_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Storage.media_folder_name)
  return _impl_.media_folder_name_.Release();
}
inline void Storage::set_allocated_media_folder_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.media_folder_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.media_folder_name_.IsDefault()) {
    _impl_.media_folder_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Storage.media_folder_name)
}

// .mavsdk.rpc.camera.Storage.StorageStatus storage_status = 9;
inline void Storage::clear_storage_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_status_ = 0;
}
inline ::mavsdk::rpc::camera::Storage_StorageStatus Storage::storage_status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.storage_status)
  return _internal_storage_status();
}
inline void Storage::set_storage_status(::mavsdk::rpc::camera::Storage_StorageStatus value) {
  _internal_set_storage_status(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.storage_status)
}
inline ::mavsdk::rpc::camera::Storage_StorageStatus Storage::_internal_storage_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::Storage_StorageStatus>(_impl_.storage_status_);
}
inline void Storage::_internal_set_storage_status(::mavsdk::rpc::camera::Storage_StorageStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_status_ = value;
}

// uint32 storage_id = 10;
inline void Storage::clear_storage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_id_ = 0u;
}
inline ::uint32_t Storage::storage_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.storage_id)
  return _internal_storage_id();
}
inline void Storage::set_storage_id(::uint32_t value) {
  _internal_set_storage_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.storage_id)
}
inline ::uint32_t Storage::_internal_storage_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storage_id_;
}
inline void Storage::_internal_set_storage_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_id_ = value;
}

// .mavsdk.rpc.camera.Storage.StorageType storage_type = 11;
inline void Storage::clear_storage_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_type_ = 0;
}
inline ::mavsdk::rpc::camera::Storage_StorageType Storage::storage_type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Storage.storage_type)
  return _internal_storage_type();
}
inline void Storage::set_storage_type(::mavsdk::rpc::camera::Storage_StorageType value) {
  _internal_set_storage_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Storage.storage_type)
}
inline ::mavsdk::rpc::camera::Storage_StorageType Storage::_internal_storage_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::Storage_StorageType>(_impl_.storage_type_);
}
inline void Storage::_internal_set_storage_type(::mavsdk::rpc::camera::Storage_StorageType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_type_ = value;
}

// -------------------------------------------------------------------

// StorageUpdate

// int32 component_id = 1;
inline void StorageUpdate::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t StorageUpdate::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StorageUpdate.component_id)
  return _internal_component_id();
}
inline void StorageUpdate::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.StorageUpdate.component_id)
}
inline ::int32_t StorageUpdate::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void StorageUpdate::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.Storage storage = 2;
inline bool StorageUpdate::has_storage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.storage_ != nullptr);
  return value;
}
inline void StorageUpdate::clear_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.storage_ != nullptr) _impl_.storage_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::Storage& StorageUpdate::_internal_storage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Storage* p = _impl_.storage_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Storage&>(::mavsdk::rpc::camera::_Storage_default_instance_);
}
inline const ::mavsdk::rpc::camera::Storage& StorageUpdate::storage() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StorageUpdate.storage)
  return _internal_storage();
}
inline void StorageUpdate::unsafe_arena_set_allocated_storage(::mavsdk::rpc::camera::Storage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.storage_);
  }
  _impl_.storage_ = reinterpret_cast<::mavsdk::rpc::camera::Storage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StorageUpdate.storage)
}
inline ::mavsdk::rpc::camera::Storage* StorageUpdate::release_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Storage* released = _impl_.storage_;
  _impl_.storage_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Storage* StorageUpdate::unsafe_arena_release_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StorageUpdate.storage)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Storage* temp = _impl_.storage_;
  _impl_.storage_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Storage* StorageUpdate::_internal_mutable_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.storage_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Storage>(GetArena());
    _impl_.storage_ = reinterpret_cast<::mavsdk::rpc::camera::Storage*>(p);
  }
  return _impl_.storage_;
}
inline ::mavsdk::rpc::camera::Storage* StorageUpdate::mutable_storage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::Storage* _msg = _internal_mutable_storage();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StorageUpdate.storage)
  return _msg;
}
inline void StorageUpdate::set_allocated_storage(::mavsdk::rpc::camera::Storage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.storage_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.storage_ = reinterpret_cast<::mavsdk::rpc::camera::Storage*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StorageUpdate.storage)
}

// -------------------------------------------------------------------

// SubscribeStorageRequest

// -------------------------------------------------------------------

// StorageResponse

// .mavsdk.rpc.camera.StorageUpdate update = 1;
inline bool StorageResponse::has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline void StorageResponse::clear_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::StorageUpdate& StorageResponse::_internal_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::StorageUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::StorageUpdate&>(::mavsdk::rpc::camera::_StorageUpdate_default_instance_);
}
inline const ::mavsdk::rpc::camera::StorageUpdate& StorageResponse::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.StorageResponse.update)
  return _internal_update();
}
inline void StorageResponse::unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::StorageUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::StorageUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.StorageResponse.update)
}
inline ::mavsdk::rpc::camera::StorageUpdate* StorageResponse::release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::StorageUpdate* released = _impl_.update_;
  _impl_.update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::StorageUpdate* StorageResponse::unsafe_arena_release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.StorageResponse.update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::StorageUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::StorageUpdate* StorageResponse::_internal_mutable_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::StorageUpdate>(GetArena());
    _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::StorageUpdate*>(p);
  }
  return _impl_.update_;
}
inline ::mavsdk::rpc::camera::StorageUpdate* StorageResponse::mutable_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::StorageUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.StorageResponse.update)
  return _msg;
}
inline void StorageResponse::set_allocated_update(::mavsdk::rpc::camera::StorageUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::StorageUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.StorageResponse.update)
}

// -------------------------------------------------------------------

// CurrentSettingsUpdate

// int32 component_id = 1;
inline void CurrentSettingsUpdate::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t CurrentSettingsUpdate::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CurrentSettingsUpdate.component_id)
  return _internal_component_id();
}
inline void CurrentSettingsUpdate::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CurrentSettingsUpdate.component_id)
}
inline ::int32_t CurrentSettingsUpdate::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void CurrentSettingsUpdate::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// repeated .mavsdk.rpc.camera.Setting current_settings = 2;
inline int CurrentSettingsUpdate::_internal_current_settings_size() const {
  return _internal_current_settings().size();
}
inline int CurrentSettingsUpdate::current_settings_size() const {
  return _internal_current_settings_size();
}
inline void CurrentSettingsUpdate::clear_current_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_settings_.Clear();
}
inline ::mavsdk::rpc::camera::Setting* CurrentSettingsUpdate::mutable_current_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CurrentSettingsUpdate.current_settings)
  return _internal_mutable_current_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>* CurrentSettingsUpdate::mutable_current_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.CurrentSettingsUpdate.current_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_current_settings();
}
inline const ::mavsdk::rpc::camera::Setting& CurrentSettingsUpdate::current_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CurrentSettingsUpdate.current_settings)
  return _internal_current_settings().Get(index);
}
inline ::mavsdk::rpc::camera::Setting* CurrentSettingsUpdate::add_current_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::Setting* _add = _internal_mutable_current_settings()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.CurrentSettingsUpdate.current_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>& CurrentSettingsUpdate::current_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.CurrentSettingsUpdate.current_settings)
  return _internal_current_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>&
CurrentSettingsUpdate::_internal_current_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>*
CurrentSettingsUpdate::_internal_mutable_current_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.current_settings_;
}

// -------------------------------------------------------------------

// SubscribeCurrentSettingsRequest

// -------------------------------------------------------------------

// CurrentSettingsResponse

// .mavsdk.rpc.camera.CurrentSettingsUpdate update = 1;
inline bool CurrentSettingsResponse::has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline void CurrentSettingsResponse::clear_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CurrentSettingsUpdate& CurrentSettingsResponse::_internal_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CurrentSettingsUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CurrentSettingsUpdate&>(::mavsdk::rpc::camera::_CurrentSettingsUpdate_default_instance_);
}
inline const ::mavsdk::rpc::camera::CurrentSettingsUpdate& CurrentSettingsResponse::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CurrentSettingsResponse.update)
  return _internal_update();
}
inline void CurrentSettingsResponse::unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::CurrentSettingsUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::CurrentSettingsUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.CurrentSettingsResponse.update)
}
inline ::mavsdk::rpc::camera::CurrentSettingsUpdate* CurrentSettingsResponse::release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CurrentSettingsUpdate* released = _impl_.update_;
  _impl_.update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CurrentSettingsUpdate* CurrentSettingsResponse::unsafe_arena_release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CurrentSettingsResponse.update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CurrentSettingsUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CurrentSettingsUpdate* CurrentSettingsResponse::_internal_mutable_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CurrentSettingsUpdate>(GetArena());
    _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::CurrentSettingsUpdate*>(p);
  }
  return _impl_.update_;
}
inline ::mavsdk::rpc::camera::CurrentSettingsUpdate* CurrentSettingsResponse::mutable_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CurrentSettingsUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CurrentSettingsResponse.update)
  return _msg;
}
inline void CurrentSettingsResponse::set_allocated_update(::mavsdk::rpc::camera::CurrentSettingsUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::CurrentSettingsUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CurrentSettingsResponse.update)
}

// -------------------------------------------------------------------

// PossibleSettingOptionsUpdate

// int32 component_id = 1;
inline void PossibleSettingOptionsUpdate::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t PossibleSettingOptionsUpdate::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.component_id)
  return _internal_component_id();
}
inline void PossibleSettingOptionsUpdate::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.component_id)
}
inline ::int32_t PossibleSettingOptionsUpdate::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void PossibleSettingOptionsUpdate::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
inline int PossibleSettingOptionsUpdate::_internal_setting_options_size() const {
  return _internal_setting_options().size();
}
inline int PossibleSettingOptionsUpdate::setting_options_size() const {
  return _internal_setting_options_size();
}
inline void PossibleSettingOptionsUpdate::clear_setting_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_options_.Clear();
}
inline ::mavsdk::rpc::camera::SettingOptions* PossibleSettingOptionsUpdate::mutable_setting_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.setting_options)
  return _internal_mutable_setting_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>* PossibleSettingOptionsUpdate::mutable_setting_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.setting_options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_setting_options();
}
inline const ::mavsdk::rpc::camera::SettingOptions& PossibleSettingOptionsUpdate::setting_options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.setting_options)
  return _internal_setting_options().Get(index);
}
inline ::mavsdk::rpc::camera::SettingOptions* PossibleSettingOptionsUpdate::add_setting_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::SettingOptions* _add = _internal_mutable_setting_options()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.setting_options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>& PossibleSettingOptionsUpdate::setting_options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.PossibleSettingOptionsUpdate.setting_options)
  return _internal_setting_options();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>&
PossibleSettingOptionsUpdate::_internal_setting_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_options_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>*
PossibleSettingOptionsUpdate::_internal_mutable_setting_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.setting_options_;
}

// -------------------------------------------------------------------

// SubscribePossibleSettingOptionsRequest

// -------------------------------------------------------------------

// PossibleSettingOptionsResponse

// .mavsdk.rpc.camera.PossibleSettingOptionsUpdate update = 1;
inline bool PossibleSettingOptionsResponse::has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline void PossibleSettingOptionsResponse::clear_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate& PossibleSettingOptionsResponse::_internal_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate&>(::mavsdk::rpc::camera::_PossibleSettingOptionsUpdate_default_instance_);
}
inline const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate& PossibleSettingOptionsResponse::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.PossibleSettingOptionsResponse.update)
  return _internal_update();
}
inline void PossibleSettingOptionsResponse::unsafe_arena_set_allocated_update(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::PossibleSettingOptionsUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.PossibleSettingOptionsResponse.update)
}
inline ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* PossibleSettingOptionsResponse::release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* released = _impl_.update_;
  _impl_.update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* PossibleSettingOptionsResponse::unsafe_arena_release_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.PossibleSettingOptionsResponse.update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* PossibleSettingOptionsResponse::_internal_mutable_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::PossibleSettingOptionsUpdate>(GetArena());
    _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::PossibleSettingOptionsUpdate*>(p);
  }
  return _impl_.update_;
}
inline ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* PossibleSettingOptionsResponse::mutable_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.PossibleSettingOptionsResponse.update)
  return _msg;
}
inline void PossibleSettingOptionsResponse::set_allocated_update(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_ = reinterpret_cast<::mavsdk::rpc::camera::PossibleSettingOptionsUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.PossibleSettingOptionsResponse.update)
}

// -------------------------------------------------------------------

// SetSettingRequest

// int32 component_id = 1;
inline void SetSettingRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t SetSettingRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SetSettingRequest.component_id)
  return _internal_component_id();
}
inline void SetSettingRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.SetSettingRequest.component_id)
}
inline ::int32_t SetSettingRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void SetSettingRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.Setting setting = 2;
inline bool SetSettingRequest::has_setting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.setting_ != nullptr);
  return value;
}
inline void SetSettingRequest::clear_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_ != nullptr) _impl_.setting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::Setting& SetSettingRequest::_internal_setting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Setting* p = _impl_.setting_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Setting&>(::mavsdk::rpc::camera::_Setting_default_instance_);
}
inline const ::mavsdk::rpc::camera::Setting& SetSettingRequest::setting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SetSettingRequest.setting)
  return _internal_setting();
}
inline void SetSettingRequest::unsafe_arena_set_allocated_setting(::mavsdk::rpc::camera::Setting* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_);
  }
  _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.SetSettingRequest.setting)
}
inline ::mavsdk::rpc::camera::Setting* SetSettingRequest::release_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Setting* released = _impl_.setting_;
  _impl_.setting_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Setting* SetSettingRequest::unsafe_arena_release_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.SetSettingRequest.setting)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Setting* SetSettingRequest::_internal_mutable_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Setting>(GetArena());
    _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(p);
  }
  return _impl_.setting_;
}
inline ::mavsdk::rpc::camera::Setting* SetSettingRequest::mutable_setting() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::Setting* _msg = _internal_mutable_setting();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.SetSettingRequest.setting)
  return _msg;
}
inline void SetSettingRequest::set_allocated_setting(::mavsdk::rpc::camera::Setting* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.setting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.SetSettingRequest.setting)
}

// -------------------------------------------------------------------

// SetSettingResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool SetSettingResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void SetSettingResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& SetSettingResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& SetSettingResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.SetSettingResponse.camera_result)
  return _internal_camera_result();
}
inline void SetSettingResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.SetSettingResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* SetSettingResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* SetSettingResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.SetSettingResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* SetSettingResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* SetSettingResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.SetSettingResponse.camera_result)
  return _msg;
}
inline void SetSettingResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.SetSettingResponse.camera_result)
}

// -------------------------------------------------------------------

// GetModeRequest

// int32 component_id = 1;
inline void GetModeRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t GetModeRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetModeRequest.component_id)
  return _internal_component_id();
}
inline void GetModeRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetModeRequest.component_id)
}
inline ::int32_t GetModeRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void GetModeRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// GetModeResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool GetModeResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void GetModeResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& GetModeResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& GetModeResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetModeResponse.camera_result)
  return _internal_camera_result();
}
inline void GetModeResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetModeResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* GetModeResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* GetModeResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetModeResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* GetModeResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* GetModeResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetModeResponse.camera_result)
  return _msg;
}
inline void GetModeResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetModeResponse.camera_result)
}

// .mavsdk.rpc.camera.Mode mode = 2;
inline void GetModeResponse::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::mavsdk::rpc::camera::Mode GetModeResponse::mode() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetModeResponse.mode)
  return _internal_mode();
}
inline void GetModeResponse::set_mode(::mavsdk::rpc::camera::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetModeResponse.mode)
}
inline ::mavsdk::rpc::camera::Mode GetModeResponse::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::Mode>(_impl_.mode_);
}
inline void GetModeResponse::_internal_set_mode(::mavsdk::rpc::camera::Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// GetVideoStreamInfoRequest

// int32 component_id = 1;
inline void GetVideoStreamInfoRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t GetVideoStreamInfoRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetVideoStreamInfoRequest.component_id)
  return _internal_component_id();
}
inline void GetVideoStreamInfoRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetVideoStreamInfoRequest.component_id)
}
inline ::int32_t GetVideoStreamInfoRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void GetVideoStreamInfoRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// GetVideoStreamInfoResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool GetVideoStreamInfoResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void GetVideoStreamInfoResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& GetVideoStreamInfoResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& GetVideoStreamInfoResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetVideoStreamInfoResponse.camera_result)
  return _internal_camera_result();
}
inline void GetVideoStreamInfoResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetVideoStreamInfoResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* GetVideoStreamInfoResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* GetVideoStreamInfoResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetVideoStreamInfoResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* GetVideoStreamInfoResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* GetVideoStreamInfoResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetVideoStreamInfoResponse.camera_result)
  return _msg;
}
inline void GetVideoStreamInfoResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetVideoStreamInfoResponse.camera_result)
}

// .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
inline bool GetVideoStreamInfoResponse::has_video_stream_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.video_stream_info_ != nullptr);
  return value;
}
inline void GetVideoStreamInfoResponse::clear_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.video_stream_info_ != nullptr) _impl_.video_stream_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::mavsdk::rpc::camera::VideoStreamInfo& GetVideoStreamInfoResponse::_internal_video_stream_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::VideoStreamInfo* p = _impl_.video_stream_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::VideoStreamInfo&>(::mavsdk::rpc::camera::_VideoStreamInfo_default_instance_);
}
inline const ::mavsdk::rpc::camera::VideoStreamInfo& GetVideoStreamInfoResponse::video_stream_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetVideoStreamInfoResponse.video_stream_info)
  return _internal_video_stream_info();
}
inline void GetVideoStreamInfoResponse::unsafe_arena_set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.video_stream_info_);
  }
  _impl_.video_stream_info_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetVideoStreamInfoResponse.video_stream_info)
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* GetVideoStreamInfoResponse::release_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::VideoStreamInfo* released = _impl_.video_stream_info_;
  _impl_.video_stream_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* GetVideoStreamInfoResponse::unsafe_arena_release_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetVideoStreamInfoResponse.video_stream_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::VideoStreamInfo* temp = _impl_.video_stream_info_;
  _impl_.video_stream_info_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* GetVideoStreamInfoResponse::_internal_mutable_video_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.video_stream_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::VideoStreamInfo>(GetArena());
    _impl_.video_stream_info_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamInfo*>(p);
  }
  return _impl_.video_stream_info_;
}
inline ::mavsdk::rpc::camera::VideoStreamInfo* GetVideoStreamInfoResponse::mutable_video_stream_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::mavsdk::rpc::camera::VideoStreamInfo* _msg = _internal_mutable_video_stream_info();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetVideoStreamInfoResponse.video_stream_info)
  return _msg;
}
inline void GetVideoStreamInfoResponse::set_allocated_video_stream_info(::mavsdk::rpc::camera::VideoStreamInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.video_stream_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.video_stream_info_ = reinterpret_cast<::mavsdk::rpc::camera::VideoStreamInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetVideoStreamInfoResponse.video_stream_info)
}

// -------------------------------------------------------------------

// GetStorageRequest

// int32 component_id = 1;
inline void GetStorageRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t GetStorageRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetStorageRequest.component_id)
  return _internal_component_id();
}
inline void GetStorageRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetStorageRequest.component_id)
}
inline ::int32_t GetStorageRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void GetStorageRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// GetStorageResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool GetStorageResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void GetStorageResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& GetStorageResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& GetStorageResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetStorageResponse.camera_result)
  return _internal_camera_result();
}
inline void GetStorageResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetStorageResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* GetStorageResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* GetStorageResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetStorageResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* GetStorageResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* GetStorageResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetStorageResponse.camera_result)
  return _msg;
}
inline void GetStorageResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetStorageResponse.camera_result)
}

// .mavsdk.rpc.camera.Storage storage = 2;
inline bool GetStorageResponse::has_storage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.storage_ != nullptr);
  return value;
}
inline void GetStorageResponse::clear_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.storage_ != nullptr) _impl_.storage_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::mavsdk::rpc::camera::Storage& GetStorageResponse::_internal_storage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Storage* p = _impl_.storage_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Storage&>(::mavsdk::rpc::camera::_Storage_default_instance_);
}
inline const ::mavsdk::rpc::camera::Storage& GetStorageResponse::storage() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetStorageResponse.storage)
  return _internal_storage();
}
inline void GetStorageResponse::unsafe_arena_set_allocated_storage(::mavsdk::rpc::camera::Storage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.storage_);
  }
  _impl_.storage_ = reinterpret_cast<::mavsdk::rpc::camera::Storage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetStorageResponse.storage)
}
inline ::mavsdk::rpc::camera::Storage* GetStorageResponse::release_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::Storage* released = _impl_.storage_;
  _impl_.storage_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Storage* GetStorageResponse::unsafe_arena_release_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetStorageResponse.storage)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::Storage* temp = _impl_.storage_;
  _impl_.storage_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Storage* GetStorageResponse::_internal_mutable_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.storage_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Storage>(GetArena());
    _impl_.storage_ = reinterpret_cast<::mavsdk::rpc::camera::Storage*>(p);
  }
  return _impl_.storage_;
}
inline ::mavsdk::rpc::camera::Storage* GetStorageResponse::mutable_storage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::mavsdk::rpc::camera::Storage* _msg = _internal_mutable_storage();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetStorageResponse.storage)
  return _msg;
}
inline void GetStorageResponse::set_allocated_storage(::mavsdk::rpc::camera::Storage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.storage_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.storage_ = reinterpret_cast<::mavsdk::rpc::camera::Storage*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetStorageResponse.storage)
}

// -------------------------------------------------------------------

// GetCurrentSettingsRequest

// int32 component_id = 1;
inline void GetCurrentSettingsRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t GetCurrentSettingsRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetCurrentSettingsRequest.component_id)
  return _internal_component_id();
}
inline void GetCurrentSettingsRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetCurrentSettingsRequest.component_id)
}
inline ::int32_t GetCurrentSettingsRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void GetCurrentSettingsRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// GetCurrentSettingsResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool GetCurrentSettingsResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void GetCurrentSettingsResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& GetCurrentSettingsResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& GetCurrentSettingsResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetCurrentSettingsResponse.camera_result)
  return _internal_camera_result();
}
inline void GetCurrentSettingsResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetCurrentSettingsResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* GetCurrentSettingsResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* GetCurrentSettingsResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetCurrentSettingsResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* GetCurrentSettingsResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* GetCurrentSettingsResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetCurrentSettingsResponse.camera_result)
  return _msg;
}
inline void GetCurrentSettingsResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetCurrentSettingsResponse.camera_result)
}

// repeated .mavsdk.rpc.camera.Setting current_settings = 2;
inline int GetCurrentSettingsResponse::_internal_current_settings_size() const {
  return _internal_current_settings().size();
}
inline int GetCurrentSettingsResponse::current_settings_size() const {
  return _internal_current_settings_size();
}
inline void GetCurrentSettingsResponse::clear_current_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_settings_.Clear();
}
inline ::mavsdk::rpc::camera::Setting* GetCurrentSettingsResponse::mutable_current_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetCurrentSettingsResponse.current_settings)
  return _internal_mutable_current_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>* GetCurrentSettingsResponse::mutable_current_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.GetCurrentSettingsResponse.current_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_current_settings();
}
inline const ::mavsdk::rpc::camera::Setting& GetCurrentSettingsResponse::current_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetCurrentSettingsResponse.current_settings)
  return _internal_current_settings().Get(index);
}
inline ::mavsdk::rpc::camera::Setting* GetCurrentSettingsResponse::add_current_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::Setting* _add = _internal_mutable_current_settings()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.GetCurrentSettingsResponse.current_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>& GetCurrentSettingsResponse::current_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.GetCurrentSettingsResponse.current_settings)
  return _internal_current_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>&
GetCurrentSettingsResponse::_internal_current_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Setting>*
GetCurrentSettingsResponse::_internal_mutable_current_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.current_settings_;
}

// -------------------------------------------------------------------

// GetPossibleSettingOptionsRequest

// int32 component_id = 1;
inline void GetPossibleSettingOptionsRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t GetPossibleSettingOptionsRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest.component_id)
  return _internal_component_id();
}
inline void GetPossibleSettingOptionsRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest.component_id)
}
inline ::int32_t GetPossibleSettingOptionsRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void GetPossibleSettingOptionsRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// GetPossibleSettingOptionsResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool GetPossibleSettingOptionsResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void GetPossibleSettingOptionsResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& GetPossibleSettingOptionsResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& GetPossibleSettingOptionsResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.camera_result)
  return _internal_camera_result();
}
inline void GetPossibleSettingOptionsResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* GetPossibleSettingOptionsResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* GetPossibleSettingOptionsResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* GetPossibleSettingOptionsResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* GetPossibleSettingOptionsResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.camera_result)
  return _msg;
}
inline void GetPossibleSettingOptionsResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.camera_result)
}

// repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
inline int GetPossibleSettingOptionsResponse::_internal_setting_options_size() const {
  return _internal_setting_options().size();
}
inline int GetPossibleSettingOptionsResponse::setting_options_size() const {
  return _internal_setting_options_size();
}
inline void GetPossibleSettingOptionsResponse::clear_setting_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.setting_options_.Clear();
}
inline ::mavsdk::rpc::camera::SettingOptions* GetPossibleSettingOptionsResponse::mutable_setting_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.setting_options)
  return _internal_mutable_setting_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>* GetPossibleSettingOptionsResponse::mutable_setting_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.setting_options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_setting_options();
}
inline const ::mavsdk::rpc::camera::SettingOptions& GetPossibleSettingOptionsResponse::setting_options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.setting_options)
  return _internal_setting_options().Get(index);
}
inline ::mavsdk::rpc::camera::SettingOptions* GetPossibleSettingOptionsResponse::add_setting_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::SettingOptions* _add = _internal_mutable_setting_options()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.setting_options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>& GetPossibleSettingOptionsResponse::setting_options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.setting_options)
  return _internal_setting_options();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>&
GetPossibleSettingOptionsResponse::_internal_setting_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.setting_options_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::SettingOptions>*
GetPossibleSettingOptionsResponse::_internal_mutable_setting_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.setting_options_;
}

// -------------------------------------------------------------------

// GetSettingRequest

// int32 component_id = 1;
inline void GetSettingRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t GetSettingRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetSettingRequest.component_id)
  return _internal_component_id();
}
inline void GetSettingRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.GetSettingRequest.component_id)
}
inline ::int32_t GetSettingRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void GetSettingRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.Setting setting = 2;
inline bool GetSettingRequest::has_setting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.setting_ != nullptr);
  return value;
}
inline void GetSettingRequest::clear_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_ != nullptr) _impl_.setting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::Setting& GetSettingRequest::_internal_setting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Setting* p = _impl_.setting_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Setting&>(::mavsdk::rpc::camera::_Setting_default_instance_);
}
inline const ::mavsdk::rpc::camera::Setting& GetSettingRequest::setting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetSettingRequest.setting)
  return _internal_setting();
}
inline void GetSettingRequest::unsafe_arena_set_allocated_setting(::mavsdk::rpc::camera::Setting* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_);
  }
  _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetSettingRequest.setting)
}
inline ::mavsdk::rpc::camera::Setting* GetSettingRequest::release_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Setting* released = _impl_.setting_;
  _impl_.setting_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Setting* GetSettingRequest::unsafe_arena_release_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetSettingRequest.setting)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Setting* GetSettingRequest::_internal_mutable_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Setting>(GetArena());
    _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(p);
  }
  return _impl_.setting_;
}
inline ::mavsdk::rpc::camera::Setting* GetSettingRequest::mutable_setting() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::Setting* _msg = _internal_mutable_setting();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetSettingRequest.setting)
  return _msg;
}
inline void GetSettingRequest::set_allocated_setting(::mavsdk::rpc::camera::Setting* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.setting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetSettingRequest.setting)
}

// -------------------------------------------------------------------

// GetSettingResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool GetSettingResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void GetSettingResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& GetSettingResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& GetSettingResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetSettingResponse.camera_result)
  return _internal_camera_result();
}
inline void GetSettingResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetSettingResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* GetSettingResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* GetSettingResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetSettingResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* GetSettingResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* GetSettingResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetSettingResponse.camera_result)
  return _msg;
}
inline void GetSettingResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetSettingResponse.camera_result)
}

// .mavsdk.rpc.camera.Setting setting = 2;
inline bool GetSettingResponse::has_setting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.setting_ != nullptr);
  return value;
}
inline void GetSettingResponse::clear_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_ != nullptr) _impl_.setting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::mavsdk::rpc::camera::Setting& GetSettingResponse::_internal_setting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Setting* p = _impl_.setting_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Setting&>(::mavsdk::rpc::camera::_Setting_default_instance_);
}
inline const ::mavsdk::rpc::camera::Setting& GetSettingResponse::setting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.GetSettingResponse.setting)
  return _internal_setting();
}
inline void GetSettingResponse::unsafe_arena_set_allocated_setting(::mavsdk::rpc::camera::Setting* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.setting_);
  }
  _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.GetSettingResponse.setting)
}
inline ::mavsdk::rpc::camera::Setting* GetSettingResponse::release_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::Setting* released = _impl_.setting_;
  _impl_.setting_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Setting* GetSettingResponse::unsafe_arena_release_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.GetSettingResponse.setting)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::Setting* temp = _impl_.setting_;
  _impl_.setting_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Setting* GetSettingResponse::_internal_mutable_setting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.setting_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Setting>(GetArena());
    _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(p);
  }
  return _impl_.setting_;
}
inline ::mavsdk::rpc::camera::Setting* GetSettingResponse::mutable_setting() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::mavsdk::rpc::camera::Setting* _msg = _internal_mutable_setting();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.GetSettingResponse.setting)
  return _msg;
}
inline void GetSettingResponse::set_allocated_setting(::mavsdk::rpc::camera::Setting* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.setting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.setting_ = reinterpret_cast<::mavsdk::rpc::camera::Setting*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.GetSettingResponse.setting)
}

// -------------------------------------------------------------------

// FormatStorageRequest

// int32 component_id = 1;
inline void FormatStorageRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t FormatStorageRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FormatStorageRequest.component_id)
  return _internal_component_id();
}
inline void FormatStorageRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FormatStorageRequest.component_id)
}
inline ::int32_t FormatStorageRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void FormatStorageRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// int32 storage_id = 2;
inline void FormatStorageRequest::clear_storage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_id_ = 0;
}
inline ::int32_t FormatStorageRequest::storage_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FormatStorageRequest.storage_id)
  return _internal_storage_id();
}
inline void FormatStorageRequest::set_storage_id(::int32_t value) {
  _internal_set_storage_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FormatStorageRequest.storage_id)
}
inline ::int32_t FormatStorageRequest::_internal_storage_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storage_id_;
}
inline void FormatStorageRequest::_internal_set_storage_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_id_ = value;
}

// -------------------------------------------------------------------

// FormatStorageResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool FormatStorageResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void FormatStorageResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& FormatStorageResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& FormatStorageResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FormatStorageResponse.camera_result)
  return _internal_camera_result();
}
inline void FormatStorageResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.FormatStorageResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* FormatStorageResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* FormatStorageResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.FormatStorageResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* FormatStorageResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* FormatStorageResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.FormatStorageResponse.camera_result)
  return _msg;
}
inline void FormatStorageResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.FormatStorageResponse.camera_result)
}

// -------------------------------------------------------------------

// ResetSettingsRequest

// int32 component_id = 1;
inline void ResetSettingsRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ResetSettingsRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ResetSettingsRequest.component_id)
  return _internal_component_id();
}
inline void ResetSettingsRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ResetSettingsRequest.component_id)
}
inline ::int32_t ResetSettingsRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ResetSettingsRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// ResetSettingsResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool ResetSettingsResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void ResetSettingsResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& ResetSettingsResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& ResetSettingsResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ResetSettingsResponse.camera_result)
  return _internal_camera_result();
}
inline void ResetSettingsResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ResetSettingsResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* ResetSettingsResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* ResetSettingsResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ResetSettingsResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* ResetSettingsResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* ResetSettingsResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ResetSettingsResponse.camera_result)
  return _msg;
}
inline void ResetSettingsResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ResetSettingsResponse.camera_result)
}

// -------------------------------------------------------------------

// ZoomInStartRequest

// int32 component_id = 1;
inline void ZoomInStartRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ZoomInStartRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomInStartRequest.component_id)
  return _internal_component_id();
}
inline void ZoomInStartRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ZoomInStartRequest.component_id)
}
inline ::int32_t ZoomInStartRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ZoomInStartRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// ZoomInStartResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool ZoomInStartResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void ZoomInStartResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomInStartResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomInStartResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomInStartResponse.camera_result)
  return _internal_camera_result();
}
inline void ZoomInStartResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ZoomInStartResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomInStartResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomInStartResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ZoomInStartResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomInStartResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomInStartResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ZoomInStartResponse.camera_result)
  return _msg;
}
inline void ZoomInStartResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ZoomInStartResponse.camera_result)
}

// -------------------------------------------------------------------

// ZoomOutStartRequest

// int32 component_id = 1;
inline void ZoomOutStartRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ZoomOutStartRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomOutStartRequest.component_id)
  return _internal_component_id();
}
inline void ZoomOutStartRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ZoomOutStartRequest.component_id)
}
inline ::int32_t ZoomOutStartRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ZoomOutStartRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// ZoomOutStartResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool ZoomOutStartResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void ZoomOutStartResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomOutStartResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomOutStartResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomOutStartResponse.camera_result)
  return _internal_camera_result();
}
inline void ZoomOutStartResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ZoomOutStartResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomOutStartResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomOutStartResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ZoomOutStartResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomOutStartResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomOutStartResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ZoomOutStartResponse.camera_result)
  return _msg;
}
inline void ZoomOutStartResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ZoomOutStartResponse.camera_result)
}

// -------------------------------------------------------------------

// ZoomStopRequest

// int32 component_id = 1;
inline void ZoomStopRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ZoomStopRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomStopRequest.component_id)
  return _internal_component_id();
}
inline void ZoomStopRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ZoomStopRequest.component_id)
}
inline ::int32_t ZoomStopRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ZoomStopRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// ZoomStopResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool ZoomStopResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void ZoomStopResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomStopResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomStopResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomStopResponse.camera_result)
  return _internal_camera_result();
}
inline void ZoomStopResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ZoomStopResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomStopResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomStopResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ZoomStopResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomStopResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomStopResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ZoomStopResponse.camera_result)
  return _msg;
}
inline void ZoomStopResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ZoomStopResponse.camera_result)
}

// -------------------------------------------------------------------

// ZoomRangeRequest

// int32 component_id = 1;
inline void ZoomRangeRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t ZoomRangeRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomRangeRequest.component_id)
  return _internal_component_id();
}
inline void ZoomRangeRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ZoomRangeRequest.component_id)
}
inline ::int32_t ZoomRangeRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void ZoomRangeRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// float range = 2;
inline void ZoomRangeRequest::clear_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_ = 0;
}
inline float ZoomRangeRequest::range() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomRangeRequest.range)
  return _internal_range();
}
inline void ZoomRangeRequest::set_range(float value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.ZoomRangeRequest.range)
}
inline float ZoomRangeRequest::_internal_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_;
}
inline void ZoomRangeRequest::_internal_set_range(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_ = value;
}

// -------------------------------------------------------------------

// ZoomRangeResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool ZoomRangeResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void ZoomRangeResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomRangeResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& ZoomRangeResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.ZoomRangeResponse.camera_result)
  return _internal_camera_result();
}
inline void ZoomRangeResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.ZoomRangeResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomRangeResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomRangeResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.ZoomRangeResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomRangeResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* ZoomRangeResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.ZoomRangeResponse.camera_result)
  return _msg;
}
inline void ZoomRangeResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.ZoomRangeResponse.camera_result)
}

// -------------------------------------------------------------------

// TrackPointRequest

// int32 component_id = 1;
inline void TrackPointRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t TrackPointRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackPointRequest.component_id)
  return _internal_component_id();
}
inline void TrackPointRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackPointRequest.component_id)
}
inline ::int32_t TrackPointRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void TrackPointRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// float point_x = 2;
inline void TrackPointRequest::clear_point_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_x_ = 0;
}
inline float TrackPointRequest::point_x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackPointRequest.point_x)
  return _internal_point_x();
}
inline void TrackPointRequest::set_point_x(float value) {
  _internal_set_point_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackPointRequest.point_x)
}
inline float TrackPointRequest::_internal_point_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.point_x_;
}
inline void TrackPointRequest::_internal_set_point_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_x_ = value;
}

// float point_y = 3;
inline void TrackPointRequest::clear_point_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_y_ = 0;
}
inline float TrackPointRequest::point_y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackPointRequest.point_y)
  return _internal_point_y();
}
inline void TrackPointRequest::set_point_y(float value) {
  _internal_set_point_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackPointRequest.point_y)
}
inline float TrackPointRequest::_internal_point_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.point_y_;
}
inline void TrackPointRequest::_internal_set_point_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_y_ = value;
}

// float radius = 4;
inline void TrackPointRequest::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
}
inline float TrackPointRequest::radius() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackPointRequest.radius)
  return _internal_radius();
}
inline void TrackPointRequest::set_radius(float value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackPointRequest.radius)
}
inline float TrackPointRequest::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void TrackPointRequest::_internal_set_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// -------------------------------------------------------------------

// TrackPointResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool TrackPointResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void TrackPointResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& TrackPointResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& TrackPointResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackPointResponse.camera_result)
  return _internal_camera_result();
}
inline void TrackPointResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.TrackPointResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* TrackPointResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackPointResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.TrackPointResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackPointResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackPointResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.TrackPointResponse.camera_result)
  return _msg;
}
inline void TrackPointResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.TrackPointResponse.camera_result)
}

// -------------------------------------------------------------------

// TrackRectangleRequest

// int32 component_id = 1;
inline void TrackRectangleRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t TrackRectangleRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackRectangleRequest.component_id)
  return _internal_component_id();
}
inline void TrackRectangleRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackRectangleRequest.component_id)
}
inline ::int32_t TrackRectangleRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void TrackRectangleRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// float top_left_x = 2;
inline void TrackRectangleRequest::clear_top_left_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_left_x_ = 0;
}
inline float TrackRectangleRequest::top_left_x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackRectangleRequest.top_left_x)
  return _internal_top_left_x();
}
inline void TrackRectangleRequest::set_top_left_x(float value) {
  _internal_set_top_left_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackRectangleRequest.top_left_x)
}
inline float TrackRectangleRequest::_internal_top_left_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_left_x_;
}
inline void TrackRectangleRequest::_internal_set_top_left_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_left_x_ = value;
}

// float top_left_y = 3;
inline void TrackRectangleRequest::clear_top_left_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_left_y_ = 0;
}
inline float TrackRectangleRequest::top_left_y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackRectangleRequest.top_left_y)
  return _internal_top_left_y();
}
inline void TrackRectangleRequest::set_top_left_y(float value) {
  _internal_set_top_left_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackRectangleRequest.top_left_y)
}
inline float TrackRectangleRequest::_internal_top_left_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_left_y_;
}
inline void TrackRectangleRequest::_internal_set_top_left_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_left_y_ = value;
}

// float bottom_right_x = 4;
inline void TrackRectangleRequest::clear_bottom_right_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottom_right_x_ = 0;
}
inline float TrackRectangleRequest::bottom_right_x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackRectangleRequest.bottom_right_x)
  return _internal_bottom_right_x();
}
inline void TrackRectangleRequest::set_bottom_right_x(float value) {
  _internal_set_bottom_right_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackRectangleRequest.bottom_right_x)
}
inline float TrackRectangleRequest::_internal_bottom_right_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bottom_right_x_;
}
inline void TrackRectangleRequest::_internal_set_bottom_right_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottom_right_x_ = value;
}

// float bottom_right_y = 5;
inline void TrackRectangleRequest::clear_bottom_right_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottom_right_y_ = 0;
}
inline float TrackRectangleRequest::bottom_right_y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackRectangleRequest.bottom_right_y)
  return _internal_bottom_right_y();
}
inline void TrackRectangleRequest::set_bottom_right_y(float value) {
  _internal_set_bottom_right_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackRectangleRequest.bottom_right_y)
}
inline float TrackRectangleRequest::_internal_bottom_right_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bottom_right_y_;
}
inline void TrackRectangleRequest::_internal_set_bottom_right_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottom_right_y_ = value;
}

// -------------------------------------------------------------------

// TrackRectangleResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool TrackRectangleResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void TrackRectangleResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& TrackRectangleResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& TrackRectangleResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackRectangleResponse.camera_result)
  return _internal_camera_result();
}
inline void TrackRectangleResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.TrackRectangleResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* TrackRectangleResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackRectangleResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.TrackRectangleResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackRectangleResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackRectangleResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.TrackRectangleResponse.camera_result)
  return _msg;
}
inline void TrackRectangleResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.TrackRectangleResponse.camera_result)
}

// -------------------------------------------------------------------

// TrackStopRequest

// int32 component_id = 1;
inline void TrackStopRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t TrackStopRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackStopRequest.component_id)
  return _internal_component_id();
}
inline void TrackStopRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.TrackStopRequest.component_id)
}
inline ::int32_t TrackStopRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void TrackStopRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// TrackStopResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool TrackStopResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void TrackStopResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& TrackStopResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& TrackStopResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.TrackStopResponse.camera_result)
  return _internal_camera_result();
}
inline void TrackStopResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.TrackStopResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* TrackStopResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackStopResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.TrackStopResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackStopResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* TrackStopResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.TrackStopResponse.camera_result)
  return _msg;
}
inline void TrackStopResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.TrackStopResponse.camera_result)
}

// -------------------------------------------------------------------

// FocusInStartRequest

// int32 component_id = 1;
inline void FocusInStartRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t FocusInStartRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusInStartRequest.component_id)
  return _internal_component_id();
}
inline void FocusInStartRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FocusInStartRequest.component_id)
}
inline ::int32_t FocusInStartRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void FocusInStartRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// FocusInStartResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool FocusInStartResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void FocusInStartResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusInStartResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusInStartResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusInStartResponse.camera_result)
  return _internal_camera_result();
}
inline void FocusInStartResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.FocusInStartResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* FocusInStartResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusInStartResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.FocusInStartResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusInStartResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusInStartResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.FocusInStartResponse.camera_result)
  return _msg;
}
inline void FocusInStartResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.FocusInStartResponse.camera_result)
}

// -------------------------------------------------------------------

// FocusOutStartRequest

// int32 component_id = 1;
inline void FocusOutStartRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t FocusOutStartRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusOutStartRequest.component_id)
  return _internal_component_id();
}
inline void FocusOutStartRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FocusOutStartRequest.component_id)
}
inline ::int32_t FocusOutStartRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void FocusOutStartRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// FocusOutStartResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool FocusOutStartResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void FocusOutStartResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusOutStartResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusOutStartResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusOutStartResponse.camera_result)
  return _internal_camera_result();
}
inline void FocusOutStartResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.FocusOutStartResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* FocusOutStartResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusOutStartResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.FocusOutStartResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusOutStartResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusOutStartResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.FocusOutStartResponse.camera_result)
  return _msg;
}
inline void FocusOutStartResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.FocusOutStartResponse.camera_result)
}

// -------------------------------------------------------------------

// FocusStopRequest

// int32 component_id = 1;
inline void FocusStopRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t FocusStopRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusStopRequest.component_id)
  return _internal_component_id();
}
inline void FocusStopRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FocusStopRequest.component_id)
}
inline ::int32_t FocusStopRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void FocusStopRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// -------------------------------------------------------------------

// FocusStopResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool FocusStopResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void FocusStopResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusStopResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusStopResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusStopResponse.camera_result)
  return _internal_camera_result();
}
inline void FocusStopResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.FocusStopResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* FocusStopResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusStopResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.FocusStopResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusStopResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusStopResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.FocusStopResponse.camera_result)
  return _msg;
}
inline void FocusStopResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.FocusStopResponse.camera_result)
}

// -------------------------------------------------------------------

// FocusRangeRequest

// int32 component_id = 1;
inline void FocusRangeRequest::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t FocusRangeRequest::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusRangeRequest.component_id)
  return _internal_component_id();
}
inline void FocusRangeRequest::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FocusRangeRequest.component_id)
}
inline ::int32_t FocusRangeRequest::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void FocusRangeRequest::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// float range = 2;
inline void FocusRangeRequest::clear_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_ = 0;
}
inline float FocusRangeRequest::range() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusRangeRequest.range)
  return _internal_range();
}
inline void FocusRangeRequest::set_range(float value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.FocusRangeRequest.range)
}
inline float FocusRangeRequest::_internal_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_;
}
inline void FocusRangeRequest::_internal_set_range(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_ = value;
}

// -------------------------------------------------------------------

// FocusRangeResponse

// .mavsdk.rpc.camera.CameraResult camera_result = 1;
inline bool FocusRangeResponse::has_camera_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_result_ != nullptr);
  return value;
}
inline void FocusRangeResponse::clear_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ != nullptr) _impl_.camera_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusRangeResponse::_internal_camera_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::CameraResult* p = _impl_.camera_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::CameraResult&>(::mavsdk::rpc::camera::_CameraResult_default_instance_);
}
inline const ::mavsdk::rpc::camera::CameraResult& FocusRangeResponse::camera_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.FocusRangeResponse.camera_result)
  return _internal_camera_result();
}
inline void FocusRangeResponse::unsafe_arena_set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_result_);
  }
  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.FocusRangeResponse.camera_result)
}
inline ::mavsdk::rpc::camera::CameraResult* FocusRangeResponse::release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* released = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusRangeResponse::unsafe_arena_release_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.FocusRangeResponse.camera_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* temp = _impl_.camera_result_;
  _impl_.camera_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusRangeResponse::_internal_mutable_camera_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::CameraResult>(GetArena());
    _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(p);
  }
  return _impl_.camera_result_;
}
inline ::mavsdk::rpc::camera::CameraResult* FocusRangeResponse::mutable_camera_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::CameraResult* _msg = _internal_mutable_camera_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.FocusRangeResponse.camera_result)
  return _msg;
}
inline void FocusRangeResponse::set_allocated_camera_result(::mavsdk::rpc::camera::CameraResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.camera_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.camera_result_ = reinterpret_cast<::mavsdk::rpc::camera::CameraResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.FocusRangeResponse.camera_result)
}

// -------------------------------------------------------------------

// CameraResult

// .mavsdk.rpc.camera.CameraResult.Result result = 1;
inline void CameraResult::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::camera::CameraResult_Result CameraResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CameraResult.result)
  return _internal_result();
}
inline void CameraResult::set_result(::mavsdk::rpc::camera::CameraResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CameraResult.result)
}
inline ::mavsdk::rpc::camera::CameraResult_Result CameraResult::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::camera::CameraResult_Result>(_impl_.result_);
}
inline void CameraResult::_internal_set_result(::mavsdk::rpc::camera::CameraResult_Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string result_str = 2;
inline void CameraResult::clear_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& CameraResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CameraResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CameraResult.result_str)
}
inline std::string* CameraResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CameraResult.result_str)
  return _s;
}
inline const std::string& CameraResult::_internal_result_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_str_.Get();
}
inline void CameraResult::_internal_set_result_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* CameraResult::_internal_mutable_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* CameraResult::release_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CameraResult.result_str)
  return _impl_.result_str_.Release();
}
inline void CameraResult::set_allocated_result_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.result_str_.IsDefault()) {
    _impl_.result_str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CameraResult.result_str)
}

// -------------------------------------------------------------------

// Position

// double latitude_deg = 1;
inline void Position::clear_latitude_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_deg_ = 0;
}
inline double Position::latitude_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Position.latitude_deg)
  return _internal_latitude_deg();
}
inline void Position::set_latitude_deg(double value) {
  _internal_set_latitude_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Position.latitude_deg)
}
inline double Position::_internal_latitude_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_deg_;
}
inline void Position::_internal_set_latitude_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_deg_ = value;
}

// double longitude_deg = 2;
inline void Position::clear_longitude_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_deg_ = 0;
}
inline double Position::longitude_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Position.longitude_deg)
  return _internal_longitude_deg();
}
inline void Position::set_longitude_deg(double value) {
  _internal_set_longitude_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Position.longitude_deg)
}
inline double Position::_internal_longitude_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_deg_;
}
inline void Position::_internal_set_longitude_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_deg_ = value;
}

// float absolute_altitude_m = 3;
inline void Position::clear_absolute_altitude_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.absolute_altitude_m_ = 0;
}
inline float Position::absolute_altitude_m() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Position.absolute_altitude_m)
  return _internal_absolute_altitude_m();
}
inline void Position::set_absolute_altitude_m(float value) {
  _internal_set_absolute_altitude_m(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Position.absolute_altitude_m)
}
inline float Position::_internal_absolute_altitude_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.absolute_altitude_m_;
}
inline void Position::_internal_set_absolute_altitude_m(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.absolute_altitude_m_ = value;
}

// float relative_altitude_m = 4;
inline void Position::clear_relative_altitude_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relative_altitude_m_ = 0;
}
inline float Position::relative_altitude_m() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Position.relative_altitude_m)
  return _internal_relative_altitude_m();
}
inline void Position::set_relative_altitude_m(float value) {
  _internal_set_relative_altitude_m(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Position.relative_altitude_m)
}
inline float Position::_internal_relative_altitude_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relative_altitude_m_;
}
inline void Position::_internal_set_relative_altitude_m(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relative_altitude_m_ = value;
}

// -------------------------------------------------------------------

// Quaternion

// float w = 1;
inline void Quaternion::clear_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = 0;
}
inline float Quaternion::w() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Quaternion.w)
  return _internal_w();
}
inline void Quaternion::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Quaternion.w)
}
inline float Quaternion::_internal_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.w_;
}
inline void Quaternion::_internal_set_w(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.w_ = value;
}

// float x = 2;
inline void Quaternion::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float Quaternion::x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Quaternion.x)
  return _internal_x();
}
inline void Quaternion::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Quaternion.x)
}
inline float Quaternion::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Quaternion::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 3;
inline void Quaternion::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float Quaternion::y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Quaternion.y)
  return _internal_y();
}
inline void Quaternion::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Quaternion.y)
}
inline float Quaternion::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Quaternion::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 4;
inline void Quaternion::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float Quaternion::z() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Quaternion.z)
  return _internal_z();
}
inline void Quaternion::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Quaternion.z)
}
inline float Quaternion::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Quaternion::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// EulerAngle

// float roll_deg = 1;
inline void EulerAngle::clear_roll_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_deg_ = 0;
}
inline float EulerAngle::roll_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.EulerAngle.roll_deg)
  return _internal_roll_deg();
}
inline void EulerAngle::set_roll_deg(float value) {
  _internal_set_roll_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.EulerAngle.roll_deg)
}
inline float EulerAngle::_internal_roll_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roll_deg_;
}
inline void EulerAngle::_internal_set_roll_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_deg_ = value;
}

// float pitch_deg = 2;
inline void EulerAngle::clear_pitch_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_deg_ = 0;
}
inline float EulerAngle::pitch_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.EulerAngle.pitch_deg)
  return _internal_pitch_deg();
}
inline void EulerAngle::set_pitch_deg(float value) {
  _internal_set_pitch_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.EulerAngle.pitch_deg)
}
inline float EulerAngle::_internal_pitch_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pitch_deg_;
}
inline void EulerAngle::_internal_set_pitch_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_deg_ = value;
}

// float yaw_deg = 3;
inline void EulerAngle::clear_yaw_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_deg_ = 0;
}
inline float EulerAngle::yaw_deg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.EulerAngle.yaw_deg)
  return _internal_yaw_deg();
}
inline void EulerAngle::set_yaw_deg(float value) {
  _internal_set_yaw_deg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.EulerAngle.yaw_deg)
}
inline float EulerAngle::_internal_yaw_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaw_deg_;
}
inline void EulerAngle::_internal_set_yaw_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_deg_ = value;
}

// -------------------------------------------------------------------

// CaptureInfo

// int32 component_id = 1;
inline void CaptureInfo::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t CaptureInfo::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.component_id)
  return _internal_component_id();
}
inline void CaptureInfo::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CaptureInfo.component_id)
}
inline ::int32_t CaptureInfo::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void CaptureInfo::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// .mavsdk.rpc.camera.Position position = 2;
inline bool CaptureInfo::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void CaptureInfo::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::camera::Position& CaptureInfo::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Position&>(::mavsdk::rpc::camera::_Position_default_instance_);
}
inline const ::mavsdk::rpc::camera::Position& CaptureInfo::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.position)
  return _internal_position();
}
inline void CaptureInfo::unsafe_arena_set_allocated_position(::mavsdk::rpc::camera::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::mavsdk::rpc::camera::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.CaptureInfo.position)
}
inline ::mavsdk::rpc::camera::Position* CaptureInfo::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Position* CaptureInfo::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CaptureInfo.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::camera::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Position* CaptureInfo::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::mavsdk::rpc::camera::Position*>(p);
  }
  return _impl_.position_;
}
inline ::mavsdk::rpc::camera::Position* CaptureInfo::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::camera::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CaptureInfo.position)
  return _msg;
}
inline void CaptureInfo::set_allocated_position(::mavsdk::rpc::camera::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::mavsdk::rpc::camera::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CaptureInfo.position)
}

// .mavsdk.rpc.camera.Quaternion attitude_quaternion = 3;
inline bool CaptureInfo::has_attitude_quaternion() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attitude_quaternion_ != nullptr);
  return value;
}
inline void CaptureInfo::clear_attitude_quaternion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attitude_quaternion_ != nullptr) _impl_.attitude_quaternion_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::mavsdk::rpc::camera::Quaternion& CaptureInfo::_internal_attitude_quaternion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::Quaternion* p = _impl_.attitude_quaternion_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::Quaternion&>(::mavsdk::rpc::camera::_Quaternion_default_instance_);
}
inline const ::mavsdk::rpc::camera::Quaternion& CaptureInfo::attitude_quaternion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.attitude_quaternion)
  return _internal_attitude_quaternion();
}
inline void CaptureInfo::unsafe_arena_set_allocated_attitude_quaternion(::mavsdk::rpc::camera::Quaternion* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attitude_quaternion_);
  }
  _impl_.attitude_quaternion_ = reinterpret_cast<::mavsdk::rpc::camera::Quaternion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.CaptureInfo.attitude_quaternion)
}
inline ::mavsdk::rpc::camera::Quaternion* CaptureInfo::release_attitude_quaternion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::Quaternion* released = _impl_.attitude_quaternion_;
  _impl_.attitude_quaternion_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::Quaternion* CaptureInfo::unsafe_arena_release_attitude_quaternion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CaptureInfo.attitude_quaternion)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mavsdk::rpc::camera::Quaternion* temp = _impl_.attitude_quaternion_;
  _impl_.attitude_quaternion_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::Quaternion* CaptureInfo::_internal_mutable_attitude_quaternion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attitude_quaternion_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::Quaternion>(GetArena());
    _impl_.attitude_quaternion_ = reinterpret_cast<::mavsdk::rpc::camera::Quaternion*>(p);
  }
  return _impl_.attitude_quaternion_;
}
inline ::mavsdk::rpc::camera::Quaternion* CaptureInfo::mutable_attitude_quaternion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::mavsdk::rpc::camera::Quaternion* _msg = _internal_mutable_attitude_quaternion();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CaptureInfo.attitude_quaternion)
  return _msg;
}
inline void CaptureInfo::set_allocated_attitude_quaternion(::mavsdk::rpc::camera::Quaternion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.attitude_quaternion_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.attitude_quaternion_ = reinterpret_cast<::mavsdk::rpc::camera::Quaternion*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CaptureInfo.attitude_quaternion)
}

// .mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 4;
inline bool CaptureInfo::has_attitude_euler_angle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attitude_euler_angle_ != nullptr);
  return value;
}
inline void CaptureInfo::clear_attitude_euler_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attitude_euler_angle_ != nullptr) _impl_.attitude_euler_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::mavsdk::rpc::camera::EulerAngle& CaptureInfo::_internal_attitude_euler_angle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::camera::EulerAngle* p = _impl_.attitude_euler_angle_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::camera::EulerAngle&>(::mavsdk::rpc::camera::_EulerAngle_default_instance_);
}
inline const ::mavsdk::rpc::camera::EulerAngle& CaptureInfo::attitude_euler_angle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.attitude_euler_angle)
  return _internal_attitude_euler_angle();
}
inline void CaptureInfo::unsafe_arena_set_allocated_attitude_euler_angle(::mavsdk::rpc::camera::EulerAngle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attitude_euler_angle_);
  }
  _impl_.attitude_euler_angle_ = reinterpret_cast<::mavsdk::rpc::camera::EulerAngle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.camera.CaptureInfo.attitude_euler_angle)
}
inline ::mavsdk::rpc::camera::EulerAngle* CaptureInfo::release_attitude_euler_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::mavsdk::rpc::camera::EulerAngle* released = _impl_.attitude_euler_angle_;
  _impl_.attitude_euler_angle_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::camera::EulerAngle* CaptureInfo::unsafe_arena_release_attitude_euler_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CaptureInfo.attitude_euler_angle)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::mavsdk::rpc::camera::EulerAngle* temp = _impl_.attitude_euler_angle_;
  _impl_.attitude_euler_angle_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::camera::EulerAngle* CaptureInfo::_internal_mutable_attitude_euler_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attitude_euler_angle_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::camera::EulerAngle>(GetArena());
    _impl_.attitude_euler_angle_ = reinterpret_cast<::mavsdk::rpc::camera::EulerAngle*>(p);
  }
  return _impl_.attitude_euler_angle_;
}
inline ::mavsdk::rpc::camera::EulerAngle* CaptureInfo::mutable_attitude_euler_angle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::mavsdk::rpc::camera::EulerAngle* _msg = _internal_mutable_attitude_euler_angle();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CaptureInfo.attitude_euler_angle)
  return _msg;
}
inline void CaptureInfo::set_allocated_attitude_euler_angle(::mavsdk::rpc::camera::EulerAngle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.attitude_euler_angle_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.attitude_euler_angle_ = reinterpret_cast<::mavsdk::rpc::camera::EulerAngle*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CaptureInfo.attitude_euler_angle)
}

// uint64 time_utc_us = 5;
inline void CaptureInfo::clear_time_utc_us() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_utc_us_ = ::uint64_t{0u};
}
inline ::uint64_t CaptureInfo::time_utc_us() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.time_utc_us)
  return _internal_time_utc_us();
}
inline void CaptureInfo::set_time_utc_us(::uint64_t value) {
  _internal_set_time_utc_us(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CaptureInfo.time_utc_us)
}
inline ::uint64_t CaptureInfo::_internal_time_utc_us() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_utc_us_;
}
inline void CaptureInfo::_internal_set_time_utc_us(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_utc_us_ = value;
}

// bool is_success = 6;
inline void CaptureInfo::clear_is_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_success_ = false;
}
inline bool CaptureInfo::is_success() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.is_success)
  return _internal_is_success();
}
inline void CaptureInfo::set_is_success(bool value) {
  _internal_set_is_success(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CaptureInfo.is_success)
}
inline bool CaptureInfo::_internal_is_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_success_;
}
inline void CaptureInfo::_internal_set_is_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_success_ = value;
}

// int32 index = 7;
inline void CaptureInfo::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0;
}
inline ::int32_t CaptureInfo::index() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.index)
  return _internal_index();
}
inline void CaptureInfo::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CaptureInfo.index)
}
inline ::int32_t CaptureInfo::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void CaptureInfo::_internal_set_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// string file_url = 8;
inline void CaptureInfo::clear_file_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_url_.ClearToEmpty();
}
inline const std::string& CaptureInfo::file_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CaptureInfo.file_url)
  return _internal_file_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CaptureInfo::set_file_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.CaptureInfo.file_url)
}
inline std::string* CaptureInfo::mutable_file_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file_url();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CaptureInfo.file_url)
  return _s;
}
inline const std::string& CaptureInfo::_internal_file_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_url_.Get();
}
inline void CaptureInfo::_internal_set_file_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_url_.Set(value, GetArena());
}
inline std::string* CaptureInfo::_internal_mutable_file_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_url_.Mutable( GetArena());
}
inline std::string* CaptureInfo::release_file_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.CaptureInfo.file_url)
  return _impl_.file_url_.Release();
}
inline void CaptureInfo::set_allocated_file_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_url_.IsDefault()) {
    _impl_.file_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.CaptureInfo.file_url)
}

// -------------------------------------------------------------------

// Information

// int32 component_id = 1;
inline void Information::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0;
}
inline ::int32_t Information::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.component_id)
  return _internal_component_id();
}
inline void Information::set_component_id(::int32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.component_id)
}
inline ::int32_t Information::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void Information::_internal_set_component_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// string vendor_name = 2;
inline void Information::clear_vendor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_name_.ClearToEmpty();
}
inline const std::string& Information::vendor_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.vendor_name)
  return _internal_vendor_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Information::set_vendor_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.vendor_name)
}
inline std::string* Information::mutable_vendor_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vendor_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Information.vendor_name)
  return _s;
}
inline const std::string& Information::_internal_vendor_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vendor_name_.Get();
}
inline void Information::_internal_set_vendor_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_name_.Set(value, GetArena());
}
inline std::string* Information::_internal_mutable_vendor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vendor_name_.Mutable( GetArena());
}
inline std::string* Information::release_vendor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Information.vendor_name)
  return _impl_.vendor_name_.Release();
}
inline void Information::set_allocated_vendor_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vendor_name_.IsDefault()) {
    _impl_.vendor_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Information.vendor_name)
}

// string model_name = 3;
inline void Information::clear_model_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_name_.ClearToEmpty();
}
inline const std::string& Information::model_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.model_name)
  return _internal_model_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Information::set_model_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.model_name)
}
inline std::string* Information::mutable_model_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.Information.model_name)
  return _s;
}
inline const std::string& Information::_internal_model_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_name_.Get();
}
inline void Information::_internal_set_model_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_name_.Set(value, GetArena());
}
inline std::string* Information::_internal_mutable_model_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_name_.Mutable( GetArena());
}
inline std::string* Information::release_model_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.camera.Information.model_name)
  return _impl_.model_name_.Release();
}
inline void Information::set_allocated_model_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_name_.IsDefault()) {
    _impl_.model_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.camera.Information.model_name)
}

// float focal_length_mm = 4;
inline void Information::clear_focal_length_mm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.focal_length_mm_ = 0;
}
inline float Information::focal_length_mm() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.focal_length_mm)
  return _internal_focal_length_mm();
}
inline void Information::set_focal_length_mm(float value) {
  _internal_set_focal_length_mm(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.focal_length_mm)
}
inline float Information::_internal_focal_length_mm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.focal_length_mm_;
}
inline void Information::_internal_set_focal_length_mm(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.focal_length_mm_ = value;
}

// float horizontal_sensor_size_mm = 5;
inline void Information::clear_horizontal_sensor_size_mm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_sensor_size_mm_ = 0;
}
inline float Information::horizontal_sensor_size_mm() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.horizontal_sensor_size_mm)
  return _internal_horizontal_sensor_size_mm();
}
inline void Information::set_horizontal_sensor_size_mm(float value) {
  _internal_set_horizontal_sensor_size_mm(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.horizontal_sensor_size_mm)
}
inline float Information::_internal_horizontal_sensor_size_mm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.horizontal_sensor_size_mm_;
}
inline void Information::_internal_set_horizontal_sensor_size_mm(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_sensor_size_mm_ = value;
}

// float vertical_sensor_size_mm = 6;
inline void Information::clear_vertical_sensor_size_mm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_sensor_size_mm_ = 0;
}
inline float Information::vertical_sensor_size_mm() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.vertical_sensor_size_mm)
  return _internal_vertical_sensor_size_mm();
}
inline void Information::set_vertical_sensor_size_mm(float value) {
  _internal_set_vertical_sensor_size_mm(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.vertical_sensor_size_mm)
}
inline float Information::_internal_vertical_sensor_size_mm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertical_sensor_size_mm_;
}
inline void Information::_internal_set_vertical_sensor_size_mm(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_sensor_size_mm_ = value;
}

// uint32 horizontal_resolution_px = 7;
inline void Information::clear_horizontal_resolution_px() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_resolution_px_ = 0u;
}
inline ::uint32_t Information::horizontal_resolution_px() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.horizontal_resolution_px)
  return _internal_horizontal_resolution_px();
}
inline void Information::set_horizontal_resolution_px(::uint32_t value) {
  _internal_set_horizontal_resolution_px(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.horizontal_resolution_px)
}
inline ::uint32_t Information::_internal_horizontal_resolution_px() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.horizontal_resolution_px_;
}
inline void Information::_internal_set_horizontal_resolution_px(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizontal_resolution_px_ = value;
}

// uint32 vertical_resolution_px = 8;
inline void Information::clear_vertical_resolution_px() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_resolution_px_ = 0u;
}
inline ::uint32_t Information::vertical_resolution_px() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.Information.vertical_resolution_px)
  return _internal_vertical_resolution_px();
}
inline void Information::set_vertical_resolution_px(::uint32_t value) {
  _internal_set_vertical_resolution_px(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.camera.Information.vertical_resolution_px)
}
inline ::uint32_t Information::_internal_vertical_resolution_px() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertical_resolution_px_;
}
inline void Information::_internal_set_vertical_resolution_px(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertical_resolution_px_ = value;
}

// -------------------------------------------------------------------

// CameraList

// repeated .mavsdk.rpc.camera.Information cameras = 1;
inline int CameraList::_internal_cameras_size() const {
  return _internal_cameras().size();
}
inline int CameraList::cameras_size() const {
  return _internal_cameras_size();
}
inline void CameraList::clear_cameras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameras_.Clear();
}
inline ::mavsdk::rpc::camera::Information* CameraList::mutable_cameras(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.camera.CameraList.cameras)
  return _internal_mutable_cameras()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>* CameraList::mutable_cameras()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.camera.CameraList.cameras)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cameras();
}
inline const ::mavsdk::rpc::camera::Information& CameraList::cameras(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.camera.CameraList.cameras)
  return _internal_cameras().Get(index);
}
inline ::mavsdk::rpc::camera::Information* CameraList::add_cameras() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mavsdk::rpc::camera::Information* _add = _internal_mutable_cameras()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.camera.CameraList.cameras)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>& CameraList::cameras() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.camera.CameraList.cameras)
  return _internal_cameras();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>&
CameraList::_internal_cameras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cameras_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::camera::Information>*
CameraList::_internal_mutable_cameras() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cameras_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace camera
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus>() {
  return ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum>() {
  return ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::camera::Storage_StorageStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::Storage_StorageStatus>() {
  return ::mavsdk::rpc::camera::Storage_StorageStatus_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::camera::Storage_StorageType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::Storage_StorageType>() {
  return ::mavsdk::rpc::camera::Storage_StorageType_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::camera::CameraResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::CameraResult_Result>() {
  return ::mavsdk::rpc::camera::CameraResult_Result_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::camera::Mode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::Mode>() {
  return ::mavsdk::rpc::camera::Mode_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::camera::PhotosRange> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::camera::PhotosRange>() {
  return ::mavsdk::rpc::camera::PhotosRange_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // camera_2fcamera_2eproto_2epb_2eh
