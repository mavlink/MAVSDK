// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gimbal/gimbal.proto
// Protobuf C++ Version: 5.29.1

#include "gimbal/gimbal.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace gimbal {

inline constexpr TakeControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        control_mode_{static_cast< ::mavsdk::rpc::gimbal::ControlMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TakeControlRequest::TakeControlRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TakeControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakeControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakeControlRequestDefaultTypeInternal() {}
  union {
    TakeControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakeControlRequestDefaultTypeInternal _TakeControlRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeGimbalListRequest::SubscribeGimbalListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeGimbalListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeGimbalListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeGimbalListRequestDefaultTypeInternal() {}
  union {
    SubscribeGimbalListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeGimbalListRequestDefaultTypeInternal _SubscribeGimbalListRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeControlStatusRequest::SubscribeControlStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeControlStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeControlStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeControlStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeControlStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeControlStatusRequestDefaultTypeInternal _SubscribeControlStatusRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeAttitudeRequest::SubscribeAttitudeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeAttitudeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeAttitudeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeAttitudeRequestDefaultTypeInternal() {}
  union {
    SubscribeAttitudeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeAttitudeRequestDefaultTypeInternal _SubscribeAttitudeRequest_default_instance_;

inline constexpr SetRoiLocationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        gimbal_id_{0},
        altitude_m_{0},
        longitude_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRoiLocationRequest::SetRoiLocationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRoiLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRoiLocationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRoiLocationRequestDefaultTypeInternal() {}
  union {
    SetRoiLocationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRoiLocationRequestDefaultTypeInternal _SetRoiLocationRequest_default_instance_;

inline constexpr SetAngularRatesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        roll_rate_deg_s_{0},
        pitch_rate_deg_s_{0},
        yaw_rate_deg_s_{0},
        gimbal_mode_{static_cast< ::mavsdk::rpc::gimbal::GimbalMode >(0)},
        send_mode_{static_cast< ::mavsdk::rpc::gimbal::SendMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAngularRatesRequest::SetAngularRatesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetAngularRatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAngularRatesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAngularRatesRequestDefaultTypeInternal() {}
  union {
    SetAngularRatesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAngularRatesRequestDefaultTypeInternal _SetAngularRatesRequest_default_instance_;

inline constexpr SetAnglesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        roll_deg_{0},
        pitch_deg_{0},
        yaw_deg_{0},
        gimbal_mode_{static_cast< ::mavsdk::rpc::gimbal::GimbalMode >(0)},
        send_mode_{static_cast< ::mavsdk::rpc::gimbal::SendMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAnglesRequest::SetAnglesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetAnglesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAnglesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAnglesRequestDefaultTypeInternal() {}
  union {
    SetAnglesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAnglesRequestDefaultTypeInternal _SetAnglesRequest_default_instance_;

inline constexpr ReleaseControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseControlRequest::ReleaseControlRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReleaseControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseControlRequestDefaultTypeInternal() {}
  union {
    ReleaseControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseControlRequestDefaultTypeInternal _ReleaseControlRequest_default_instance_;

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : w_{0},
        x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr GimbalResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::gimbal::GimbalResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalResult::GimbalResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GimbalResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalResultDefaultTypeInternal() {}
  union {
    GimbalResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalResultDefaultTypeInternal _GimbalResult_default_instance_;

inline constexpr GimbalItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vendor_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        custom_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gimbal_id_{0},
        gimbal_manager_component_id_{0},
        gimbal_device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalItem::GimbalItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GimbalItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalItemDefaultTypeInternal() {}
  union {
    GimbalItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalItemDefaultTypeInternal _GimbalItem_default_instance_;

inline constexpr GetControlStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetControlStatusRequest::GetControlStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetControlStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetControlStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetControlStatusRequestDefaultTypeInternal() {}
  union {
    GetControlStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetControlStatusRequestDefaultTypeInternal _GetControlStatusRequest_default_instance_;

inline constexpr GetAttitudeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetAttitudeRequest::GetAttitudeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetAttitudeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAttitudeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAttitudeRequestDefaultTypeInternal() {}
  union {
    GetAttitudeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAttitudeRequestDefaultTypeInternal _GetAttitudeRequest_default_instance_;

inline constexpr EulerAngle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_deg_{0},
        pitch_deg_{0},
        yaw_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EulerAngle::EulerAngle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EulerAngleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EulerAngleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EulerAngleDefaultTypeInternal() {}
  union {
    EulerAngle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EulerAngleDefaultTypeInternal _EulerAngle_default_instance_;

inline constexpr ControlStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbal_id_{0},
        control_mode_{static_cast< ::mavsdk::rpc::gimbal::ControlMode >(0)},
        sysid_primary_control_{0},
        compid_primary_control_{0},
        sysid_secondary_control_{0},
        compid_secondary_control_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControlStatus::ControlStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ControlStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlStatusDefaultTypeInternal() {}
  union {
    ControlStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlStatusDefaultTypeInternal _ControlStatus_default_instance_;

inline constexpr AngularVelocityBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_rad_s_{0},
        pitch_rad_s_{0},
        yaw_rad_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AngularVelocityBody::AngularVelocityBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AngularVelocityBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AngularVelocityBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AngularVelocityBodyDefaultTypeInternal() {}
  union {
    AngularVelocityBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AngularVelocityBodyDefaultTypeInternal _AngularVelocityBody_default_instance_;

inline constexpr TakeControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TakeControlResponse::TakeControlResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TakeControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakeControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakeControlResponseDefaultTypeInternal() {}
  union {
    TakeControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakeControlResponseDefaultTypeInternal _TakeControlResponse_default_instance_;

inline constexpr SetRoiLocationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRoiLocationResponse::SetRoiLocationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRoiLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRoiLocationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRoiLocationResponseDefaultTypeInternal() {}
  union {
    SetRoiLocationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRoiLocationResponseDefaultTypeInternal _SetRoiLocationResponse_default_instance_;

inline constexpr SetAngularRatesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAngularRatesResponse::SetAngularRatesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetAngularRatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAngularRatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAngularRatesResponseDefaultTypeInternal() {}
  union {
    SetAngularRatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAngularRatesResponseDefaultTypeInternal _SetAngularRatesResponse_default_instance_;

inline constexpr SetAnglesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAnglesResponse::SetAnglesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetAnglesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAnglesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAnglesResponseDefaultTypeInternal() {}
  union {
    SetAnglesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAnglesResponseDefaultTypeInternal _SetAnglesResponse_default_instance_;

inline constexpr ReleaseControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseControlResponse::ReleaseControlResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReleaseControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseControlResponseDefaultTypeInternal() {}
  union {
    ReleaseControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseControlResponseDefaultTypeInternal _ReleaseControlResponse_default_instance_;

inline constexpr GimbalList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gimbals_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalList::GimbalList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GimbalListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalListDefaultTypeInternal() {}
  union {
    GimbalList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalListDefaultTypeInternal _GimbalList_default_instance_;

inline constexpr GetControlStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr},
        control_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetControlStatusResponse::GetControlStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetControlStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetControlStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetControlStatusResponseDefaultTypeInternal() {}
  union {
    GetControlStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetControlStatusResponseDefaultTypeInternal _GetControlStatusResponse_default_instance_;

inline constexpr ControlStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        control_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ControlStatusResponse::ControlStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ControlStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlStatusResponseDefaultTypeInternal() {}
  union {
    ControlStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlStatusResponseDefaultTypeInternal _ControlStatusResponse_default_instance_;

inline constexpr Attitude::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        euler_angle_forward_{nullptr},
        quaternion_forward_{nullptr},
        euler_angle_north_{nullptr},
        quaternion_north_{nullptr},
        angular_velocity_{nullptr},
        timestamp_us_{::uint64_t{0u}},
        gimbal_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Attitude::Attitude(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttitudeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeDefaultTypeInternal() {}
  union {
    Attitude _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeDefaultTypeInternal _Attitude_default_instance_;

inline constexpr GimbalListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_list_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GimbalListResponse::GimbalListResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GimbalListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GimbalListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GimbalListResponseDefaultTypeInternal() {}
  union {
    GimbalListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GimbalListResponseDefaultTypeInternal _GimbalListResponse_default_instance_;

inline constexpr GetAttitudeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gimbal_result_{nullptr},
        attitude_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetAttitudeResponse::GetAttitudeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetAttitudeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAttitudeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAttitudeResponseDefaultTypeInternal() {}
  union {
    GetAttitudeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAttitudeResponseDefaultTypeInternal _GetAttitudeResponse_default_instance_;

inline constexpr AttitudeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attitude_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AttitudeResponse::AttitudeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttitudeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeResponseDefaultTypeInternal() {}
  union {
    AttitudeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeResponseDefaultTypeInternal _AttitudeResponse_default_instance_;
}  // namespace gimbal
}  // namespace rpc
}  // namespace mavsdk
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_gimbal_2fgimbal_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_gimbal_2fgimbal_2eproto = nullptr;
const ::uint32_t
    TableStruct_gimbal_2fgimbal_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _impl_.roll_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _impl_.pitch_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _impl_.yaw_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _impl_.gimbal_mode_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesRequest, _impl_.send_mode_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAnglesResponse, _impl_.gimbal_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _impl_.roll_rate_deg_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _impl_.pitch_rate_deg_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _impl_.yaw_rate_deg_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _impl_.gimbal_mode_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesRequest, _impl_.send_mode_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetAngularRatesResponse, _impl_.gimbal_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationRequest, _impl_.latitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationRequest, _impl_.longitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationRequest, _impl_.altitude_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SetRoiLocationResponse, _impl_.gimbal_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::TakeControlRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::TakeControlRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::TakeControlRequest, _impl_.control_mode_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::TakeControlResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::TakeControlResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::TakeControlResponse, _impl_.gimbal_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ReleaseControlRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ReleaseControlRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ReleaseControlResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ReleaseControlResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ReleaseControlResponse, _impl_.gimbal_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SubscribeControlStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatusResponse, _impl_.control_status_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetControlStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetControlStatusRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetControlStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetControlStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetControlStatusResponse, _impl_.gimbal_result_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetControlStatusResponse, _impl_.control_status_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Quaternion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Quaternion, _impl_.w_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Quaternion, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Quaternion, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Quaternion, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::EulerAngle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::EulerAngle, _impl_.roll_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::EulerAngle, _impl_.pitch_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::EulerAngle, _impl_.yaw_deg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AngularVelocityBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AngularVelocityBody, _impl_.roll_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AngularVelocityBody, _impl_.pitch_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AngularVelocityBody, _impl_.yaw_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.euler_angle_forward_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.quaternion_forward_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.euler_angle_north_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.quaternion_north_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.angular_velocity_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::Attitude, _impl_.timestamp_us_),
        ~0u,
        0,
        1,
        2,
        3,
        4,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SubscribeAttitudeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AttitudeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AttitudeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::AttitudeResponse, _impl_.attitude_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetAttitudeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetAttitudeRequest, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetAttitudeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetAttitudeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetAttitudeResponse, _impl_.gimbal_result_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GetAttitudeResponse, _impl_.attitude_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::SubscribeGimbalListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalListResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalListResponse, _impl_.gimbal_list_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _impl_.vendor_name_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _impl_.model_name_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _impl_.custom_name_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _impl_.gimbal_manager_component_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalItem, _impl_.gimbal_device_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalList, _impl_.gimbals_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _impl_.gimbal_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _impl_.control_mode_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _impl_.sysid_primary_control_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _impl_.compid_primary_control_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _impl_.sysid_secondary_control_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::ControlStatus, _impl_.compid_secondary_control_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalResult, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gimbal::GimbalResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::gimbal::SetAnglesRequest)},
        {14, 23, -1, sizeof(::mavsdk::rpc::gimbal::SetAnglesResponse)},
        {24, -1, -1, sizeof(::mavsdk::rpc::gimbal::SetAngularRatesRequest)},
        {38, 47, -1, sizeof(::mavsdk::rpc::gimbal::SetAngularRatesResponse)},
        {48, -1, -1, sizeof(::mavsdk::rpc::gimbal::SetRoiLocationRequest)},
        {60, 69, -1, sizeof(::mavsdk::rpc::gimbal::SetRoiLocationResponse)},
        {70, -1, -1, sizeof(::mavsdk::rpc::gimbal::TakeControlRequest)},
        {80, 89, -1, sizeof(::mavsdk::rpc::gimbal::TakeControlResponse)},
        {90, -1, -1, sizeof(::mavsdk::rpc::gimbal::ReleaseControlRequest)},
        {99, 108, -1, sizeof(::mavsdk::rpc::gimbal::ReleaseControlResponse)},
        {109, -1, -1, sizeof(::mavsdk::rpc::gimbal::SubscribeControlStatusRequest)},
        {117, 126, -1, sizeof(::mavsdk::rpc::gimbal::ControlStatusResponse)},
        {127, -1, -1, sizeof(::mavsdk::rpc::gimbal::GetControlStatusRequest)},
        {136, 146, -1, sizeof(::mavsdk::rpc::gimbal::GetControlStatusResponse)},
        {148, -1, -1, sizeof(::mavsdk::rpc::gimbal::Quaternion)},
        {160, -1, -1, sizeof(::mavsdk::rpc::gimbal::EulerAngle)},
        {171, -1, -1, sizeof(::mavsdk::rpc::gimbal::AngularVelocityBody)},
        {182, 197, -1, sizeof(::mavsdk::rpc::gimbal::Attitude)},
        {204, -1, -1, sizeof(::mavsdk::rpc::gimbal::SubscribeAttitudeRequest)},
        {212, 221, -1, sizeof(::mavsdk::rpc::gimbal::AttitudeResponse)},
        {222, -1, -1, sizeof(::mavsdk::rpc::gimbal::GetAttitudeRequest)},
        {231, 241, -1, sizeof(::mavsdk::rpc::gimbal::GetAttitudeResponse)},
        {243, -1, -1, sizeof(::mavsdk::rpc::gimbal::SubscribeGimbalListRequest)},
        {251, 260, -1, sizeof(::mavsdk::rpc::gimbal::GimbalListResponse)},
        {261, -1, -1, sizeof(::mavsdk::rpc::gimbal::GimbalItem)},
        {275, -1, -1, sizeof(::mavsdk::rpc::gimbal::GimbalList)},
        {284, -1, -1, sizeof(::mavsdk::rpc::gimbal::ControlStatus)},
        {298, -1, -1, sizeof(::mavsdk::rpc::gimbal::GimbalResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::gimbal::_SetAnglesRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SetAnglesResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SetAngularRatesRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SetAngularRatesResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SetRoiLocationRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SetRoiLocationResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_TakeControlRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_TakeControlResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_ReleaseControlRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_ReleaseControlResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SubscribeControlStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_ControlStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GetControlStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GetControlStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_Quaternion_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_EulerAngle_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_AngularVelocityBody_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_Attitude_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SubscribeAttitudeRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_AttitudeResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GetAttitudeRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GetAttitudeResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_SubscribeGimbalListRequest_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GimbalListResponse_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GimbalItem_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GimbalList_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_ControlStatus_default_instance_._instance,
    &::mavsdk::rpc::gimbal::_GimbalResult_default_instance_._instance,
};
const char descriptor_table_protodef_gimbal_2fgimbal_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023gimbal/gimbal.proto\022\021mavsdk.rpc.gimbal"
    "\032\024mavsdk_options.proto\"\277\001\n\020SetAnglesRequ"
    "est\022\021\n\tgimbal_id\030\001 \001(\005\022\020\n\010roll_deg\030\002 \001(\002"
    "\022\021\n\tpitch_deg\030\003 \001(\002\022\017\n\007yaw_deg\030\004 \001(\002\0222\n\013"
    "gimbal_mode\030\005 \001(\0162\035.mavsdk.rpc.gimbal.Gi"
    "mbalMode\022.\n\tsend_mode\030\006 \001(\0162\033.mavsdk.rpc"
    ".gimbal.SendMode\"K\n\021SetAnglesResponse\0226\n"
    "\rgimbal_result\030\001 \001(\0132\037.mavsdk.rpc.gimbal"
    ".GimbalResult\"\332\001\n\026SetAngularRatesRequest"
    "\022\021\n\tgimbal_id\030\001 \001(\005\022\027\n\017roll_rate_deg_s\030\002"
    " \001(\002\022\030\n\020pitch_rate_deg_s\030\003 \001(\002\022\026\n\016yaw_ra"
    "te_deg_s\030\004 \001(\002\0222\n\013gimbal_mode\030\005 \001(\0162\035.ma"
    "vsdk.rpc.gimbal.GimbalMode\022.\n\tsend_mode\030"
    "\006 \001(\0162\033.mavsdk.rpc.gimbal.SendMode\"Q\n\027Se"
    "tAngularRatesResponse\0226\n\rgimbal_result\030\001"
    " \001(\0132\037.mavsdk.rpc.gimbal.GimbalResult\"k\n"
    "\025SetRoiLocationRequest\022\021\n\tgimbal_id\030\001 \001("
    "\005\022\024\n\014latitude_deg\030\002 \001(\001\022\025\n\rlongitude_deg"
    "\030\003 \001(\001\022\022\n\naltitude_m\030\004 \001(\002\"P\n\026SetRoiLoca"
    "tionResponse\0226\n\rgimbal_result\030\001 \001(\0132\037.ma"
    "vsdk.rpc.gimbal.GimbalResult\"]\n\022TakeCont"
    "rolRequest\022\021\n\tgimbal_id\030\001 \001(\005\0224\n\014control"
    "_mode\030\002 \001(\0162\036.mavsdk.rpc.gimbal.ControlM"
    "ode\"M\n\023TakeControlResponse\0226\n\rgimbal_res"
    "ult\030\001 \001(\0132\037.mavsdk.rpc.gimbal.GimbalResu"
    "lt\"*\n\025ReleaseControlRequest\022\021\n\tgimbal_id"
    "\030\001 \001(\005\"P\n\026ReleaseControlResponse\0226\n\rgimb"
    "al_result\030\001 \001(\0132\037.mavsdk.rpc.gimbal.Gimb"
    "alResult\"\037\n\035SubscribeControlStatusReques"
    "t\"Q\n\025ControlStatusResponse\0228\n\016control_st"
    "atus\030\001 \001(\0132 .mavsdk.rpc.gimbal.ControlSt"
    "atus\",\n\027GetControlStatusRequest\022\021\n\tgimba"
    "l_id\030\001 \001(\005\"\214\001\n\030GetControlStatusResponse\022"
    "6\n\rgimbal_result\030\001 \001(\0132\037.mavsdk.rpc.gimb"
    "al.GimbalResult\0228\n\016control_status\030\002 \001(\0132"
    " .mavsdk.rpc.gimbal.ControlStatus\"\\\n\nQua"
    "ternion\022\022\n\001w\030\001 \001(\002B\007\202\265\030\003NaN\022\022\n\001x\030\002 \001(\002B\007"
    "\202\265\030\003NaN\022\022\n\001y\030\003 \001(\002B\007\202\265\030\003NaN\022\022\n\001z\030\004 \001(\002B\007"
    "\202\265\030\003NaN\"]\n\nEulerAngle\022\031\n\010roll_deg\030\001 \001(\002B"
    "\007\202\265\030\003NaN\022\032\n\tpitch_deg\030\002 \001(\002B\007\202\265\030\003NaN\022\030\n\007"
    "yaw_deg\030\003 \001(\002B\007\202\265\030\003NaN\"l\n\023AngularVelocit"
    "yBody\022\033\n\nroll_rad_s\030\001 \001(\002B\007\202\265\030\003NaN\022\034\n\013pi"
    "tch_rad_s\030\002 \001(\002B\007\202\265\030\003NaN\022\032\n\tyaw_rad_s\030\003 "
    "\001(\002B\007\202\265\030\003NaN\"\337\002\n\010Attitude\022\021\n\tgimbal_id\030\001"
    " \001(\005\022:\n\023euler_angle_forward\030\002 \001(\0132\035.mavs"
    "dk.rpc.gimbal.EulerAngle\0229\n\022quaternion_f"
    "orward\030\003 \001(\0132\035.mavsdk.rpc.gimbal.Quatern"
    "ion\0228\n\021euler_angle_north\030\004 \001(\0132\035.mavsdk."
    "rpc.gimbal.EulerAngle\0227\n\020quaternion_nort"
    "h\030\005 \001(\0132\035.mavsdk.rpc.gimbal.Quaternion\022@"
    "\n\020angular_velocity\030\006 \001(\0132&.mavsdk.rpc.gi"
    "mbal.AngularVelocityBody\022\024\n\014timestamp_us"
    "\030\007 \001(\004\"\032\n\030SubscribeAttitudeRequest\"A\n\020At"
    "titudeResponse\022-\n\010attitude\030\001 \001(\0132\033.mavsd"
    "k.rpc.gimbal.Attitude\"\'\n\022GetAttitudeRequ"
    "est\022\021\n\tgimbal_id\030\001 \001(\005\"|\n\023GetAttitudeRes"
    "ponse\0226\n\rgimbal_result\030\001 \001(\0132\037.mavsdk.rp"
    "c.gimbal.GimbalResult\022-\n\010attitude\030\002 \001(\0132"
    "\033.mavsdk.rpc.gimbal.Attitude\"\034\n\032Subscrib"
    "eGimbalListRequest\"H\n\022GimbalListResponse"
    "\0222\n\013gimbal_list\030\001 \001(\0132\035.mavsdk.rpc.gimba"
    "l.GimbalList\"\234\001\n\nGimbalItem\022\021\n\tgimbal_id"
    "\030\001 \001(\005\022\023\n\013vendor_name\030\002 \001(\t\022\022\n\nmodel_nam"
    "e\030\003 \001(\t\022\023\n\013custom_name\030\004 \001(\t\022#\n\033gimbal_m"
    "anager_component_id\030\005 \001(\005\022\030\n\020gimbal_devi"
    "ce_id\030\006 \001(\005\"<\n\nGimbalList\022.\n\007gimbals\030\001 \003"
    "(\0132\035.mavsdk.rpc.gimbal.GimbalItem\"\332\001\n\rCo"
    "ntrolStatus\022\021\n\tgimbal_id\030\001 \001(\005\0224\n\014contro"
    "l_mode\030\002 \001(\0162\036.mavsdk.rpc.gimbal.Control"
    "Mode\022\035\n\025sysid_primary_control\030\003 \001(\005\022\036\n\026c"
    "ompid_primary_control\030\004 \001(\005\022\037\n\027sysid_sec"
    "ondary_control\030\005 \001(\005\022 \n\030compid_secondary"
    "_control\030\006 \001(\005\"\376\001\n\014GimbalResult\0226\n\006resul"
    "t\030\001 \001(\0162&.mavsdk.rpc.gimbal.GimbalResult"
    ".Result\022\022\n\nresult_str\030\002 \001(\t\"\241\001\n\006Result\022\022"
    "\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\020"
    "\n\014RESULT_ERROR\020\002\022\022\n\016RESULT_TIMEOUT\020\003\022\026\n\022"
    "RESULT_UNSUPPORTED\020\004\022\024\n\020RESULT_NO_SYSTEM"
    "\020\005\022\033\n\027RESULT_INVALID_ARGUMENT\020\006*B\n\nGimba"
    "lMode\022\032\n\026GIMBAL_MODE_YAW_FOLLOW\020\000\022\030\n\024GIM"
    "BAL_MODE_YAW_LOCK\020\001*Z\n\013ControlMode\022\025\n\021CO"
    "NTROL_MODE_NONE\020\000\022\030\n\024CONTROL_MODE_PRIMAR"
    "Y\020\001\022\032\n\026CONTROL_MODE_SECONDARY\020\002*4\n\010SendM"
    "ode\022\022\n\016SEND_MODE_ONCE\020\000\022\024\n\020SEND_MODE_STR"
    "EAM\020\0012\274\010\n\rGimbalService\022X\n\tSetAngles\022#.m"
    "avsdk.rpc.gimbal.SetAnglesRequest\032$.mavs"
    "dk.rpc.gimbal.SetAnglesResponse\"\000\022j\n\017Set"
    "AngularRates\022).mavsdk.rpc.gimbal.SetAngu"
    "larRatesRequest\032*.mavsdk.rpc.gimbal.SetA"
    "ngularRatesResponse\"\000\022g\n\016SetRoiLocation\022"
    "(.mavsdk.rpc.gimbal.SetRoiLocationReques"
    "t\032).mavsdk.rpc.gimbal.SetRoiLocationResp"
    "onse\"\000\022^\n\013TakeControl\022%.mavsdk.rpc.gimba"
    "l.TakeControlRequest\032&.mavsdk.rpc.gimbal"
    ".TakeControlResponse\"\000\022g\n\016ReleaseControl"
    "\022(.mavsdk.rpc.gimbal.ReleaseControlReque"
    "st\032).mavsdk.rpc.gimbal.ReleaseControlRes"
    "ponse\"\000\022o\n\023SubscribeGimbalList\022-.mavsdk."
    "rpc.gimbal.SubscribeGimbalListRequest\032%."
    "mavsdk.rpc.gimbal.GimbalListResponse\"\0000\001"
    "\022|\n\026SubscribeControlStatus\0220.mavsdk.rpc."
    "gimbal.SubscribeControlStatusRequest\032(.m"
    "avsdk.rpc.gimbal.ControlStatusResponse\"\004"
    "\200\265\030\0000\001\022q\n\020GetControlStatus\022*.mavsdk.rpc."
    "gimbal.GetControlStatusRequest\032+.mavsdk."
    "rpc.gimbal.GetControlStatusResponse\"\004\200\265\030"
    "\001\022m\n\021SubscribeAttitude\022+.mavsdk.rpc.gimb"
    "al.SubscribeAttitudeRequest\032#.mavsdk.rpc"
    ".gimbal.AttitudeResponse\"\004\200\265\030\0000\001\022b\n\013GetA"
    "ttitude\022%.mavsdk.rpc.gimbal.GetAttitudeR"
    "equest\032&.mavsdk.rpc.gimbal.GetAttitudeRe"
    "sponse\"\004\200\265\030\001B\037\n\020io.mavsdk.gimbalB\013Gimbal"
    "Protob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_gimbal_2fgimbal_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_gimbal_2fgimbal_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_gimbal_2fgimbal_2eproto = {
    false,
    false,
    4493,
    descriptor_table_protodef_gimbal_2fgimbal_2eproto,
    "gimbal/gimbal.proto",
    &descriptor_table_gimbal_2fgimbal_2eproto_once,
    descriptor_table_gimbal_2fgimbal_2eproto_deps,
    1,
    28,
    schemas,
    file_default_instances,
    TableStruct_gimbal_2fgimbal_2eproto::offsets,
    file_level_enum_descriptors_gimbal_2fgimbal_2eproto,
    file_level_service_descriptors_gimbal_2fgimbal_2eproto,
};
namespace mavsdk {
namespace rpc {
namespace gimbal {
const ::google::protobuf::EnumDescriptor* GimbalResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gimbal_2fgimbal_2eproto);
  return file_level_enum_descriptors_gimbal_2fgimbal_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GimbalResult_Result_internal_data_[] = {
    458752u, 0u, };
bool GimbalResult_Result_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GimbalResult_Result GimbalResult::RESULT_UNKNOWN;
constexpr GimbalResult_Result GimbalResult::RESULT_SUCCESS;
constexpr GimbalResult_Result GimbalResult::RESULT_ERROR;
constexpr GimbalResult_Result GimbalResult::RESULT_TIMEOUT;
constexpr GimbalResult_Result GimbalResult::RESULT_UNSUPPORTED;
constexpr GimbalResult_Result GimbalResult::RESULT_NO_SYSTEM;
constexpr GimbalResult_Result GimbalResult::RESULT_INVALID_ARGUMENT;
constexpr GimbalResult_Result GimbalResult::Result_MIN;
constexpr GimbalResult_Result GimbalResult::Result_MAX;
constexpr int GimbalResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GimbalMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gimbal_2fgimbal_2eproto);
  return file_level_enum_descriptors_gimbal_2fgimbal_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t GimbalMode_internal_data_[] = {
    131072u, 0u, };
bool GimbalMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* ControlMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gimbal_2fgimbal_2eproto);
  return file_level_enum_descriptors_gimbal_2fgimbal_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ControlMode_internal_data_[] = {
    196608u, 0u, };
bool ControlMode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* SendMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gimbal_2fgimbal_2eproto);
  return file_level_enum_descriptors_gimbal_2fgimbal_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t SendMode_internal_data_[] = {
    131072u, 0u, };
bool SendMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class SetAnglesRequest::_Internal {
 public:
};

SetAnglesRequest::SetAnglesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SetAnglesRequest)
}
SetAnglesRequest::SetAnglesRequest(
    ::google::protobuf::Arena* arena, const SetAnglesRequest& from)
    : SetAnglesRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAnglesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAnglesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_id_),
           0,
           offsetof(Impl_, send_mode_) -
               offsetof(Impl_, gimbal_id_) +
               sizeof(Impl_::send_mode_));
}
SetAnglesRequest::~SetAnglesRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.SetAnglesRequest)
  SharedDtor(*this);
}
inline void SetAnglesRequest::SharedDtor(MessageLite& self) {
  SetAnglesRequest& this_ = static_cast<SetAnglesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetAnglesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetAnglesRequest(arena);
}
constexpr auto SetAnglesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetAnglesRequest),
                                            alignof(SetAnglesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetAnglesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetAnglesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetAnglesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetAnglesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetAnglesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetAnglesRequest>(), &SetAnglesRequest::ByteSizeLong,
            &SetAnglesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_._cached_size_),
        false,
    },
    &SetAnglesRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetAnglesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> SetAnglesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SetAnglesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAnglesRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.gimbal_id_)}},
    // float roll_deg = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.roll_deg_)}},
    // float pitch_deg = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.pitch_deg_)}},
    // float yaw_deg = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.yaw_deg_)}},
    // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAnglesRequest, _impl_.gimbal_mode_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.gimbal_mode_)}},
    // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAnglesRequest, _impl_.send_mode_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.send_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float roll_deg = 2;
    {PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.roll_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_deg = 3;
    {PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.pitch_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 4;
    {PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
    {PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.gimbal_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
    {PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.send_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetAnglesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.SetAnglesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gimbal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.send_mode_) -
      reinterpret_cast<char*>(&_impl_.gimbal_id_)) + sizeof(_impl_.send_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetAnglesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetAnglesRequest& this_ = static_cast<const SetAnglesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetAnglesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetAnglesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.SetAnglesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          // float roll_deg = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_roll_deg(), target);
          }

          // float pitch_deg = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_pitch_deg(), target);
          }

          // float yaw_deg = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_yaw_deg(), target);
          }

          // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
          if (this_._internal_gimbal_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_gimbal_mode(), target);
          }

          // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
          if (this_._internal_send_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_send_mode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.SetAnglesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetAnglesRequest::ByteSizeLong(const MessageLite& base) {
          const SetAnglesRequest& this_ = static_cast<const SetAnglesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetAnglesRequest::ByteSizeLong() const {
          const SetAnglesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.SetAnglesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
            // float roll_deg = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll_deg()) != 0) {
              total_size += 5;
            }
            // float pitch_deg = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_deg()) != 0) {
              total_size += 5;
            }
            // float yaw_deg = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
              total_size += 5;
            }
            // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
            if (this_._internal_gimbal_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_gimbal_mode());
            }
            // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
            if (this_._internal_send_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_send_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetAnglesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetAnglesRequest*>(&to_msg);
  auto& from = static_cast<const SetAnglesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.SetAnglesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_roll_deg()) != 0) {
    _this->_impl_.roll_deg_ = from._impl_.roll_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch_deg()) != 0) {
    _this->_impl_.pitch_deg_ = from._impl_.pitch_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_deg()) != 0) {
    _this->_impl_.yaw_deg_ = from._impl_.yaw_deg_;
  }
  if (from._internal_gimbal_mode() != 0) {
    _this->_impl_.gimbal_mode_ = from._impl_.gimbal_mode_;
  }
  if (from._internal_send_mode() != 0) {
    _this->_impl_.send_mode_ = from._impl_.send_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAnglesRequest::CopyFrom(const SetAnglesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.SetAnglesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetAnglesRequest::InternalSwap(SetAnglesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.send_mode_)
      + sizeof(SetAnglesRequest::_impl_.send_mode_)
      - PROTOBUF_FIELD_OFFSET(SetAnglesRequest, _impl_.gimbal_id_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_id_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_id_));
}

::google::protobuf::Metadata SetAnglesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetAnglesResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetAnglesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetAnglesResponse, _impl_._has_bits_);
};

SetAnglesResponse::SetAnglesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SetAnglesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAnglesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::SetAnglesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAnglesResponse::SetAnglesResponse(
    ::google::protobuf::Arena* arena,
    const SetAnglesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetAnglesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.SetAnglesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAnglesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAnglesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_result_ = {};
}
SetAnglesResponse::~SetAnglesResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.SetAnglesResponse)
  SharedDtor(*this);
}
inline void SetAnglesResponse::SharedDtor(MessageLite& self) {
  SetAnglesResponse& this_ = static_cast<SetAnglesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  this_._impl_.~Impl_();
}

inline void* SetAnglesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetAnglesResponse(arena);
}
constexpr auto SetAnglesResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetAnglesResponse),
                                            alignof(SetAnglesResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetAnglesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetAnglesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetAnglesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetAnglesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetAnglesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetAnglesResponse>(), &SetAnglesResponse::ByteSizeLong,
            &SetAnglesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetAnglesResponse, _impl_._cached_size_),
        false,
    },
    &SetAnglesResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetAnglesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAnglesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAnglesResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SetAnglesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAnglesResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAnglesResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetAnglesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.SetAnglesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
    _impl_.gimbal_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetAnglesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetAnglesResponse& this_ = static_cast<const SetAnglesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetAnglesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetAnglesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.SetAnglesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.SetAnglesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetAnglesResponse::ByteSizeLong(const MessageLite& base) {
          const SetAnglesResponse& this_ = static_cast<const SetAnglesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetAnglesResponse::ByteSizeLong() const {
          const SetAnglesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.SetAnglesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetAnglesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetAnglesResponse*>(&to_msg);
  auto& from = static_cast<const SetAnglesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.SetAnglesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
    if (_this->_impl_.gimbal_result_ == nullptr) {
      _this->_impl_.gimbal_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
    } else {
      _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAnglesResponse::CopyFrom(const SetAnglesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.SetAnglesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetAnglesResponse::InternalSwap(SetAnglesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gimbal_result_, other->_impl_.gimbal_result_);
}

::google::protobuf::Metadata SetAnglesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetAngularRatesRequest::_Internal {
 public:
};

SetAngularRatesRequest::SetAngularRatesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SetAngularRatesRequest)
}
SetAngularRatesRequest::SetAngularRatesRequest(
    ::google::protobuf::Arena* arena, const SetAngularRatesRequest& from)
    : SetAngularRatesRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAngularRatesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAngularRatesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_id_),
           0,
           offsetof(Impl_, send_mode_) -
               offsetof(Impl_, gimbal_id_) +
               sizeof(Impl_::send_mode_));
}
SetAngularRatesRequest::~SetAngularRatesRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.SetAngularRatesRequest)
  SharedDtor(*this);
}
inline void SetAngularRatesRequest::SharedDtor(MessageLite& self) {
  SetAngularRatesRequest& this_ = static_cast<SetAngularRatesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetAngularRatesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetAngularRatesRequest(arena);
}
constexpr auto SetAngularRatesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetAngularRatesRequest),
                                            alignof(SetAngularRatesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetAngularRatesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetAngularRatesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetAngularRatesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetAngularRatesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetAngularRatesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetAngularRatesRequest>(), &SetAngularRatesRequest::ByteSizeLong,
            &SetAngularRatesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_._cached_size_),
        false,
    },
    &SetAngularRatesRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetAngularRatesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> SetAngularRatesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SetAngularRatesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAngularRatesRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.gimbal_id_)}},
    // float roll_rate_deg_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.roll_rate_deg_s_)}},
    // float pitch_rate_deg_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.pitch_rate_deg_s_)}},
    // float yaw_rate_deg_s = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.yaw_rate_deg_s_)}},
    // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAngularRatesRequest, _impl_.gimbal_mode_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.gimbal_mode_)}},
    // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAngularRatesRequest, _impl_.send_mode_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.send_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float roll_rate_deg_s = 2;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.roll_rate_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_rate_deg_s = 3;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.pitch_rate_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_rate_deg_s = 4;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.yaw_rate_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.gimbal_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.send_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetAngularRatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.SetAngularRatesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gimbal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.send_mode_) -
      reinterpret_cast<char*>(&_impl_.gimbal_id_)) + sizeof(_impl_.send_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetAngularRatesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetAngularRatesRequest& this_ = static_cast<const SetAngularRatesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetAngularRatesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetAngularRatesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.SetAngularRatesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          // float roll_rate_deg_s = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll_rate_deg_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_roll_rate_deg_s(), target);
          }

          // float pitch_rate_deg_s = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_rate_deg_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_pitch_rate_deg_s(), target);
          }

          // float yaw_rate_deg_s = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_rate_deg_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_yaw_rate_deg_s(), target);
          }

          // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
          if (this_._internal_gimbal_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_gimbal_mode(), target);
          }

          // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
          if (this_._internal_send_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_send_mode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.SetAngularRatesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetAngularRatesRequest::ByteSizeLong(const MessageLite& base) {
          const SetAngularRatesRequest& this_ = static_cast<const SetAngularRatesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetAngularRatesRequest::ByteSizeLong() const {
          const SetAngularRatesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.SetAngularRatesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
            // float roll_rate_deg_s = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll_rate_deg_s()) != 0) {
              total_size += 5;
            }
            // float pitch_rate_deg_s = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_rate_deg_s()) != 0) {
              total_size += 5;
            }
            // float yaw_rate_deg_s = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_rate_deg_s()) != 0) {
              total_size += 5;
            }
            // .mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 5;
            if (this_._internal_gimbal_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_gimbal_mode());
            }
            // .mavsdk.rpc.gimbal.SendMode send_mode = 6;
            if (this_._internal_send_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_send_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetAngularRatesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetAngularRatesRequest*>(&to_msg);
  auto& from = static_cast<const SetAngularRatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.SetAngularRatesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_roll_rate_deg_s()) != 0) {
    _this->_impl_.roll_rate_deg_s_ = from._impl_.roll_rate_deg_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch_rate_deg_s()) != 0) {
    _this->_impl_.pitch_rate_deg_s_ = from._impl_.pitch_rate_deg_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_rate_deg_s()) != 0) {
    _this->_impl_.yaw_rate_deg_s_ = from._impl_.yaw_rate_deg_s_;
  }
  if (from._internal_gimbal_mode() != 0) {
    _this->_impl_.gimbal_mode_ = from._impl_.gimbal_mode_;
  }
  if (from._internal_send_mode() != 0) {
    _this->_impl_.send_mode_ = from._impl_.send_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAngularRatesRequest::CopyFrom(const SetAngularRatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.SetAngularRatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetAngularRatesRequest::InternalSwap(SetAngularRatesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.send_mode_)
      + sizeof(SetAngularRatesRequest::_impl_.send_mode_)
      - PROTOBUF_FIELD_OFFSET(SetAngularRatesRequest, _impl_.gimbal_id_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_id_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_id_));
}

::google::protobuf::Metadata SetAngularRatesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetAngularRatesResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetAngularRatesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetAngularRatesResponse, _impl_._has_bits_);
};

SetAngularRatesResponse::SetAngularRatesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SetAngularRatesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAngularRatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::SetAngularRatesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAngularRatesResponse::SetAngularRatesResponse(
    ::google::protobuf::Arena* arena,
    const SetAngularRatesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetAngularRatesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.SetAngularRatesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAngularRatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAngularRatesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_result_ = {};
}
SetAngularRatesResponse::~SetAngularRatesResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.SetAngularRatesResponse)
  SharedDtor(*this);
}
inline void SetAngularRatesResponse::SharedDtor(MessageLite& self) {
  SetAngularRatesResponse& this_ = static_cast<SetAngularRatesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  this_._impl_.~Impl_();
}

inline void* SetAngularRatesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetAngularRatesResponse(arena);
}
constexpr auto SetAngularRatesResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetAngularRatesResponse),
                                            alignof(SetAngularRatesResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetAngularRatesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetAngularRatesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetAngularRatesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetAngularRatesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetAngularRatesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetAngularRatesResponse>(), &SetAngularRatesResponse::ByteSizeLong,
            &SetAngularRatesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetAngularRatesResponse, _impl_._cached_size_),
        false,
    },
    &SetAngularRatesResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetAngularRatesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAngularRatesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAngularRatesResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SetAngularRatesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAngularRatesResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAngularRatesResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetAngularRatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.SetAngularRatesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
    _impl_.gimbal_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetAngularRatesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetAngularRatesResponse& this_ = static_cast<const SetAngularRatesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetAngularRatesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetAngularRatesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.SetAngularRatesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.SetAngularRatesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetAngularRatesResponse::ByteSizeLong(const MessageLite& base) {
          const SetAngularRatesResponse& this_ = static_cast<const SetAngularRatesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetAngularRatesResponse::ByteSizeLong() const {
          const SetAngularRatesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.SetAngularRatesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetAngularRatesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetAngularRatesResponse*>(&to_msg);
  auto& from = static_cast<const SetAngularRatesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.SetAngularRatesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
    if (_this->_impl_.gimbal_result_ == nullptr) {
      _this->_impl_.gimbal_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
    } else {
      _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAngularRatesResponse::CopyFrom(const SetAngularRatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.SetAngularRatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetAngularRatesResponse::InternalSwap(SetAngularRatesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gimbal_result_, other->_impl_.gimbal_result_);
}

::google::protobuf::Metadata SetAngularRatesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRoiLocationRequest::_Internal {
 public:
};

SetRoiLocationRequest::SetRoiLocationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SetRoiLocationRequest)
}
SetRoiLocationRequest::SetRoiLocationRequest(
    ::google::protobuf::Arena* arena, const SetRoiLocationRequest& from)
    : SetRoiLocationRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRoiLocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRoiLocationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, longitude_deg_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::longitude_deg_));
}
SetRoiLocationRequest::~SetRoiLocationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.SetRoiLocationRequest)
  SharedDtor(*this);
}
inline void SetRoiLocationRequest::SharedDtor(MessageLite& self) {
  SetRoiLocationRequest& this_ = static_cast<SetRoiLocationRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRoiLocationRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRoiLocationRequest(arena);
}
constexpr auto SetRoiLocationRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRoiLocationRequest),
                                            alignof(SetRoiLocationRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRoiLocationRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRoiLocationRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRoiLocationRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRoiLocationRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRoiLocationRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRoiLocationRequest>(), &SetRoiLocationRequest::ByteSizeLong,
            &SetRoiLocationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_._cached_size_),
        false,
    },
    &SetRoiLocationRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRoiLocationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> SetRoiLocationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SetRoiLocationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float altitude_m = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.altitude_m_)}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetRoiLocationRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.gimbal_id_)}},
    // double latitude_deg = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.latitude_deg_)}},
    // double longitude_deg = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.longitude_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double latitude_deg = 2;
    {PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 3;
    {PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float altitude_m = 4;
    {PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRoiLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.SetRoiLocationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.longitude_deg_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.longitude_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRoiLocationRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRoiLocationRequest& this_ = static_cast<const SetRoiLocationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRoiLocationRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRoiLocationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.SetRoiLocationRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          // double latitude_deg = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_latitude_deg(), target);
          }

          // double longitude_deg = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_longitude_deg(), target);
          }

          // float altitude_m = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_altitude_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.SetRoiLocationRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRoiLocationRequest::ByteSizeLong(const MessageLite& base) {
          const SetRoiLocationRequest& this_ = static_cast<const SetRoiLocationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRoiLocationRequest::ByteSizeLong() const {
          const SetRoiLocationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.SetRoiLocationRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double latitude_deg = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
              total_size += 9;
            }
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
            // float altitude_m = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_m()) != 0) {
              total_size += 5;
            }
            // double longitude_deg = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRoiLocationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRoiLocationRequest*>(&to_msg);
  auto& from = static_cast<const SetRoiLocationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.SetRoiLocationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_latitude_deg()) != 0) {
    _this->_impl_.latitude_deg_ = from._impl_.latitude_deg_;
  }
  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_m()) != 0) {
    _this->_impl_.altitude_m_ = from._impl_.altitude_m_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude_deg()) != 0) {
    _this->_impl_.longitude_deg_ = from._impl_.longitude_deg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRoiLocationRequest::CopyFrom(const SetRoiLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.SetRoiLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRoiLocationRequest::InternalSwap(SetRoiLocationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.longitude_deg_)
      + sizeof(SetRoiLocationRequest::_impl_.longitude_deg_)
      - PROTOBUF_FIELD_OFFSET(SetRoiLocationRequest, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata SetRoiLocationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRoiLocationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRoiLocationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRoiLocationResponse, _impl_._has_bits_);
};

SetRoiLocationResponse::SetRoiLocationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SetRoiLocationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRoiLocationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::SetRoiLocationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRoiLocationResponse::SetRoiLocationResponse(
    ::google::protobuf::Arena* arena,
    const SetRoiLocationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRoiLocationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.SetRoiLocationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRoiLocationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRoiLocationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_result_ = {};
}
SetRoiLocationResponse::~SetRoiLocationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.SetRoiLocationResponse)
  SharedDtor(*this);
}
inline void SetRoiLocationResponse::SharedDtor(MessageLite& self) {
  SetRoiLocationResponse& this_ = static_cast<SetRoiLocationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  this_._impl_.~Impl_();
}

inline void* SetRoiLocationResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRoiLocationResponse(arena);
}
constexpr auto SetRoiLocationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRoiLocationResponse),
                                            alignof(SetRoiLocationResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRoiLocationResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRoiLocationResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRoiLocationResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRoiLocationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRoiLocationResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRoiLocationResponse>(), &SetRoiLocationResponse::ByteSizeLong,
            &SetRoiLocationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRoiLocationResponse, _impl_._cached_size_),
        false,
    },
    &SetRoiLocationResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRoiLocationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRoiLocationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRoiLocationResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SetRoiLocationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRoiLocationResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRoiLocationResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRoiLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.SetRoiLocationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
    _impl_.gimbal_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRoiLocationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRoiLocationResponse& this_ = static_cast<const SetRoiLocationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRoiLocationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRoiLocationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.SetRoiLocationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.SetRoiLocationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRoiLocationResponse::ByteSizeLong(const MessageLite& base) {
          const SetRoiLocationResponse& this_ = static_cast<const SetRoiLocationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRoiLocationResponse::ByteSizeLong() const {
          const SetRoiLocationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.SetRoiLocationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRoiLocationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRoiLocationResponse*>(&to_msg);
  auto& from = static_cast<const SetRoiLocationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.SetRoiLocationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
    if (_this->_impl_.gimbal_result_ == nullptr) {
      _this->_impl_.gimbal_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
    } else {
      _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRoiLocationResponse::CopyFrom(const SetRoiLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.SetRoiLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRoiLocationResponse::InternalSwap(SetRoiLocationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gimbal_result_, other->_impl_.gimbal_result_);
}

::google::protobuf::Metadata SetRoiLocationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TakeControlRequest::_Internal {
 public:
};

TakeControlRequest::TakeControlRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.TakeControlRequest)
}
TakeControlRequest::TakeControlRequest(
    ::google::protobuf::Arena* arena, const TakeControlRequest& from)
    : TakeControlRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TakeControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TakeControlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_id_),
           0,
           offsetof(Impl_, control_mode_) -
               offsetof(Impl_, gimbal_id_) +
               sizeof(Impl_::control_mode_));
}
TakeControlRequest::~TakeControlRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.TakeControlRequest)
  SharedDtor(*this);
}
inline void TakeControlRequest::SharedDtor(MessageLite& self) {
  TakeControlRequest& this_ = static_cast<TakeControlRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TakeControlRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TakeControlRequest(arena);
}
constexpr auto TakeControlRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TakeControlRequest),
                                            alignof(TakeControlRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TakeControlRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TakeControlRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TakeControlRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TakeControlRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TakeControlRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TakeControlRequest>(), &TakeControlRequest::ByteSizeLong,
            &TakeControlRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_._cached_size_),
        false,
    },
    &TakeControlRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TakeControlRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TakeControlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::TakeControlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TakeControlRequest, _impl_.control_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_.control_mode_)}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TakeControlRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_.gimbal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
    {PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_.control_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TakeControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.TakeControlRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gimbal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.control_mode_) -
      reinterpret_cast<char*>(&_impl_.gimbal_id_)) + sizeof(_impl_.control_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TakeControlRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TakeControlRequest& this_ = static_cast<const TakeControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TakeControlRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TakeControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.TakeControlRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
          if (this_._internal_control_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_control_mode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.TakeControlRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TakeControlRequest::ByteSizeLong(const MessageLite& base) {
          const TakeControlRequest& this_ = static_cast<const TakeControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TakeControlRequest::ByteSizeLong() const {
          const TakeControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.TakeControlRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
            // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
            if (this_._internal_control_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_control_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TakeControlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TakeControlRequest*>(&to_msg);
  auto& from = static_cast<const TakeControlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.TakeControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  if (from._internal_control_mode() != 0) {
    _this->_impl_.control_mode_ = from._impl_.control_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TakeControlRequest::CopyFrom(const TakeControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.TakeControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TakeControlRequest::InternalSwap(TakeControlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_.control_mode_)
      + sizeof(TakeControlRequest::_impl_.control_mode_)
      - PROTOBUF_FIELD_OFFSET(TakeControlRequest, _impl_.gimbal_id_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_id_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_id_));
}

::google::protobuf::Metadata TakeControlRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TakeControlResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TakeControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TakeControlResponse, _impl_._has_bits_);
};

TakeControlResponse::TakeControlResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.TakeControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE TakeControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::TakeControlResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TakeControlResponse::TakeControlResponse(
    ::google::protobuf::Arena* arena,
    const TakeControlResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TakeControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.TakeControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE TakeControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TakeControlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_result_ = {};
}
TakeControlResponse::~TakeControlResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.TakeControlResponse)
  SharedDtor(*this);
}
inline void TakeControlResponse::SharedDtor(MessageLite& self) {
  TakeControlResponse& this_ = static_cast<TakeControlResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  this_._impl_.~Impl_();
}

inline void* TakeControlResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TakeControlResponse(arena);
}
constexpr auto TakeControlResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TakeControlResponse),
                                            alignof(TakeControlResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TakeControlResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TakeControlResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TakeControlResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TakeControlResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TakeControlResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TakeControlResponse>(), &TakeControlResponse::ByteSizeLong,
            &TakeControlResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TakeControlResponse, _impl_._cached_size_),
        false,
    },
    &TakeControlResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TakeControlResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TakeControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TakeControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::TakeControlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TakeControlResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(TakeControlResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TakeControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.TakeControlResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
    _impl_.gimbal_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TakeControlResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TakeControlResponse& this_ = static_cast<const TakeControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TakeControlResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TakeControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.TakeControlResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.TakeControlResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TakeControlResponse::ByteSizeLong(const MessageLite& base) {
          const TakeControlResponse& this_ = static_cast<const TakeControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TakeControlResponse::ByteSizeLong() const {
          const TakeControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.TakeControlResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TakeControlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TakeControlResponse*>(&to_msg);
  auto& from = static_cast<const TakeControlResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.TakeControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
    if (_this->_impl_.gimbal_result_ == nullptr) {
      _this->_impl_.gimbal_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
    } else {
      _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TakeControlResponse::CopyFrom(const TakeControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.TakeControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TakeControlResponse::InternalSwap(TakeControlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gimbal_result_, other->_impl_.gimbal_result_);
}

::google::protobuf::Metadata TakeControlResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleaseControlRequest::_Internal {
 public:
};

ReleaseControlRequest::ReleaseControlRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.ReleaseControlRequest)
}
ReleaseControlRequest::ReleaseControlRequest(
    ::google::protobuf::Arena* arena, const ReleaseControlRequest& from)
    : ReleaseControlRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReleaseControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReleaseControlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_id_ = {};
}
ReleaseControlRequest::~ReleaseControlRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.ReleaseControlRequest)
  SharedDtor(*this);
}
inline void ReleaseControlRequest::SharedDtor(MessageLite& self) {
  ReleaseControlRequest& this_ = static_cast<ReleaseControlRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReleaseControlRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReleaseControlRequest(arena);
}
constexpr auto ReleaseControlRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReleaseControlRequest),
                                            alignof(ReleaseControlRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReleaseControlRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReleaseControlRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReleaseControlRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReleaseControlRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReleaseControlRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReleaseControlRequest>(), &ReleaseControlRequest::ByteSizeLong,
            &ReleaseControlRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReleaseControlRequest, _impl_._cached_size_),
        false,
    },
    &ReleaseControlRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReleaseControlRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ReleaseControlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::ReleaseControlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReleaseControlRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseControlRequest, _impl_.gimbal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseControlRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ReleaseControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.ReleaseControlRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gimbal_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReleaseControlRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReleaseControlRequest& this_ = static_cast<const ReleaseControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReleaseControlRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReleaseControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.ReleaseControlRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.ReleaseControlRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReleaseControlRequest::ByteSizeLong(const MessageLite& base) {
          const ReleaseControlRequest& this_ = static_cast<const ReleaseControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReleaseControlRequest::ByteSizeLong() const {
          const ReleaseControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.ReleaseControlRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReleaseControlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseControlRequest*>(&to_msg);
  auto& from = static_cast<const ReleaseControlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.ReleaseControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseControlRequest::CopyFrom(const ReleaseControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.ReleaseControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReleaseControlRequest::InternalSwap(ReleaseControlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.gimbal_id_, other->_impl_.gimbal_id_);
}

::google::protobuf::Metadata ReleaseControlRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleaseControlResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ReleaseControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ReleaseControlResponse, _impl_._has_bits_);
};

ReleaseControlResponse::ReleaseControlResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.ReleaseControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE ReleaseControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::ReleaseControlResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ReleaseControlResponse::ReleaseControlResponse(
    ::google::protobuf::Arena* arena,
    const ReleaseControlResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReleaseControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.ReleaseControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE ReleaseControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReleaseControlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_result_ = {};
}
ReleaseControlResponse::~ReleaseControlResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.ReleaseControlResponse)
  SharedDtor(*this);
}
inline void ReleaseControlResponse::SharedDtor(MessageLite& self) {
  ReleaseControlResponse& this_ = static_cast<ReleaseControlResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  this_._impl_.~Impl_();
}

inline void* ReleaseControlResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReleaseControlResponse(arena);
}
constexpr auto ReleaseControlResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReleaseControlResponse),
                                            alignof(ReleaseControlResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReleaseControlResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReleaseControlResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReleaseControlResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReleaseControlResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReleaseControlResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReleaseControlResponse>(), &ReleaseControlResponse::ByteSizeLong,
            &ReleaseControlResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReleaseControlResponse, _impl_._cached_size_),
        false,
    },
    &ReleaseControlResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReleaseControlResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ReleaseControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReleaseControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::ReleaseControlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ReleaseControlResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseControlResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ReleaseControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.ReleaseControlResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
    _impl_.gimbal_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReleaseControlResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReleaseControlResponse& this_ = static_cast<const ReleaseControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReleaseControlResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReleaseControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.ReleaseControlResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.ReleaseControlResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReleaseControlResponse::ByteSizeLong(const MessageLite& base) {
          const ReleaseControlResponse& this_ = static_cast<const ReleaseControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReleaseControlResponse::ByteSizeLong() const {
          const ReleaseControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.ReleaseControlResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReleaseControlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseControlResponse*>(&to_msg);
  auto& from = static_cast<const ReleaseControlResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.ReleaseControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
    if (_this->_impl_.gimbal_result_ == nullptr) {
      _this->_impl_.gimbal_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
    } else {
      _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseControlResponse::CopyFrom(const ReleaseControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.ReleaseControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReleaseControlResponse::InternalSwap(ReleaseControlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gimbal_result_, other->_impl_.gimbal_result_);
}

::google::protobuf::Metadata ReleaseControlResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeControlStatusRequest::_Internal {
 public:
};

SubscribeControlStatusRequest::SubscribeControlStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SubscribeControlStatusRequest)
}
SubscribeControlStatusRequest::SubscribeControlStatusRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeControlStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeControlStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.SubscribeControlStatusRequest)
}

inline void* SubscribeControlStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeControlStatusRequest(arena);
}
constexpr auto SubscribeControlStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeControlStatusRequest),
                                            alignof(SubscribeControlStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeControlStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeControlStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeControlStatusRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeControlStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeControlStatusRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeControlStatusRequest>(), &SubscribeControlStatusRequest::ByteSizeLong,
            &SubscribeControlStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeControlStatusRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeControlStatusRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeControlStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeControlStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SubscribeControlStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeControlStatusRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ControlStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ControlStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ControlStatusResponse, _impl_._has_bits_);
};

ControlStatusResponse::ControlStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.ControlStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControlStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::ControlStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ControlStatusResponse::ControlStatusResponse(
    ::google::protobuf::Arena* arena,
    const ControlStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ControlStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.control_status_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::ControlStatus>(
                              arena, *from._impl_.control_status_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.ControlStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE ControlStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControlStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.control_status_ = {};
}
ControlStatusResponse::~ControlStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.ControlStatusResponse)
  SharedDtor(*this);
}
inline void ControlStatusResponse::SharedDtor(MessageLite& self) {
  ControlStatusResponse& this_ = static_cast<ControlStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.control_status_;
  this_._impl_.~Impl_();
}

inline void* ControlStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ControlStatusResponse(arena);
}
constexpr auto ControlStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ControlStatusResponse),
                                            alignof(ControlStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ControlStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ControlStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ControlStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ControlStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ControlStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ControlStatusResponse>(), &ControlStatusResponse::ByteSizeLong,
            &ControlStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ControlStatusResponse, _impl_._cached_size_),
        false,
    },
    &ControlStatusResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ControlStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ControlStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControlStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::ControlStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.ControlStatus control_status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ControlStatusResponse, _impl_.control_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.ControlStatus control_status = 1;
    {PROTOBUF_FIELD_OFFSET(ControlStatusResponse, _impl_.control_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::ControlStatus>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ControlStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.ControlStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.control_status_ != nullptr);
    _impl_.control_status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ControlStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ControlStatusResponse& this_ = static_cast<const ControlStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ControlStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ControlStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.ControlStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.ControlStatus control_status = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.control_status_, this_._impl_.control_status_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.ControlStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ControlStatusResponse::ByteSizeLong(const MessageLite& base) {
          const ControlStatusResponse& this_ = static_cast<const ControlStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ControlStatusResponse::ByteSizeLong() const {
          const ControlStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.ControlStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.ControlStatus control_status = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.control_status_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ControlStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControlStatusResponse*>(&to_msg);
  auto& from = static_cast<const ControlStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.ControlStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.control_status_ != nullptr);
    if (_this->_impl_.control_status_ == nullptr) {
      _this->_impl_.control_status_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::ControlStatus>(arena, *from._impl_.control_status_);
    } else {
      _this->_impl_.control_status_->MergeFrom(*from._impl_.control_status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlStatusResponse::CopyFrom(const ControlStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.ControlStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControlStatusResponse::InternalSwap(ControlStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.control_status_, other->_impl_.control_status_);
}

::google::protobuf::Metadata ControlStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetControlStatusRequest::_Internal {
 public:
};

GetControlStatusRequest::GetControlStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GetControlStatusRequest)
}
GetControlStatusRequest::GetControlStatusRequest(
    ::google::protobuf::Arena* arena, const GetControlStatusRequest& from)
    : GetControlStatusRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetControlStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetControlStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_id_ = {};
}
GetControlStatusRequest::~GetControlStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GetControlStatusRequest)
  SharedDtor(*this);
}
inline void GetControlStatusRequest::SharedDtor(MessageLite& self) {
  GetControlStatusRequest& this_ = static_cast<GetControlStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetControlStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetControlStatusRequest(arena);
}
constexpr auto GetControlStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetControlStatusRequest),
                                            alignof(GetControlStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetControlStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetControlStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetControlStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetControlStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetControlStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetControlStatusRequest>(), &GetControlStatusRequest::ByteSizeLong,
            &GetControlStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetControlStatusRequest, _impl_._cached_size_),
        false,
    },
    &GetControlStatusRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetControlStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetControlStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GetControlStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetControlStatusRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetControlStatusRequest, _impl_.gimbal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetControlStatusRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetControlStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GetControlStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gimbal_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetControlStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetControlStatusRequest& this_ = static_cast<const GetControlStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetControlStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetControlStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GetControlStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GetControlStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetControlStatusRequest::ByteSizeLong(const MessageLite& base) {
          const GetControlStatusRequest& this_ = static_cast<const GetControlStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetControlStatusRequest::ByteSizeLong() const {
          const GetControlStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GetControlStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetControlStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetControlStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetControlStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GetControlStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetControlStatusRequest::CopyFrom(const GetControlStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GetControlStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetControlStatusRequest::InternalSwap(GetControlStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.gimbal_id_, other->_impl_.gimbal_id_);
}

::google::protobuf::Metadata GetControlStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetControlStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetControlStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_._has_bits_);
};

GetControlStatusResponse::GetControlStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GetControlStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetControlStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::GetControlStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetControlStatusResponse::GetControlStatusResponse(
    ::google::protobuf::Arena* arena,
    const GetControlStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetControlStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;
  _impl_.control_status_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::ControlStatus>(
                              arena, *from._impl_.control_status_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.GetControlStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetControlStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetControlStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_result_),
           0,
           offsetof(Impl_, control_status_) -
               offsetof(Impl_, gimbal_result_) +
               sizeof(Impl_::control_status_));
}
GetControlStatusResponse::~GetControlStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GetControlStatusResponse)
  SharedDtor(*this);
}
inline void GetControlStatusResponse::SharedDtor(MessageLite& self) {
  GetControlStatusResponse& this_ = static_cast<GetControlStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  delete this_._impl_.control_status_;
  this_._impl_.~Impl_();
}

inline void* GetControlStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetControlStatusResponse(arena);
}
constexpr auto GetControlStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetControlStatusResponse),
                                            alignof(GetControlStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetControlStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetControlStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetControlStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetControlStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetControlStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetControlStatusResponse>(), &GetControlStatusResponse::ByteSizeLong,
            &GetControlStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_._cached_size_),
        false,
    },
    &GetControlStatusResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetControlStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetControlStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GetControlStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.ControlStatus control_status = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_.control_status_)}},
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.gimbal.ControlStatus control_status = 2;
    {PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_.control_status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::ControlStatus>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetControlStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GetControlStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
      _impl_.gimbal_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.control_status_ != nullptr);
      _impl_.control_status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetControlStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetControlStatusResponse& this_ = static_cast<const GetControlStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetControlStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetControlStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GetControlStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.gimbal.ControlStatus control_status = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.control_status_, this_._impl_.control_status_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GetControlStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetControlStatusResponse::ByteSizeLong(const MessageLite& base) {
          const GetControlStatusResponse& this_ = static_cast<const GetControlStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetControlStatusResponse::ByteSizeLong() const {
          const GetControlStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GetControlStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
            // .mavsdk.rpc.gimbal.ControlStatus control_status = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.control_status_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetControlStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetControlStatusResponse*>(&to_msg);
  auto& from = static_cast<const GetControlStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GetControlStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
      if (_this->_impl_.gimbal_result_ == nullptr) {
        _this->_impl_.gimbal_result_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
      } else {
        _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.control_status_ != nullptr);
      if (_this->_impl_.control_status_ == nullptr) {
        _this->_impl_.control_status_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::ControlStatus>(arena, *from._impl_.control_status_);
      } else {
        _this->_impl_.control_status_->MergeFrom(*from._impl_.control_status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetControlStatusResponse::CopyFrom(const GetControlStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GetControlStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetControlStatusResponse::InternalSwap(GetControlStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_.control_status_)
      + sizeof(GetControlStatusResponse::_impl_.control_status_)
      - PROTOBUF_FIELD_OFFSET(GetControlStatusResponse, _impl_.gimbal_result_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_result_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_result_));
}

::google::protobuf::Metadata GetControlStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Quaternion::_Internal {
 public:
};

Quaternion::Quaternion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* arena, const Quaternion& from)
    : Quaternion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quaternion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, w_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, w_) +
               sizeof(Impl_::z_));
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.Quaternion)
  SharedDtor(*this);
}
inline void Quaternion::SharedDtor(MessageLite& self) {
  Quaternion& this_ = static_cast<Quaternion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Quaternion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Quaternion(arena);
}
constexpr auto Quaternion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Quaternion),
                                            alignof(Quaternion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Quaternion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Quaternion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Quaternion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Quaternion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Quaternion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Quaternion>(), &Quaternion::ByteSizeLong,
            &Quaternion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._cached_size_),
        false,
    },
    &Quaternion::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Quaternion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Quaternion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::Quaternion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)}},
    // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)}},
    // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)}},
    // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.Quaternion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.w_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.w_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Quaternion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Quaternion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.Quaternion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_w()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_w(), target);
          }

          // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_x(), target);
          }

          // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_y(), target);
          }

          // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.Quaternion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Quaternion::ByteSizeLong(const MessageLite& base) {
          const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Quaternion::ByteSizeLong() const {
          const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.Quaternion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_w()) != 0) {
              total_size += 5;
            }
            // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Quaternion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_w()) != 0) {
    _this->_impl_.w_ = from._impl_.w_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)
      + sizeof(Quaternion::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)>(
          reinterpret_cast<char*>(&_impl_.w_),
          reinterpret_cast<char*>(&other->_impl_.w_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EulerAngle::_Internal {
 public:
};

EulerAngle::EulerAngle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.EulerAngle)
}
EulerAngle::EulerAngle(
    ::google::protobuf::Arena* arena, const EulerAngle& from)
    : EulerAngle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EulerAngle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EulerAngle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_deg_),
           0,
           offsetof(Impl_, yaw_deg_) -
               offsetof(Impl_, roll_deg_) +
               sizeof(Impl_::yaw_deg_));
}
EulerAngle::~EulerAngle() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.EulerAngle)
  SharedDtor(*this);
}
inline void EulerAngle::SharedDtor(MessageLite& self) {
  EulerAngle& this_ = static_cast<EulerAngle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EulerAngle::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EulerAngle(arena);
}
constexpr auto EulerAngle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EulerAngle),
                                            alignof(EulerAngle));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EulerAngle::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EulerAngle_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EulerAngle::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EulerAngle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EulerAngle::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EulerAngle>(), &EulerAngle::ByteSizeLong,
            &EulerAngle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_._cached_size_),
        false,
    },
    &EulerAngle::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EulerAngle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> EulerAngle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::EulerAngle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_)}},
    // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.pitch_deg_)}},
    // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.pitch_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EulerAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.EulerAngle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_deg_) -
      reinterpret_cast<char*>(&_impl_.roll_deg_)) + sizeof(_impl_.yaw_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EulerAngle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EulerAngle& this_ = static_cast<const EulerAngle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EulerAngle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EulerAngle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.EulerAngle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_roll_deg(), target);
          }

          // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_pitch_deg(), target);
          }

          // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_yaw_deg(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.EulerAngle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EulerAngle::ByteSizeLong(const MessageLite& base) {
          const EulerAngle& this_ = static_cast<const EulerAngle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EulerAngle::ByteSizeLong() const {
          const EulerAngle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.EulerAngle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll_deg()) != 0) {
              total_size += 5;
            }
            // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_deg()) != 0) {
              total_size += 5;
            }
            // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EulerAngle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EulerAngle*>(&to_msg);
  auto& from = static_cast<const EulerAngle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.EulerAngle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_roll_deg()) != 0) {
    _this->_impl_.roll_deg_ = from._impl_.roll_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch_deg()) != 0) {
    _this->_impl_.pitch_deg_ = from._impl_.pitch_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_deg()) != 0) {
    _this->_impl_.yaw_deg_ = from._impl_.yaw_deg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EulerAngle::CopyFrom(const EulerAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.EulerAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EulerAngle::InternalSwap(EulerAngle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_)
      + sizeof(EulerAngle::_impl_.yaw_deg_)
      - PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_)>(
          reinterpret_cast<char*>(&_impl_.roll_deg_),
          reinterpret_cast<char*>(&other->_impl_.roll_deg_));
}

::google::protobuf::Metadata EulerAngle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AngularVelocityBody::_Internal {
 public:
};

AngularVelocityBody::AngularVelocityBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.AngularVelocityBody)
}
AngularVelocityBody::AngularVelocityBody(
    ::google::protobuf::Arena* arena, const AngularVelocityBody& from)
    : AngularVelocityBody(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AngularVelocityBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AngularVelocityBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_rad_s_),
           0,
           offsetof(Impl_, yaw_rad_s_) -
               offsetof(Impl_, roll_rad_s_) +
               sizeof(Impl_::yaw_rad_s_));
}
AngularVelocityBody::~AngularVelocityBody() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.AngularVelocityBody)
  SharedDtor(*this);
}
inline void AngularVelocityBody::SharedDtor(MessageLite& self) {
  AngularVelocityBody& this_ = static_cast<AngularVelocityBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AngularVelocityBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AngularVelocityBody(arena);
}
constexpr auto AngularVelocityBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AngularVelocityBody),
                                            alignof(AngularVelocityBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AngularVelocityBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AngularVelocityBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AngularVelocityBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AngularVelocityBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AngularVelocityBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AngularVelocityBody>(), &AngularVelocityBody::ByteSizeLong,
            &AngularVelocityBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_._cached_size_),
        false,
    },
    &AngularVelocityBody::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AngularVelocityBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AngularVelocityBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::AngularVelocityBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.roll_rad_s_)}},
    // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.pitch_rad_s_)}},
    // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.yaw_rad_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.roll_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.pitch_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.yaw_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AngularVelocityBody::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.AngularVelocityBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_rad_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_rad_s_) -
      reinterpret_cast<char*>(&_impl_.roll_rad_s_)) + sizeof(_impl_.yaw_rad_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AngularVelocityBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AngularVelocityBody& this_ = static_cast<const AngularVelocityBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AngularVelocityBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AngularVelocityBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.AngularVelocityBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_roll_rad_s(), target);
          }

          // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_pitch_rad_s(), target);
          }

          // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_yaw_rad_s(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.AngularVelocityBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AngularVelocityBody::ByteSizeLong(const MessageLite& base) {
          const AngularVelocityBody& this_ = static_cast<const AngularVelocityBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AngularVelocityBody::ByteSizeLong() const {
          const AngularVelocityBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.AngularVelocityBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll_rad_s()) != 0) {
              total_size += 5;
            }
            // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_rad_s()) != 0) {
              total_size += 5;
            }
            // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_rad_s()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AngularVelocityBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AngularVelocityBody*>(&to_msg);
  auto& from = static_cast<const AngularVelocityBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.AngularVelocityBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_roll_rad_s()) != 0) {
    _this->_impl_.roll_rad_s_ = from._impl_.roll_rad_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch_rad_s()) != 0) {
    _this->_impl_.pitch_rad_s_ = from._impl_.pitch_rad_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_rad_s()) != 0) {
    _this->_impl_.yaw_rad_s_ = from._impl_.yaw_rad_s_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AngularVelocityBody::CopyFrom(const AngularVelocityBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.AngularVelocityBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AngularVelocityBody::InternalSwap(AngularVelocityBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.yaw_rad_s_)
      + sizeof(AngularVelocityBody::_impl_.yaw_rad_s_)
      - PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.roll_rad_s_)>(
          reinterpret_cast<char*>(&_impl_.roll_rad_s_),
          reinterpret_cast<char*>(&other->_impl_.roll_rad_s_));
}

::google::protobuf::Metadata AngularVelocityBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Attitude::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Attitude>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Attitude, _impl_._has_bits_);
};

Attitude::Attitude(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.Attitude)
}
inline PROTOBUF_NDEBUG_INLINE Attitude::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::Attitude& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Attitude::Attitude(
    ::google::protobuf::Arena* arena,
    const Attitude& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Attitude* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.euler_angle_forward_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::EulerAngle>(
                              arena, *from._impl_.euler_angle_forward_)
                        : nullptr;
  _impl_.quaternion_forward_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Quaternion>(
                              arena, *from._impl_.quaternion_forward_)
                        : nullptr;
  _impl_.euler_angle_north_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::EulerAngle>(
                              arena, *from._impl_.euler_angle_north_)
                        : nullptr;
  _impl_.quaternion_north_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Quaternion>(
                              arena, *from._impl_.quaternion_north_)
                        : nullptr;
  _impl_.angular_velocity_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::AngularVelocityBody>(
                              arena, *from._impl_.angular_velocity_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_us_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_us_),
           offsetof(Impl_, gimbal_id_) -
               offsetof(Impl_, timestamp_us_) +
               sizeof(Impl_::gimbal_id_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.Attitude)
}
inline PROTOBUF_NDEBUG_INLINE Attitude::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Attitude::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, euler_angle_forward_),
           0,
           offsetof(Impl_, gimbal_id_) -
               offsetof(Impl_, euler_angle_forward_) +
               sizeof(Impl_::gimbal_id_));
}
Attitude::~Attitude() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.Attitude)
  SharedDtor(*this);
}
inline void Attitude::SharedDtor(MessageLite& self) {
  Attitude& this_ = static_cast<Attitude&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.euler_angle_forward_;
  delete this_._impl_.quaternion_forward_;
  delete this_._impl_.euler_angle_north_;
  delete this_._impl_.quaternion_north_;
  delete this_._impl_.angular_velocity_;
  this_._impl_.~Impl_();
}

inline void* Attitude::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Attitude(arena);
}
constexpr auto Attitude::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Attitude),
                                            alignof(Attitude));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Attitude::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Attitude_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Attitude::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Attitude>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Attitude::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Attitude>(), &Attitude::ByteSizeLong,
            &Attitude::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Attitude, _impl_._cached_size_),
        false,
    },
    &Attitude::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Attitude::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 5, 0, 2> Attitude::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Attitude, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::Attitude>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Attitude, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.gimbal_id_)}},
    // .mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.euler_angle_forward_)}},
    // .mavsdk.rpc.gimbal.Quaternion quaternion_forward = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.quaternion_forward_)}},
    // .mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.euler_angle_north_)}},
    // .mavsdk.rpc.gimbal.Quaternion quaternion_north = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.quaternion_north_)}},
    // .mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.angular_velocity_)}},
    // uint64 timestamp_us = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Attitude, _impl_.timestamp_us_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.timestamp_us_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.gimbal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 2;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.euler_angle_forward_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.gimbal.Quaternion quaternion_forward = 3;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.quaternion_forward_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 4;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.euler_angle_north_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.gimbal.Quaternion quaternion_north = 5;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.quaternion_north_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 6;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.angular_velocity_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 timestamp_us = 7;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.timestamp_us_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::EulerAngle>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::Quaternion>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::EulerAngle>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::Quaternion>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::AngularVelocityBody>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Attitude::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.Attitude)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.euler_angle_forward_ != nullptr);
      _impl_.euler_angle_forward_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.quaternion_forward_ != nullptr);
      _impl_.quaternion_forward_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.euler_angle_north_ != nullptr);
      _impl_.euler_angle_north_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.quaternion_north_ != nullptr);
      _impl_.quaternion_north_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.angular_velocity_ != nullptr);
      _impl_.angular_velocity_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_us_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gimbal_id_) -
      reinterpret_cast<char*>(&_impl_.timestamp_us_)) + sizeof(_impl_.gimbal_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Attitude::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Attitude& this_ = static_cast<const Attitude&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Attitude::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Attitude& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.Attitude)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.euler_angle_forward_, this_._impl_.euler_angle_forward_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.gimbal.Quaternion quaternion_forward = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.quaternion_forward_, this_._impl_.quaternion_forward_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.euler_angle_north_, this_._impl_.euler_angle_north_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.gimbal.Quaternion quaternion_north = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.quaternion_north_, this_._impl_.quaternion_north_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 6;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.angular_velocity_, this_._impl_.angular_velocity_->GetCachedSize(), target,
                stream);
          }

          // uint64 timestamp_us = 7;
          if (this_._internal_timestamp_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_timestamp_us(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.Attitude)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Attitude::ByteSizeLong(const MessageLite& base) {
          const Attitude& this_ = static_cast<const Attitude&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Attitude::ByteSizeLong() const {
          const Attitude& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.Attitude)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.euler_angle_forward_);
            }
            // .mavsdk.rpc.gimbal.Quaternion quaternion_forward = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quaternion_forward_);
            }
            // .mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.euler_angle_north_);
            }
            // .mavsdk.rpc.gimbal.Quaternion quaternion_north = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quaternion_north_);
            }
            // .mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 6;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angular_velocity_);
            }
          }
           {
            // uint64 timestamp_us = 7;
            if (this_._internal_timestamp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_us());
            }
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Attitude::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Attitude*>(&to_msg);
  auto& from = static_cast<const Attitude&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.Attitude)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.euler_angle_forward_ != nullptr);
      if (_this->_impl_.euler_angle_forward_ == nullptr) {
        _this->_impl_.euler_angle_forward_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::EulerAngle>(arena, *from._impl_.euler_angle_forward_);
      } else {
        _this->_impl_.euler_angle_forward_->MergeFrom(*from._impl_.euler_angle_forward_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.quaternion_forward_ != nullptr);
      if (_this->_impl_.quaternion_forward_ == nullptr) {
        _this->_impl_.quaternion_forward_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Quaternion>(arena, *from._impl_.quaternion_forward_);
      } else {
        _this->_impl_.quaternion_forward_->MergeFrom(*from._impl_.quaternion_forward_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.euler_angle_north_ != nullptr);
      if (_this->_impl_.euler_angle_north_ == nullptr) {
        _this->_impl_.euler_angle_north_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::EulerAngle>(arena, *from._impl_.euler_angle_north_);
      } else {
        _this->_impl_.euler_angle_north_->MergeFrom(*from._impl_.euler_angle_north_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.quaternion_north_ != nullptr);
      if (_this->_impl_.quaternion_north_ == nullptr) {
        _this->_impl_.quaternion_north_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Quaternion>(arena, *from._impl_.quaternion_north_);
      } else {
        _this->_impl_.quaternion_north_->MergeFrom(*from._impl_.quaternion_north_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.angular_velocity_ != nullptr);
      if (_this->_impl_.angular_velocity_ == nullptr) {
        _this->_impl_.angular_velocity_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::AngularVelocityBody>(arena, *from._impl_.angular_velocity_);
      } else {
        _this->_impl_.angular_velocity_->MergeFrom(*from._impl_.angular_velocity_);
      }
    }
  }
  if (from._internal_timestamp_us() != 0) {
    _this->_impl_.timestamp_us_ = from._impl_.timestamp_us_;
  }
  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Attitude::CopyFrom(const Attitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.Attitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Attitude::InternalSwap(Attitude* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Attitude, _impl_.gimbal_id_)
      + sizeof(Attitude::_impl_.gimbal_id_)
      - PROTOBUF_FIELD_OFFSET(Attitude, _impl_.euler_angle_forward_)>(
          reinterpret_cast<char*>(&_impl_.euler_angle_forward_),
          reinterpret_cast<char*>(&other->_impl_.euler_angle_forward_));
}

::google::protobuf::Metadata Attitude::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeAttitudeRequest::_Internal {
 public:
};

SubscribeAttitudeRequest::SubscribeAttitudeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
}
SubscribeAttitudeRequest::SubscribeAttitudeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeAttitudeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeAttitudeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
}

inline void* SubscribeAttitudeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeAttitudeRequest(arena);
}
constexpr auto SubscribeAttitudeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeAttitudeRequest),
                                            alignof(SubscribeAttitudeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeAttitudeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeAttitudeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeAttitudeRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeAttitudeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeAttitudeRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeAttitudeRequest>(), &SubscribeAttitudeRequest::ByteSizeLong,
            &SubscribeAttitudeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeAttitudeRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeAttitudeRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeAttitudeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeAttitudeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SubscribeAttitudeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeAttitudeRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AttitudeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AttitudeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AttitudeResponse, _impl_._has_bits_);
};

AttitudeResponse::AttitudeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.AttitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::AttitudeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AttitudeResponse::AttitudeResponse(
    ::google::protobuf::Arena* arena,
    const AttitudeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AttitudeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attitude_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Attitude>(
                              arena, *from._impl_.attitude_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.AttitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AttitudeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attitude_ = {};
}
AttitudeResponse::~AttitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.AttitudeResponse)
  SharedDtor(*this);
}
inline void AttitudeResponse::SharedDtor(MessageLite& self) {
  AttitudeResponse& this_ = static_cast<AttitudeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.attitude_;
  this_._impl_.~Impl_();
}

inline void* AttitudeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AttitudeResponse(arena);
}
constexpr auto AttitudeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AttitudeResponse),
                                            alignof(AttitudeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AttitudeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AttitudeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AttitudeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AttitudeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AttitudeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AttitudeResponse>(), &AttitudeResponse::ByteSizeLong,
            &AttitudeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AttitudeResponse, _impl_._cached_size_),
        false,
    },
    &AttitudeResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AttitudeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AttitudeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttitudeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::AttitudeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.Attitude attitude = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttitudeResponse, _impl_.attitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.Attitude attitude = 1;
    {PROTOBUF_FIELD_OFFSET(AttitudeResponse, _impl_.attitude_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::Attitude>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AttitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.AttitudeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.attitude_ != nullptr);
    _impl_.attitude_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AttitudeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AttitudeResponse& this_ = static_cast<const AttitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AttitudeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AttitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.AttitudeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.Attitude attitude = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.attitude_, this_._impl_.attitude_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.AttitudeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AttitudeResponse::ByteSizeLong(const MessageLite& base) {
          const AttitudeResponse& this_ = static_cast<const AttitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AttitudeResponse::ByteSizeLong() const {
          const AttitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.AttitudeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.Attitude attitude = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attitude_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AttitudeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AttitudeResponse*>(&to_msg);
  auto& from = static_cast<const AttitudeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.AttitudeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.attitude_ != nullptr);
    if (_this->_impl_.attitude_ == nullptr) {
      _this->_impl_.attitude_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Attitude>(arena, *from._impl_.attitude_);
    } else {
      _this->_impl_.attitude_->MergeFrom(*from._impl_.attitude_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttitudeResponse::CopyFrom(const AttitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.AttitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttitudeResponse::InternalSwap(AttitudeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.attitude_, other->_impl_.attitude_);
}

::google::protobuf::Metadata AttitudeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetAttitudeRequest::_Internal {
 public:
};

GetAttitudeRequest::GetAttitudeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GetAttitudeRequest)
}
GetAttitudeRequest::GetAttitudeRequest(
    ::google::protobuf::Arena* arena, const GetAttitudeRequest& from)
    : GetAttitudeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetAttitudeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetAttitudeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_id_ = {};
}
GetAttitudeRequest::~GetAttitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GetAttitudeRequest)
  SharedDtor(*this);
}
inline void GetAttitudeRequest::SharedDtor(MessageLite& self) {
  GetAttitudeRequest& this_ = static_cast<GetAttitudeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetAttitudeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetAttitudeRequest(arena);
}
constexpr auto GetAttitudeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetAttitudeRequest),
                                            alignof(GetAttitudeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetAttitudeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetAttitudeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetAttitudeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetAttitudeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetAttitudeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetAttitudeRequest>(), &GetAttitudeRequest::ByteSizeLong,
            &GetAttitudeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetAttitudeRequest, _impl_._cached_size_),
        false,
    },
    &GetAttitudeRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetAttitudeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetAttitudeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GetAttitudeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetAttitudeRequest, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetAttitudeRequest, _impl_.gimbal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetAttitudeRequest, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetAttitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GetAttitudeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gimbal_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetAttitudeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetAttitudeRequest& this_ = static_cast<const GetAttitudeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetAttitudeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetAttitudeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GetAttitudeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GetAttitudeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetAttitudeRequest::ByteSizeLong(const MessageLite& base) {
          const GetAttitudeRequest& this_ = static_cast<const GetAttitudeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetAttitudeRequest::ByteSizeLong() const {
          const GetAttitudeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GetAttitudeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetAttitudeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAttitudeRequest*>(&to_msg);
  auto& from = static_cast<const GetAttitudeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GetAttitudeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAttitudeRequest::CopyFrom(const GetAttitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GetAttitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetAttitudeRequest::InternalSwap(GetAttitudeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.gimbal_id_, other->_impl_.gimbal_id_);
}

::google::protobuf::Metadata GetAttitudeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetAttitudeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetAttitudeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_._has_bits_);
};

GetAttitudeResponse::GetAttitudeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GetAttitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAttitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::GetAttitudeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetAttitudeResponse::GetAttitudeResponse(
    ::google::protobuf::Arena* arena,
    const GetAttitudeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetAttitudeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(
                              arena, *from._impl_.gimbal_result_)
                        : nullptr;
  _impl_.attitude_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Attitude>(
                              arena, *from._impl_.attitude_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.GetAttitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAttitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetAttitudeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_result_),
           0,
           offsetof(Impl_, attitude_) -
               offsetof(Impl_, gimbal_result_) +
               sizeof(Impl_::attitude_));
}
GetAttitudeResponse::~GetAttitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GetAttitudeResponse)
  SharedDtor(*this);
}
inline void GetAttitudeResponse::SharedDtor(MessageLite& self) {
  GetAttitudeResponse& this_ = static_cast<GetAttitudeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_result_;
  delete this_._impl_.attitude_;
  this_._impl_.~Impl_();
}

inline void* GetAttitudeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetAttitudeResponse(arena);
}
constexpr auto GetAttitudeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetAttitudeResponse),
                                            alignof(GetAttitudeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetAttitudeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetAttitudeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetAttitudeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetAttitudeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetAttitudeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetAttitudeResponse>(), &GetAttitudeResponse::ByteSizeLong,
            &GetAttitudeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_._cached_size_),
        false,
    },
    &GetAttitudeResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetAttitudeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetAttitudeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GetAttitudeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.Attitude attitude = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_.attitude_)}},
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_.gimbal_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_.gimbal_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.gimbal.Attitude attitude = 2;
    {PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_.attitude_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::Attitude>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetAttitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GetAttitudeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.gimbal_result_ != nullptr);
      _impl_.gimbal_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.attitude_ != nullptr);
      _impl_.attitude_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetAttitudeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetAttitudeResponse& this_ = static_cast<const GetAttitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetAttitudeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetAttitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GetAttitudeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_result_, this_._impl_.gimbal_result_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.gimbal.Attitude attitude = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.attitude_, this_._impl_.attitude_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GetAttitudeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetAttitudeResponse::ByteSizeLong(const MessageLite& base) {
          const GetAttitudeResponse& this_ = static_cast<const GetAttitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetAttitudeResponse::ByteSizeLong() const {
          const GetAttitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GetAttitudeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_result_);
            }
            // .mavsdk.rpc.gimbal.Attitude attitude = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attitude_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetAttitudeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAttitudeResponse*>(&to_msg);
  auto& from = static_cast<const GetAttitudeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GetAttitudeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.gimbal_result_ != nullptr);
      if (_this->_impl_.gimbal_result_ == nullptr) {
        _this->_impl_.gimbal_result_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalResult>(arena, *from._impl_.gimbal_result_);
      } else {
        _this->_impl_.gimbal_result_->MergeFrom(*from._impl_.gimbal_result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.attitude_ != nullptr);
      if (_this->_impl_.attitude_ == nullptr) {
        _this->_impl_.attitude_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::Attitude>(arena, *from._impl_.attitude_);
      } else {
        _this->_impl_.attitude_->MergeFrom(*from._impl_.attitude_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAttitudeResponse::CopyFrom(const GetAttitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GetAttitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetAttitudeResponse::InternalSwap(GetAttitudeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_.attitude_)
      + sizeof(GetAttitudeResponse::_impl_.attitude_)
      - PROTOBUF_FIELD_OFFSET(GetAttitudeResponse, _impl_.gimbal_result_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_result_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_result_));
}

::google::protobuf::Metadata GetAttitudeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeGimbalListRequest::_Internal {
 public:
};

SubscribeGimbalListRequest::SubscribeGimbalListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.SubscribeGimbalListRequest)
}
SubscribeGimbalListRequest::SubscribeGimbalListRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeGimbalListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeGimbalListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.SubscribeGimbalListRequest)
}

inline void* SubscribeGimbalListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeGimbalListRequest(arena);
}
constexpr auto SubscribeGimbalListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeGimbalListRequest),
                                            alignof(SubscribeGimbalListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeGimbalListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeGimbalListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeGimbalListRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeGimbalListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeGimbalListRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeGimbalListRequest>(), &SubscribeGimbalListRequest::ByteSizeLong,
            &SubscribeGimbalListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeGimbalListRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeGimbalListRequest::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeGimbalListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeGimbalListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::SubscribeGimbalListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeGimbalListRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GimbalListResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GimbalListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GimbalListResponse, _impl_._has_bits_);
};

GimbalListResponse::GimbalListResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GimbalListResponse)
}
inline PROTOBUF_NDEBUG_INLINE GimbalListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::GimbalListResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GimbalListResponse::GimbalListResponse(
    ::google::protobuf::Arena* arena,
    const GimbalListResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GimbalListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gimbal_list_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalList>(
                              arena, *from._impl_.gimbal_list_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.GimbalListResponse)
}
inline PROTOBUF_NDEBUG_INLINE GimbalListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GimbalListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gimbal_list_ = {};
}
GimbalListResponse::~GimbalListResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GimbalListResponse)
  SharedDtor(*this);
}
inline void GimbalListResponse::SharedDtor(MessageLite& self) {
  GimbalListResponse& this_ = static_cast<GimbalListResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gimbal_list_;
  this_._impl_.~Impl_();
}

inline void* GimbalListResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GimbalListResponse(arena);
}
constexpr auto GimbalListResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GimbalListResponse),
                                            alignof(GimbalListResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GimbalListResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GimbalListResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GimbalListResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GimbalListResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GimbalListResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GimbalListResponse>(), &GimbalListResponse::ByteSizeLong,
            &GimbalListResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GimbalListResponse, _impl_._cached_size_),
        false,
    },
    &GimbalListResponse::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GimbalListResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GimbalListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GimbalListResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.gimbal.GimbalList gimbal_list = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GimbalListResponse, _impl_.gimbal_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalList gimbal_list = 1;
    {PROTOBUF_FIELD_OFFSET(GimbalListResponse, _impl_.gimbal_list_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalList>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GimbalListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GimbalListResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gimbal_list_ != nullptr);
    _impl_.gimbal_list_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GimbalListResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GimbalListResponse& this_ = static_cast<const GimbalListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GimbalListResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GimbalListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GimbalListResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.gimbal.GimbalList gimbal_list = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gimbal_list_, this_._impl_.gimbal_list_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GimbalListResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GimbalListResponse::ByteSizeLong(const MessageLite& base) {
          const GimbalListResponse& this_ = static_cast<const GimbalListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GimbalListResponse::ByteSizeLong() const {
          const GimbalListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GimbalListResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.gimbal.GimbalList gimbal_list = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gimbal_list_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GimbalListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GimbalListResponse*>(&to_msg);
  auto& from = static_cast<const GimbalListResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GimbalListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gimbal_list_ != nullptr);
    if (_this->_impl_.gimbal_list_ == nullptr) {
      _this->_impl_.gimbal_list_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::gimbal::GimbalList>(arena, *from._impl_.gimbal_list_);
    } else {
      _this->_impl_.gimbal_list_->MergeFrom(*from._impl_.gimbal_list_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalListResponse::CopyFrom(const GimbalListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GimbalListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GimbalListResponse::InternalSwap(GimbalListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gimbal_list_, other->_impl_.gimbal_list_);
}

::google::protobuf::Metadata GimbalListResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GimbalItem::_Internal {
 public:
};

GimbalItem::GimbalItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GimbalItem)
}
inline PROTOBUF_NDEBUG_INLINE GimbalItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::GimbalItem& from_msg)
      : vendor_name_(arena, from.vendor_name_),
        model_name_(arena, from.model_name_),
        custom_name_(arena, from.custom_name_),
        _cached_size_{0} {}

GimbalItem::GimbalItem(
    ::google::protobuf::Arena* arena,
    const GimbalItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GimbalItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gimbal_id_),
           offsetof(Impl_, gimbal_device_id_) -
               offsetof(Impl_, gimbal_id_) +
               sizeof(Impl_::gimbal_device_id_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.GimbalItem)
}
inline PROTOBUF_NDEBUG_INLINE GimbalItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vendor_name_(arena),
        model_name_(arena),
        custom_name_(arena),
        _cached_size_{0} {}

inline void GimbalItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_id_),
           0,
           offsetof(Impl_, gimbal_device_id_) -
               offsetof(Impl_, gimbal_id_) +
               sizeof(Impl_::gimbal_device_id_));
}
GimbalItem::~GimbalItem() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GimbalItem)
  SharedDtor(*this);
}
inline void GimbalItem::SharedDtor(MessageLite& self) {
  GimbalItem& this_ = static_cast<GimbalItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.vendor_name_.Destroy();
  this_._impl_.model_name_.Destroy();
  this_._impl_.custom_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GimbalItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GimbalItem(arena);
}
constexpr auto GimbalItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GimbalItem),
                                            alignof(GimbalItem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GimbalItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GimbalItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GimbalItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GimbalItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GimbalItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GimbalItem>(), &GimbalItem::ByteSizeLong,
            &GimbalItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_._cached_size_),
        false,
    },
    &GimbalItem::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GimbalItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 69, 2> GimbalItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GimbalItem, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_id_)}},
    // string vendor_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.vendor_name_)}},
    // string model_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.model_name_)}},
    // string custom_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.custom_name_)}},
    // int32 gimbal_manager_component_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GimbalItem, _impl_.gimbal_manager_component_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_manager_component_id_)}},
    // int32 gimbal_device_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GimbalItem, _impl_.gimbal_device_id_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_device_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string vendor_name = 2;
    {PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.vendor_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_name = 3;
    {PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.model_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string custom_name = 4;
    {PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.custom_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 gimbal_manager_component_id = 5;
    {PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_manager_component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 gimbal_device_id = 6;
    {PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\34\0\13\12\13\0\0\0"
    "mavsdk.rpc.gimbal.GimbalItem"
    "vendor_name"
    "model_name"
    "custom_name"
  }},
};

PROTOBUF_NOINLINE void GimbalItem::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GimbalItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vendor_name_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.custom_name_.ClearToEmpty();
  ::memset(&_impl_.gimbal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gimbal_device_id_) -
      reinterpret_cast<char*>(&_impl_.gimbal_id_)) + sizeof(_impl_.gimbal_device_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GimbalItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GimbalItem& this_ = static_cast<const GimbalItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GimbalItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GimbalItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GimbalItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          // string vendor_name = 2;
          if (!this_._internal_vendor_name().empty()) {
            const std::string& _s = this_._internal_vendor_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.gimbal.GimbalItem.vendor_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string model_name = 3;
          if (!this_._internal_model_name().empty()) {
            const std::string& _s = this_._internal_model_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.gimbal.GimbalItem.model_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string custom_name = 4;
          if (!this_._internal_custom_name().empty()) {
            const std::string& _s = this_._internal_custom_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.gimbal.GimbalItem.custom_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 gimbal_manager_component_id = 5;
          if (this_._internal_gimbal_manager_component_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_gimbal_manager_component_id(), target);
          }

          // int32 gimbal_device_id = 6;
          if (this_._internal_gimbal_device_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_gimbal_device_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GimbalItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GimbalItem::ByteSizeLong(const MessageLite& base) {
          const GimbalItem& this_ = static_cast<const GimbalItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GimbalItem::ByteSizeLong() const {
          const GimbalItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GimbalItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string vendor_name = 2;
            if (!this_._internal_vendor_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_vendor_name());
            }
            // string model_name = 3;
            if (!this_._internal_model_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model_name());
            }
            // string custom_name = 4;
            if (!this_._internal_custom_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_custom_name());
            }
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
            // int32 gimbal_manager_component_id = 5;
            if (this_._internal_gimbal_manager_component_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_manager_component_id());
            }
            // int32 gimbal_device_id = 6;
            if (this_._internal_gimbal_device_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_device_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GimbalItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GimbalItem*>(&to_msg);
  auto& from = static_cast<const GimbalItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GimbalItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vendor_name().empty()) {
    _this->_internal_set_vendor_name(from._internal_vendor_name());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_custom_name().empty()) {
    _this->_internal_set_custom_name(from._internal_custom_name());
  }
  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  if (from._internal_gimbal_manager_component_id() != 0) {
    _this->_impl_.gimbal_manager_component_id_ = from._impl_.gimbal_manager_component_id_;
  }
  if (from._internal_gimbal_device_id() != 0) {
    _this->_impl_.gimbal_device_id_ = from._impl_.gimbal_device_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalItem::CopyFrom(const GimbalItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GimbalItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GimbalItem::InternalSwap(GimbalItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vendor_name_, &other->_impl_.vendor_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.custom_name_, &other->_impl_.custom_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_device_id_)
      + sizeof(GimbalItem::_impl_.gimbal_device_id_)
      - PROTOBUF_FIELD_OFFSET(GimbalItem, _impl_.gimbal_id_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_id_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_id_));
}

::google::protobuf::Metadata GimbalItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GimbalList::_Internal {
 public:
};

GimbalList::GimbalList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GimbalList)
}
inline PROTOBUF_NDEBUG_INLINE GimbalList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::GimbalList& from_msg)
      : gimbals_{visibility, arena, from.gimbals_},
        _cached_size_{0} {}

GimbalList::GimbalList(
    ::google::protobuf::Arena* arena,
    const GimbalList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GimbalList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.GimbalList)
}
inline PROTOBUF_NDEBUG_INLINE GimbalList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : gimbals_{visibility, arena},
        _cached_size_{0} {}

inline void GimbalList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GimbalList::~GimbalList() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GimbalList)
  SharedDtor(*this);
}
inline void GimbalList::SharedDtor(MessageLite& self) {
  GimbalList& this_ = static_cast<GimbalList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GimbalList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GimbalList(arena);
}
constexpr auto GimbalList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GimbalList, _impl_.gimbals_) +
          decltype(GimbalList::_impl_.gimbals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GimbalList), alignof(GimbalList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GimbalList::PlacementNew_,
                                 sizeof(GimbalList),
                                 alignof(GimbalList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GimbalList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GimbalList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GimbalList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GimbalList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GimbalList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GimbalList>(), &GimbalList::ByteSizeLong,
            &GimbalList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GimbalList, _impl_._cached_size_),
        false,
    },
    &GimbalList::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GimbalList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GimbalList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mavsdk.rpc.gimbal.GimbalItem gimbals = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalList, _impl_.gimbals_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mavsdk.rpc.gimbal.GimbalItem gimbals = 1;
    {PROTOBUF_FIELD_OFFSET(GimbalList, _impl_.gimbals_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GimbalList::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GimbalList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gimbals_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GimbalList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GimbalList& this_ = static_cast<const GimbalList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GimbalList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GimbalList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GimbalList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mavsdk.rpc.gimbal.GimbalItem gimbals = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_gimbals_size());
               i < n; i++) {
            const auto& repfield = this_._internal_gimbals().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GimbalList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GimbalList::ByteSizeLong(const MessageLite& base) {
          const GimbalList& this_ = static_cast<const GimbalList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GimbalList::ByteSizeLong() const {
          const GimbalList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GimbalList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mavsdk.rpc.gimbal.GimbalItem gimbals = 1;
            {
              total_size += 1UL * this_._internal_gimbals_size();
              for (const auto& msg : this_._internal_gimbals()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GimbalList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GimbalList*>(&to_msg);
  auto& from = static_cast<const GimbalList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GimbalList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gimbals()->MergeFrom(
      from._internal_gimbals());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalList::CopyFrom(const GimbalList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GimbalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GimbalList::InternalSwap(GimbalList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.gimbals_.InternalSwap(&other->_impl_.gimbals_);
}

::google::protobuf::Metadata GimbalList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ControlStatus::_Internal {
 public:
};

ControlStatus::ControlStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.ControlStatus)
}
ControlStatus::ControlStatus(
    ::google::protobuf::Arena* arena, const ControlStatus& from)
    : ControlStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ControlStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ControlStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gimbal_id_),
           0,
           offsetof(Impl_, compid_secondary_control_) -
               offsetof(Impl_, gimbal_id_) +
               sizeof(Impl_::compid_secondary_control_));
}
ControlStatus::~ControlStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.ControlStatus)
  SharedDtor(*this);
}
inline void ControlStatus::SharedDtor(MessageLite& self) {
  ControlStatus& this_ = static_cast<ControlStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ControlStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ControlStatus(arena);
}
constexpr auto ControlStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ControlStatus),
                                            alignof(ControlStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ControlStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ControlStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ControlStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ControlStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ControlStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ControlStatus>(), &ControlStatus::ByteSizeLong,
            &ControlStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_._cached_size_),
        false,
    },
    &ControlStatus::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ControlStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> ControlStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::ControlStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 gimbal_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStatus, _impl_.gimbal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.gimbal_id_)}},
    // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStatus, _impl_.control_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.control_mode_)}},
    // int32 sysid_primary_control = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStatus, _impl_.sysid_primary_control_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.sysid_primary_control_)}},
    // int32 compid_primary_control = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStatus, _impl_.compid_primary_control_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.compid_primary_control_)}},
    // int32 sysid_secondary_control = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStatus, _impl_.sysid_secondary_control_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.sysid_secondary_control_)}},
    // int32 compid_secondary_control = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlStatus, _impl_.compid_secondary_control_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.compid_secondary_control_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gimbal_id = 1;
    {PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.gimbal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
    {PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.control_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 sysid_primary_control = 3;
    {PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.sysid_primary_control_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 compid_primary_control = 4;
    {PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.compid_primary_control_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 sysid_secondary_control = 5;
    {PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.sysid_secondary_control_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 compid_secondary_control = 6;
    {PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.compid_secondary_control_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ControlStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.ControlStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gimbal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.compid_secondary_control_) -
      reinterpret_cast<char*>(&_impl_.gimbal_id_)) + sizeof(_impl_.compid_secondary_control_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ControlStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ControlStatus& this_ = static_cast<const ControlStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ControlStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ControlStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.ControlStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 gimbal_id = 1;
          if (this_._internal_gimbal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_gimbal_id(), target);
          }

          // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
          if (this_._internal_control_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_control_mode(), target);
          }

          // int32 sysid_primary_control = 3;
          if (this_._internal_sysid_primary_control() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_sysid_primary_control(), target);
          }

          // int32 compid_primary_control = 4;
          if (this_._internal_compid_primary_control() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_compid_primary_control(), target);
          }

          // int32 sysid_secondary_control = 5;
          if (this_._internal_sysid_secondary_control() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_sysid_secondary_control(), target);
          }

          // int32 compid_secondary_control = 6;
          if (this_._internal_compid_secondary_control() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_compid_secondary_control(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.ControlStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ControlStatus::ByteSizeLong(const MessageLite& base) {
          const ControlStatus& this_ = static_cast<const ControlStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ControlStatus::ByteSizeLong() const {
          const ControlStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.ControlStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 gimbal_id = 1;
            if (this_._internal_gimbal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gimbal_id());
            }
            // .mavsdk.rpc.gimbal.ControlMode control_mode = 2;
            if (this_._internal_control_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_control_mode());
            }
            // int32 sysid_primary_control = 3;
            if (this_._internal_sysid_primary_control() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sysid_primary_control());
            }
            // int32 compid_primary_control = 4;
            if (this_._internal_compid_primary_control() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_compid_primary_control());
            }
            // int32 sysid_secondary_control = 5;
            if (this_._internal_sysid_secondary_control() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sysid_secondary_control());
            }
            // int32 compid_secondary_control = 6;
            if (this_._internal_compid_secondary_control() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_compid_secondary_control());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ControlStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControlStatus*>(&to_msg);
  auto& from = static_cast<const ControlStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.ControlStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gimbal_id() != 0) {
    _this->_impl_.gimbal_id_ = from._impl_.gimbal_id_;
  }
  if (from._internal_control_mode() != 0) {
    _this->_impl_.control_mode_ = from._impl_.control_mode_;
  }
  if (from._internal_sysid_primary_control() != 0) {
    _this->_impl_.sysid_primary_control_ = from._impl_.sysid_primary_control_;
  }
  if (from._internal_compid_primary_control() != 0) {
    _this->_impl_.compid_primary_control_ = from._impl_.compid_primary_control_;
  }
  if (from._internal_sysid_secondary_control() != 0) {
    _this->_impl_.sysid_secondary_control_ = from._impl_.sysid_secondary_control_;
  }
  if (from._internal_compid_secondary_control() != 0) {
    _this->_impl_.compid_secondary_control_ = from._impl_.compid_secondary_control_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlStatus::CopyFrom(const ControlStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.ControlStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControlStatus::InternalSwap(ControlStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.compid_secondary_control_)
      + sizeof(ControlStatus::_impl_.compid_secondary_control_)
      - PROTOBUF_FIELD_OFFSET(ControlStatus, _impl_.gimbal_id_)>(
          reinterpret_cast<char*>(&_impl_.gimbal_id_),
          reinterpret_cast<char*>(&other->_impl_.gimbal_id_));
}

::google::protobuf::Metadata ControlStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GimbalResult::_Internal {
 public:
};

GimbalResult::GimbalResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gimbal.GimbalResult)
}
inline PROTOBUF_NDEBUG_INLINE GimbalResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::gimbal::GimbalResult& from_msg)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

GimbalResult::GimbalResult(
    ::google::protobuf::Arena* arena,
    const GimbalResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GimbalResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gimbal.GimbalResult)
}
inline PROTOBUF_NDEBUG_INLINE GimbalResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void GimbalResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
GimbalResult::~GimbalResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gimbal.GimbalResult)
  SharedDtor(*this);
}
inline void GimbalResult::SharedDtor(MessageLite& self) {
  GimbalResult& this_ = static_cast<GimbalResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_str_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GimbalResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GimbalResult(arena);
}
constexpr auto GimbalResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GimbalResult),
                                            alignof(GimbalResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GimbalResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GimbalResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GimbalResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GimbalResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GimbalResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GimbalResult>(), &GimbalResult::ByteSizeLong,
            &GimbalResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GimbalResult, _impl_._cached_size_),
        false,
    },
    &GimbalResult::kDescriptorMethods,
    &descriptor_table_gimbal_2fgimbal_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GimbalResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> GimbalResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::gimbal::GimbalResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalResult, _impl_.result_str_)}},
    // .mavsdk.rpc.gimbal.GimbalResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GimbalResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GimbalResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.gimbal.GimbalResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(GimbalResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(GimbalResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\12\0\0\0\0\0"
    "mavsdk.rpc.gimbal.GimbalResult"
    "result_str"
  }},
};

PROTOBUF_NOINLINE void GimbalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gimbal.GimbalResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GimbalResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GimbalResult& this_ = static_cast<const GimbalResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GimbalResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GimbalResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gimbal.GimbalResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.gimbal.GimbalResult.Result result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_result(), target);
          }

          // string result_str = 2;
          if (!this_._internal_result_str().empty()) {
            const std::string& _s = this_._internal_result_str();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.gimbal.GimbalResult.result_str");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gimbal.GimbalResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GimbalResult::ByteSizeLong(const MessageLite& base) {
          const GimbalResult& this_ = static_cast<const GimbalResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GimbalResult::ByteSizeLong() const {
          const GimbalResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gimbal.GimbalResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string result_str = 2;
            if (!this_._internal_result_str().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result_str());
            }
            // .mavsdk.rpc.gimbal.GimbalResult.Result result = 1;
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GimbalResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GimbalResult*>(&to_msg);
  auto& from = static_cast<const GimbalResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gimbal.GimbalResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GimbalResult::CopyFrom(const GimbalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gimbal.GimbalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GimbalResult::InternalSwap(GimbalResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata GimbalResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace gimbal
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_gimbal_2fgimbal_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
