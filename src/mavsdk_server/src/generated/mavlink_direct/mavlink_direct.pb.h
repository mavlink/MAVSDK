// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mavlink_direct/mavlink_direct.proto
// Protobuf C++ Version: 5.29.1

#ifndef mavlink_5fdirect_2fmavlink_5fdirect_2eproto_2epb_2eh
#define mavlink_5fdirect_2fmavlink_5fdirect_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mavlink_5fdirect_2fmavlink_5fdirect_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
namespace mavsdk {
namespace rpc {
namespace mavlink_direct {
class LoadCustomXmlRequest;
struct LoadCustomXmlRequestDefaultTypeInternal;
extern LoadCustomXmlRequestDefaultTypeInternal _LoadCustomXmlRequest_default_instance_;
class LoadCustomXmlResponse;
struct LoadCustomXmlResponseDefaultTypeInternal;
extern LoadCustomXmlResponseDefaultTypeInternal _LoadCustomXmlResponse_default_instance_;
class MavlinkDirectResult;
struct MavlinkDirectResultDefaultTypeInternal;
extern MavlinkDirectResultDefaultTypeInternal _MavlinkDirectResult_default_instance_;
class MavlinkMessage;
struct MavlinkMessageDefaultTypeInternal;
extern MavlinkMessageDefaultTypeInternal _MavlinkMessage_default_instance_;
class MessageResponse;
struct MessageResponseDefaultTypeInternal;
extern MessageResponseDefaultTypeInternal _MessageResponse_default_instance_;
class SendMessageRequest;
struct SendMessageRequestDefaultTypeInternal;
extern SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;
class SendMessageResponse;
struct SendMessageResponseDefaultTypeInternal;
extern SendMessageResponseDefaultTypeInternal _SendMessageResponse_default_instance_;
class SubscribeMessageRequest;
struct SubscribeMessageRequestDefaultTypeInternal;
extern SubscribeMessageRequestDefaultTypeInternal _SubscribeMessageRequest_default_instance_;
}  // namespace mavlink_direct
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace mavlink_direct {
enum MavlinkDirectResult_Result : int {
  MavlinkDirectResult_Result_RESULT_UNKNOWN = 0,
  MavlinkDirectResult_Result_RESULT_SUCCESS = 1,
  MavlinkDirectResult_Result_RESULT_ERROR = 2,
  MavlinkDirectResult_Result_RESULT_INVALID_MESSAGE = 3,
  MavlinkDirectResult_Result_RESULT_INVALID_FIELD = 4,
  MavlinkDirectResult_Result_RESULT_CONNECTION_ERROR = 5,
  MavlinkDirectResult_Result_RESULT_NO_SYSTEM = 6,
  MavlinkDirectResult_Result_RESULT_TIMEOUT = 7,
  MavlinkDirectResult_Result_MavlinkDirectResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MavlinkDirectResult_Result_MavlinkDirectResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MavlinkDirectResult_Result_IsValid(int value);
extern const uint32_t MavlinkDirectResult_Result_internal_data_[];
constexpr MavlinkDirectResult_Result MavlinkDirectResult_Result_Result_MIN = static_cast<MavlinkDirectResult_Result>(0);
constexpr MavlinkDirectResult_Result MavlinkDirectResult_Result_Result_MAX = static_cast<MavlinkDirectResult_Result>(7);
constexpr int MavlinkDirectResult_Result_Result_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
MavlinkDirectResult_Result_descriptor();
template <typename T>
const std::string& MavlinkDirectResult_Result_Name(T value) {
  static_assert(std::is_same<T, MavlinkDirectResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return MavlinkDirectResult_Result_Name(static_cast<MavlinkDirectResult_Result>(value));
}
template <>
inline const std::string& MavlinkDirectResult_Result_Name(MavlinkDirectResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MavlinkDirectResult_Result_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool MavlinkDirectResult_Result_Parse(absl::string_view name, MavlinkDirectResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MavlinkDirectResult_Result>(
      MavlinkDirectResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SubscribeMessageRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest) */ {
 public:
  inline SubscribeMessageRequest() : SubscribeMessageRequest(nullptr) {}
  ~SubscribeMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeMessageRequest(const SubscribeMessageRequest& from) : SubscribeMessageRequest(nullptr, from) {}
  inline SubscribeMessageRequest(SubscribeMessageRequest&& from) noexcept
      : SubscribeMessageRequest(nullptr, std::move(from)) {}
  inline SubscribeMessageRequest& operator=(const SubscribeMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeMessageRequest& operator=(SubscribeMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeMessageRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeMessageRequest*>(
        &_SubscribeMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubscribeMessageRequest& a, SubscribeMessageRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeMessageRequest& from) { SubscribeMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.SubscribeMessageRequest"; }

 protected:
  explicit SubscribeMessageRequest(::google::protobuf::Arena* arena);
  SubscribeMessageRequest(::google::protobuf::Arena* arena, const SubscribeMessageRequest& from);
  SubscribeMessageRequest(::google::protobuf::Arena* arena, SubscribeMessageRequest&& from) noexcept
      : SubscribeMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageNameFieldNumber = 1,
  };
  // string message_name = 1;
  void clear_message_name() ;
  const std::string& message_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_name(Arg_&& arg, Args_... args);
  std::string* mutable_message_name();
  PROTOBUF_NODISCARD std::string* release_message_name();
  void set_allocated_message_name(std::string* value);

  private:
  const std::string& _internal_message_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_name(
      const std::string& value);
  std::string* _internal_mutable_message_name();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class MavlinkMessage final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.MavlinkMessage) */ {
 public:
  inline MavlinkMessage() : MavlinkMessage(nullptr) {}
  ~MavlinkMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MavlinkMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MavlinkMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MavlinkMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline MavlinkMessage(const MavlinkMessage& from) : MavlinkMessage(nullptr, from) {}
  inline MavlinkMessage(MavlinkMessage&& from) noexcept
      : MavlinkMessage(nullptr, std::move(from)) {}
  inline MavlinkMessage& operator=(const MavlinkMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MavlinkMessage& operator=(MavlinkMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MavlinkMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const MavlinkMessage* internal_default_instance() {
    return reinterpret_cast<const MavlinkMessage*>(
        &_MavlinkMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MavlinkMessage& a, MavlinkMessage& b) { a.Swap(&b); }
  inline void Swap(MavlinkMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MavlinkMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MavlinkMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MavlinkMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MavlinkMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MavlinkMessage& from) { MavlinkMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MavlinkMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.MavlinkMessage"; }

 protected:
  explicit MavlinkMessage(::google::protobuf::Arena* arena);
  MavlinkMessage(::google::protobuf::Arena* arena, const MavlinkMessage& from);
  MavlinkMessage(::google::protobuf::Arena* arena, MavlinkMessage&& from) noexcept
      : MavlinkMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageNameFieldNumber = 1,
    kFieldsJsonFieldNumber = 6,
    kSystemIdFieldNumber = 2,
    kComponentIdFieldNumber = 3,
    kTargetSystemIdFieldNumber = 4,
    kTargetComponentIdFieldNumber = 5,
  };
  // string message_name = 1;
  void clear_message_name() ;
  const std::string& message_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_name(Arg_&& arg, Args_... args);
  std::string* mutable_message_name();
  PROTOBUF_NODISCARD std::string* release_message_name();
  void set_allocated_message_name(std::string* value);

  private:
  const std::string& _internal_message_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_name(
      const std::string& value);
  std::string* _internal_mutable_message_name();

  public:
  // string fields_json = 6;
  void clear_fields_json() ;
  const std::string& fields_json() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fields_json(Arg_&& arg, Args_... args);
  std::string* mutable_fields_json();
  PROTOBUF_NODISCARD std::string* release_fields_json();
  void set_allocated_fields_json(std::string* value);

  private:
  const std::string& _internal_fields_json() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fields_json(
      const std::string& value);
  std::string* _internal_mutable_fields_json();

  public:
  // uint32 system_id = 2;
  void clear_system_id() ;
  ::uint32_t system_id() const;
  void set_system_id(::uint32_t value);

  private:
  ::uint32_t _internal_system_id() const;
  void _internal_set_system_id(::uint32_t value);

  public:
  // uint32 component_id = 3;
  void clear_component_id() ;
  ::uint32_t component_id() const;
  void set_component_id(::uint32_t value);

  private:
  ::uint32_t _internal_component_id() const;
  void _internal_set_component_id(::uint32_t value);

  public:
  // uint32 target_system_id = 4;
  void clear_target_system_id() ;
  ::uint32_t target_system_id() const;
  void set_target_system_id(::uint32_t value);

  private:
  ::uint32_t _internal_target_system_id() const;
  void _internal_set_target_system_id(::uint32_t value);

  public:
  // uint32 target_component_id = 5;
  void clear_target_component_id() ;
  ::uint32_t target_component_id() const;
  void set_target_component_id(::uint32_t value);

  private:
  ::uint32_t _internal_target_component_id() const;
  void _internal_set_target_component_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.MavlinkMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      72, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MavlinkMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_name_;
    ::google::protobuf::internal::ArenaStringPtr fields_json_;
    ::uint32_t system_id_;
    ::uint32_t component_id_;
    ::uint32_t target_system_id_;
    ::uint32_t target_component_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class MavlinkDirectResult final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.MavlinkDirectResult) */ {
 public:
  inline MavlinkDirectResult() : MavlinkDirectResult(nullptr) {}
  ~MavlinkDirectResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MavlinkDirectResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MavlinkDirectResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MavlinkDirectResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline MavlinkDirectResult(const MavlinkDirectResult& from) : MavlinkDirectResult(nullptr, from) {}
  inline MavlinkDirectResult(MavlinkDirectResult&& from) noexcept
      : MavlinkDirectResult(nullptr, std::move(from)) {}
  inline MavlinkDirectResult& operator=(const MavlinkDirectResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline MavlinkDirectResult& operator=(MavlinkDirectResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MavlinkDirectResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const MavlinkDirectResult* internal_default_instance() {
    return reinterpret_cast<const MavlinkDirectResult*>(
        &_MavlinkDirectResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MavlinkDirectResult& a, MavlinkDirectResult& b) { a.Swap(&b); }
  inline void Swap(MavlinkDirectResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MavlinkDirectResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MavlinkDirectResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MavlinkDirectResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MavlinkDirectResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MavlinkDirectResult& from) { MavlinkDirectResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MavlinkDirectResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.MavlinkDirectResult"; }

 protected:
  explicit MavlinkDirectResult(::google::protobuf::Arena* arena);
  MavlinkDirectResult(::google::protobuf::Arena* arena, const MavlinkDirectResult& from);
  MavlinkDirectResult(::google::protobuf::Arena* arena, MavlinkDirectResult&& from) noexcept
      : MavlinkDirectResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Result = MavlinkDirectResult_Result;
  static constexpr Result RESULT_UNKNOWN = MavlinkDirectResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = MavlinkDirectResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_ERROR = MavlinkDirectResult_Result_RESULT_ERROR;
  static constexpr Result RESULT_INVALID_MESSAGE = MavlinkDirectResult_Result_RESULT_INVALID_MESSAGE;
  static constexpr Result RESULT_INVALID_FIELD = MavlinkDirectResult_Result_RESULT_INVALID_FIELD;
  static constexpr Result RESULT_CONNECTION_ERROR = MavlinkDirectResult_Result_RESULT_CONNECTION_ERROR;
  static constexpr Result RESULT_NO_SYSTEM = MavlinkDirectResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_TIMEOUT = MavlinkDirectResult_Result_RESULT_TIMEOUT;
  static inline bool Result_IsValid(int value) {
    return MavlinkDirectResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = MavlinkDirectResult_Result_Result_MIN;
  static constexpr Result Result_MAX = MavlinkDirectResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = MavlinkDirectResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return MavlinkDirectResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return MavlinkDirectResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return MavlinkDirectResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result result() const;
  void set_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result value);

  private:
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MavlinkDirectResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class LoadCustomXmlRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest) */ {
 public:
  inline LoadCustomXmlRequest() : LoadCustomXmlRequest(nullptr) {}
  ~LoadCustomXmlRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoadCustomXmlRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoadCustomXmlRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadCustomXmlRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadCustomXmlRequest(const LoadCustomXmlRequest& from) : LoadCustomXmlRequest(nullptr, from) {}
  inline LoadCustomXmlRequest(LoadCustomXmlRequest&& from) noexcept
      : LoadCustomXmlRequest(nullptr, std::move(from)) {}
  inline LoadCustomXmlRequest& operator=(const LoadCustomXmlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadCustomXmlRequest& operator=(LoadCustomXmlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadCustomXmlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadCustomXmlRequest* internal_default_instance() {
    return reinterpret_cast<const LoadCustomXmlRequest*>(
        &_LoadCustomXmlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(LoadCustomXmlRequest& a, LoadCustomXmlRequest& b) { a.Swap(&b); }
  inline void Swap(LoadCustomXmlRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadCustomXmlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadCustomXmlRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoadCustomXmlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadCustomXmlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadCustomXmlRequest& from) { LoadCustomXmlRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoadCustomXmlRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest"; }

 protected:
  explicit LoadCustomXmlRequest(::google::protobuf::Arena* arena);
  LoadCustomXmlRequest(::google::protobuf::Arena* arena, const LoadCustomXmlRequest& from);
  LoadCustomXmlRequest(::google::protobuf::Arena* arena, LoadCustomXmlRequest&& from) noexcept
      : LoadCustomXmlRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXmlContentFieldNumber = 1,
  };
  // string xml_content = 1;
  void clear_xml_content() ;
  const std::string& xml_content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_xml_content(Arg_&& arg, Args_... args);
  std::string* mutable_xml_content();
  PROTOBUF_NODISCARD std::string* release_xml_content();
  void set_allocated_xml_content(std::string* value);

  private:
  const std::string& _internal_xml_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_xml_content(
      const std::string& value);
  std::string* _internal_mutable_xml_content();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadCustomXmlRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr xml_content_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class SendMessageResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.SendMessageResponse) */ {
 public:
  inline SendMessageResponse() : SendMessageResponse(nullptr) {}
  ~SendMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageResponse(const SendMessageResponse& from) : SendMessageResponse(nullptr, from) {}
  inline SendMessageResponse(SendMessageResponse&& from) noexcept
      : SendMessageResponse(nullptr, std::move(from)) {}
  inline SendMessageResponse& operator=(const SendMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageResponse& operator=(SendMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageResponse* internal_default_instance() {
    return reinterpret_cast<const SendMessageResponse*>(
        &_SendMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SendMessageResponse& a, SendMessageResponse& b) { a.Swap(&b); }
  inline void Swap(SendMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageResponse& from) { SendMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.SendMessageResponse"; }

 protected:
  explicit SendMessageResponse(::google::protobuf::Arena* arena);
  SendMessageResponse(::google::protobuf::Arena* arena, const SendMessageResponse& from);
  SendMessageResponse(::google::protobuf::Arena* arena, SendMessageResponse&& from) noexcept
      : SendMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMavlinkDirectResultFieldNumber = 1,
  };
  // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
  bool has_mavlink_direct_result() const;
  void clear_mavlink_direct_result() ;
  const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& mavlink_direct_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* release_mavlink_direct_result();
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* mutable_mavlink_direct_result();
  void set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value);
  void unsafe_arena_set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value);
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* unsafe_arena_release_mavlink_direct_result();

  private:
  const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& _internal_mavlink_direct_result() const;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* _internal_mutable_mavlink_direct_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.SendMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* mavlink_direct_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class SendMessageRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.SendMessageRequest) */ {
 public:
  inline SendMessageRequest() : SendMessageRequest(nullptr) {}
  ~SendMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageRequest(const SendMessageRequest& from) : SendMessageRequest(nullptr, from) {}
  inline SendMessageRequest(SendMessageRequest&& from) noexcept
      : SendMessageRequest(nullptr, std::move(from)) {}
  inline SendMessageRequest& operator=(const SendMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageRequest& operator=(SendMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageRequest* internal_default_instance() {
    return reinterpret_cast<const SendMessageRequest*>(
        &_SendMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SendMessageRequest& a, SendMessageRequest& b) { a.Swap(&b); }
  inline void Swap(SendMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageRequest& from) { SendMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.SendMessageRequest"; }

 protected:
  explicit SendMessageRequest(::google::protobuf::Arena* arena);
  SendMessageRequest(::google::protobuf::Arena* arena, const SendMessageRequest& from);
  SendMessageRequest(::google::protobuf::Arena* arena, SendMessageRequest&& from) noexcept
      : SendMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
  bool has_message() const;
  void clear_message() ;
  const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& message() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::mavlink_direct::MavlinkMessage* release_message();
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* mutable_message();
  void set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value);
  void unsafe_arena_set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value);
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* unsafe_arena_release_message();

  private:
  const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& _internal_message() const;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.SendMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::mavlink_direct::MavlinkMessage* message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class MessageResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.MessageResponse) */ {
 public:
  inline MessageResponse() : MessageResponse(nullptr) {}
  ~MessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MessageResponse(const MessageResponse& from) : MessageResponse(nullptr, from) {}
  inline MessageResponse(MessageResponse&& from) noexcept
      : MessageResponse(nullptr, std::move(from)) {}
  inline MessageResponse& operator=(const MessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageResponse& operator=(MessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageResponse* internal_default_instance() {
    return reinterpret_cast<const MessageResponse*>(
        &_MessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MessageResponse& a, MessageResponse& b) { a.Swap(&b); }
  inline void Swap(MessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MessageResponse& from) { MessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.MessageResponse"; }

 protected:
  explicit MessageResponse(::google::protobuf::Arena* arena);
  MessageResponse(::google::protobuf::Arena* arena, const MessageResponse& from);
  MessageResponse(::google::protobuf::Arena* arena, MessageResponse&& from) noexcept
      : MessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
  bool has_message() const;
  void clear_message() ;
  const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& message() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::mavlink_direct::MavlinkMessage* release_message();
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* mutable_message();
  void set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value);
  void unsafe_arena_set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value);
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* unsafe_arena_release_message();

  private:
  const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& _internal_message() const;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.MessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MessageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::mavlink_direct::MavlinkMessage* message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};
// -------------------------------------------------------------------

class LoadCustomXmlResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse) */ {
 public:
  inline LoadCustomXmlResponse() : LoadCustomXmlResponse(nullptr) {}
  ~LoadCustomXmlResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoadCustomXmlResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoadCustomXmlResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadCustomXmlResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadCustomXmlResponse(const LoadCustomXmlResponse& from) : LoadCustomXmlResponse(nullptr, from) {}
  inline LoadCustomXmlResponse(LoadCustomXmlResponse&& from) noexcept
      : LoadCustomXmlResponse(nullptr, std::move(from)) {}
  inline LoadCustomXmlResponse& operator=(const LoadCustomXmlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadCustomXmlResponse& operator=(LoadCustomXmlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadCustomXmlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadCustomXmlResponse* internal_default_instance() {
    return reinterpret_cast<const LoadCustomXmlResponse*>(
        &_LoadCustomXmlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LoadCustomXmlResponse& a, LoadCustomXmlResponse& b) { a.Swap(&b); }
  inline void Swap(LoadCustomXmlResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadCustomXmlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadCustomXmlResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoadCustomXmlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadCustomXmlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadCustomXmlResponse& from) { LoadCustomXmlResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoadCustomXmlResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse"; }

 protected:
  explicit LoadCustomXmlResponse(::google::protobuf::Arena* arena);
  LoadCustomXmlResponse(::google::protobuf::Arena* arena, const LoadCustomXmlResponse& from);
  LoadCustomXmlResponse(::google::protobuf::Arena* arena, LoadCustomXmlResponse&& from) noexcept
      : LoadCustomXmlResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMavlinkDirectResultFieldNumber = 1,
  };
  // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
  bool has_mavlink_direct_result() const;
  void clear_mavlink_direct_result() ;
  const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& mavlink_direct_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* release_mavlink_direct_result();
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* mutable_mavlink_direct_result();
  void set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value);
  void unsafe_arena_set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value);
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* unsafe_arena_release_mavlink_direct_result();

  private:
  const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& _internal_mavlink_direct_result() const;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* _internal_mutable_mavlink_direct_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadCustomXmlResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* mavlink_direct_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SendMessageRequest

// .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
inline bool SendMessageRequest::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_ != nullptr);
  return value;
}
inline void SendMessageRequest::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& SendMessageRequest::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::mavlink_direct::MavlinkMessage* p = _impl_.message_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::mavlink_direct::MavlinkMessage&>(::mavsdk::rpc::mavlink_direct::_MavlinkMessage_default_instance_);
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& SendMessageRequest::message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.SendMessageRequest.message)
  return _internal_message();
}
inline void SendMessageRequest::unsafe_arena_set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_);
  }
  _impl_.message_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.mavlink_direct.SendMessageRequest.message)
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* SendMessageRequest::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* released = _impl_.message_;
  _impl_.message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* SendMessageRequest::unsafe_arena_release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.SendMessageRequest.message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* temp = _impl_.message_;
  _impl_.message_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* SendMessageRequest::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(GetArena());
    _impl_.message_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkMessage*>(p);
  }
  return _impl_.message_;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* SendMessageRequest::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* _msg = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.SendMessageRequest.message)
  return _msg;
}
inline void SendMessageRequest::set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.SendMessageRequest.message)
}

// -------------------------------------------------------------------

// SendMessageResponse

// .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
inline bool SendMessageResponse::has_mavlink_direct_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mavlink_direct_result_ != nullptr);
  return value;
}
inline void SendMessageResponse::clear_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mavlink_direct_result_ != nullptr) _impl_.mavlink_direct_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& SendMessageResponse::_internal_mavlink_direct_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* p = _impl_.mavlink_direct_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult&>(::mavsdk::rpc::mavlink_direct::_MavlinkDirectResult_default_instance_);
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& SendMessageResponse::mavlink_direct_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.SendMessageResponse.mavlink_direct_result)
  return _internal_mavlink_direct_result();
}
inline void SendMessageResponse::unsafe_arena_set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mavlink_direct_result_);
  }
  _impl_.mavlink_direct_result_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.mavlink_direct.SendMessageResponse.mavlink_direct_result)
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* SendMessageResponse::release_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* released = _impl_.mavlink_direct_result_;
  _impl_.mavlink_direct_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* SendMessageResponse::unsafe_arena_release_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.SendMessageResponse.mavlink_direct_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* temp = _impl_.mavlink_direct_result_;
  _impl_.mavlink_direct_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* SendMessageResponse::_internal_mutable_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mavlink_direct_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(GetArena());
    _impl_.mavlink_direct_result_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult*>(p);
  }
  return _impl_.mavlink_direct_result_;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* SendMessageResponse::mutable_mavlink_direct_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* _msg = _internal_mutable_mavlink_direct_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.SendMessageResponse.mavlink_direct_result)
  return _msg;
}
inline void SendMessageResponse::set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mavlink_direct_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.mavlink_direct_result_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.SendMessageResponse.mavlink_direct_result)
}

// -------------------------------------------------------------------

// SubscribeMessageRequest

// string message_name = 1;
inline void SubscribeMessageRequest::clear_message_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.ClearToEmpty();
}
inline const std::string& SubscribeMessageRequest::message_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest.message_name)
  return _internal_message_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeMessageRequest::set_message_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest.message_name)
}
inline std::string* SubscribeMessageRequest::mutable_message_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest.message_name)
  return _s;
}
inline const std::string& SubscribeMessageRequest::_internal_message_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_name_.Get();
}
inline void SubscribeMessageRequest::_internal_set_message_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.Set(value, GetArena());
}
inline std::string* SubscribeMessageRequest::_internal_mutable_message_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_name_.Mutable( GetArena());
}
inline std::string* SubscribeMessageRequest::release_message_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest.message_name)
  return _impl_.message_name_.Release();
}
inline void SubscribeMessageRequest::set_allocated_message_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_name_.IsDefault()) {
    _impl_.message_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest.message_name)
}

// -------------------------------------------------------------------

// MessageResponse

// .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
inline bool MessageResponse::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_ != nullptr);
  return value;
}
inline void MessageResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& MessageResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::mavlink_direct::MavlinkMessage* p = _impl_.message_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::mavlink_direct::MavlinkMessage&>(::mavsdk::rpc::mavlink_direct::_MavlinkMessage_default_instance_);
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& MessageResponse::message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MessageResponse.message)
  return _internal_message();
}
inline void MessageResponse::unsafe_arena_set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_);
  }
  _impl_.message_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.mavlink_direct.MessageResponse.message)
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* MessageResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* released = _impl_.message_;
  _impl_.message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* MessageResponse::unsafe_arena_release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.MessageResponse.message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* temp = _impl_.message_;
  _impl_.message_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* MessageResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(GetArena());
    _impl_.message_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkMessage*>(p);
  }
  return _impl_.message_;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkMessage* MessageResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkMessage* _msg = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.MessageResponse.message)
  return _msg;
}
inline void MessageResponse::set_allocated_message(::mavsdk::rpc::mavlink_direct::MavlinkMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.MessageResponse.message)
}

// -------------------------------------------------------------------

// LoadCustomXmlRequest

// string xml_content = 1;
inline void LoadCustomXmlRequest::clear_xml_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xml_content_.ClearToEmpty();
}
inline const std::string& LoadCustomXmlRequest::xml_content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest.xml_content)
  return _internal_xml_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoadCustomXmlRequest::set_xml_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xml_content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest.xml_content)
}
inline std::string* LoadCustomXmlRequest::mutable_xml_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_xml_content();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest.xml_content)
  return _s;
}
inline const std::string& LoadCustomXmlRequest::_internal_xml_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xml_content_.Get();
}
inline void LoadCustomXmlRequest::_internal_set_xml_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xml_content_.Set(value, GetArena());
}
inline std::string* LoadCustomXmlRequest::_internal_mutable_xml_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.xml_content_.Mutable( GetArena());
}
inline std::string* LoadCustomXmlRequest::release_xml_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest.xml_content)
  return _impl_.xml_content_.Release();
}
inline void LoadCustomXmlRequest::set_allocated_xml_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xml_content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.xml_content_.IsDefault()) {
    _impl_.xml_content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest.xml_content)
}

// -------------------------------------------------------------------

// LoadCustomXmlResponse

// .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
inline bool LoadCustomXmlResponse::has_mavlink_direct_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mavlink_direct_result_ != nullptr);
  return value;
}
inline void LoadCustomXmlResponse::clear_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mavlink_direct_result_ != nullptr) _impl_.mavlink_direct_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& LoadCustomXmlResponse::_internal_mavlink_direct_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* p = _impl_.mavlink_direct_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult&>(::mavsdk::rpc::mavlink_direct::_MavlinkDirectResult_default_instance_);
}
inline const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& LoadCustomXmlResponse::mavlink_direct_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse.mavlink_direct_result)
  return _internal_mavlink_direct_result();
}
inline void LoadCustomXmlResponse::unsafe_arena_set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mavlink_direct_result_);
  }
  _impl_.mavlink_direct_result_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse.mavlink_direct_result)
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* LoadCustomXmlResponse::release_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* released = _impl_.mavlink_direct_result_;
  _impl_.mavlink_direct_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* LoadCustomXmlResponse::unsafe_arena_release_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse.mavlink_direct_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* temp = _impl_.mavlink_direct_result_;
  _impl_.mavlink_direct_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* LoadCustomXmlResponse::_internal_mutable_mavlink_direct_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mavlink_direct_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(GetArena());
    _impl_.mavlink_direct_result_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult*>(p);
  }
  return _impl_.mavlink_direct_result_;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* LoadCustomXmlResponse::mutable_mavlink_direct_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* _msg = _internal_mutable_mavlink_direct_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse.mavlink_direct_result)
  return _msg;
}
inline void LoadCustomXmlResponse::set_allocated_mavlink_direct_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mavlink_direct_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.mavlink_direct_result_ = reinterpret_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse.mavlink_direct_result)
}

// -------------------------------------------------------------------

// MavlinkMessage

// string message_name = 1;
inline void MavlinkMessage::clear_message_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.ClearToEmpty();
}
inline const std::string& MavlinkMessage::message_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkMessage.message_name)
  return _internal_message_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MavlinkMessage::set_message_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkMessage.message_name)
}
inline std::string* MavlinkMessage::mutable_message_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.MavlinkMessage.message_name)
  return _s;
}
inline const std::string& MavlinkMessage::_internal_message_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_name_.Get();
}
inline void MavlinkMessage::_internal_set_message_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.Set(value, GetArena());
}
inline std::string* MavlinkMessage::_internal_mutable_message_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_name_.Mutable( GetArena());
}
inline std::string* MavlinkMessage::release_message_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.MavlinkMessage.message_name)
  return _impl_.message_name_.Release();
}
inline void MavlinkMessage::set_allocated_message_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_name_.IsDefault()) {
    _impl_.message_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.MavlinkMessage.message_name)
}

// uint32 system_id = 2;
inline void MavlinkMessage::clear_system_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_id_ = 0u;
}
inline ::uint32_t MavlinkMessage::system_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkMessage.system_id)
  return _internal_system_id();
}
inline void MavlinkMessage::set_system_id(::uint32_t value) {
  _internal_set_system_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkMessage.system_id)
}
inline ::uint32_t MavlinkMessage::_internal_system_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.system_id_;
}
inline void MavlinkMessage::_internal_set_system_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_id_ = value;
}

// uint32 component_id = 3;
inline void MavlinkMessage::clear_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = 0u;
}
inline ::uint32_t MavlinkMessage::component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkMessage.component_id)
  return _internal_component_id();
}
inline void MavlinkMessage::set_component_id(::uint32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkMessage.component_id)
}
inline ::uint32_t MavlinkMessage::_internal_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_id_;
}
inline void MavlinkMessage::_internal_set_component_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_id_ = value;
}

// uint32 target_system_id = 4;
inline void MavlinkMessage::clear_target_system_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_system_id_ = 0u;
}
inline ::uint32_t MavlinkMessage::target_system_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkMessage.target_system_id)
  return _internal_target_system_id();
}
inline void MavlinkMessage::set_target_system_id(::uint32_t value) {
  _internal_set_target_system_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkMessage.target_system_id)
}
inline ::uint32_t MavlinkMessage::_internal_target_system_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_system_id_;
}
inline void MavlinkMessage::_internal_set_target_system_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_system_id_ = value;
}

// uint32 target_component_id = 5;
inline void MavlinkMessage::clear_target_component_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_component_id_ = 0u;
}
inline ::uint32_t MavlinkMessage::target_component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkMessage.target_component_id)
  return _internal_target_component_id();
}
inline void MavlinkMessage::set_target_component_id(::uint32_t value) {
  _internal_set_target_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkMessage.target_component_id)
}
inline ::uint32_t MavlinkMessage::_internal_target_component_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_component_id_;
}
inline void MavlinkMessage::_internal_set_target_component_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_component_id_ = value;
}

// string fields_json = 6;
inline void MavlinkMessage::clear_fields_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_json_.ClearToEmpty();
}
inline const std::string& MavlinkMessage::fields_json() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkMessage.fields_json)
  return _internal_fields_json();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MavlinkMessage::set_fields_json(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_json_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkMessage.fields_json)
}
inline std::string* MavlinkMessage::mutable_fields_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fields_json();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.MavlinkMessage.fields_json)
  return _s;
}
inline const std::string& MavlinkMessage::_internal_fields_json() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fields_json_.Get();
}
inline void MavlinkMessage::_internal_set_fields_json(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_json_.Set(value, GetArena());
}
inline std::string* MavlinkMessage::_internal_mutable_fields_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fields_json_.Mutable( GetArena());
}
inline std::string* MavlinkMessage::release_fields_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.MavlinkMessage.fields_json)
  return _impl_.fields_json_.Release();
}
inline void MavlinkMessage::set_allocated_fields_json(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fields_json_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fields_json_.IsDefault()) {
    _impl_.fields_json_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.MavlinkMessage.fields_json)
}

// -------------------------------------------------------------------

// MavlinkDirectResult

// .mavsdk.rpc.mavlink_direct.MavlinkDirectResult.Result result = 1;
inline void MavlinkDirectResult::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result MavlinkDirectResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result)
  return _internal_result();
}
inline void MavlinkDirectResult::set_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result)
}
inline ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result MavlinkDirectResult::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result>(_impl_.result_);
}
inline void MavlinkDirectResult::_internal_set_result(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string result_str = 2;
inline void MavlinkDirectResult::clear_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& MavlinkDirectResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MavlinkDirectResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result_str)
}
inline std::string* MavlinkDirectResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result_str)
  return _s;
}
inline const std::string& MavlinkDirectResult::_internal_result_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_str_.Get();
}
inline void MavlinkDirectResult::_internal_set_result_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* MavlinkDirectResult::_internal_mutable_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* MavlinkDirectResult::release_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result_str)
  return _impl_.result_str_.Release();
}
inline void MavlinkDirectResult::set_allocated_result_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.result_str_.IsDefault()) {
    _impl_.result_str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace mavlink_direct
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result>() {
  return ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // mavlink_5fdirect_2fmavlink_5fdirect_2eproto_2epb_2eh
