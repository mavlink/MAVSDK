// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mavlink_direct/mavlink_direct.proto
// Protobuf C++ Version: 5.29.1

#include "mavlink_direct/mavlink_direct.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace mavlink_direct {

inline constexpr SubscribeMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeMessageRequest::SubscribeMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeMessageRequestDefaultTypeInternal() {}
  union {
    SubscribeMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeMessageRequestDefaultTypeInternal _SubscribeMessageRequest_default_instance_;

inline constexpr MavlinkMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fields_json_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        system_id_{0u},
        component_id_{0u},
        target_system_id_{0u},
        target_component_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MavlinkMessage::MavlinkMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MavlinkMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MavlinkMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MavlinkMessageDefaultTypeInternal() {}
  union {
    MavlinkMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MavlinkMessageDefaultTypeInternal _MavlinkMessage_default_instance_;

inline constexpr MavlinkDirectResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MavlinkDirectResult::MavlinkDirectResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MavlinkDirectResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MavlinkDirectResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MavlinkDirectResultDefaultTypeInternal() {}
  union {
    MavlinkDirectResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MavlinkDirectResultDefaultTypeInternal _MavlinkDirectResult_default_instance_;

inline constexpr LoadCustomXmlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : xml_content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoadCustomXmlRequest::LoadCustomXmlRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoadCustomXmlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadCustomXmlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadCustomXmlRequestDefaultTypeInternal() {}
  union {
    LoadCustomXmlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadCustomXmlRequestDefaultTypeInternal _LoadCustomXmlRequest_default_instance_;

inline constexpr SendMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mavlink_direct_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageResponse::SendMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageResponseDefaultTypeInternal() {}
  union {
    SendMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageResponseDefaultTypeInternal _SendMessageResponse_default_instance_;

inline constexpr SendMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageRequest::SendMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageRequestDefaultTypeInternal() {}
  union {
    SendMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;

inline constexpr MessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MessageResponse::MessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageResponseDefaultTypeInternal() {}
  union {
    MessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageResponseDefaultTypeInternal _MessageResponse_default_instance_;

inline constexpr LoadCustomXmlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mavlink_direct_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LoadCustomXmlResponse::LoadCustomXmlResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoadCustomXmlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadCustomXmlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadCustomXmlResponseDefaultTypeInternal() {}
  union {
    LoadCustomXmlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadCustomXmlResponseDefaultTypeInternal _LoadCustomXmlResponse_default_instance_;
}  // namespace mavlink_direct
}  // namespace rpc
}  // namespace mavsdk
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_mavlink_5fdirect_2fmavlink_5fdirect_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mavlink_5fdirect_2fmavlink_5fdirect_2eproto = nullptr;
const ::uint32_t
    TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SendMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SendMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SendMessageRequest, _impl_.message_),
        0,
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SendMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SendMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SendMessageResponse, _impl_.mavlink_direct_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SubscribeMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::SubscribeMessageRequest, _impl_.message_name_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MessageResponse, _impl_.message_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::LoadCustomXmlRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::LoadCustomXmlRequest, _impl_.xml_content_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::LoadCustomXmlResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::LoadCustomXmlResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::LoadCustomXmlResponse, _impl_.mavlink_direct_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _impl_.message_name_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _impl_.system_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _impl_.component_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _impl_.target_system_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _impl_.target_component_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkMessage, _impl_.fields_json_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::mavlink_direct::SendMessageRequest)},
        {10, 19, -1, sizeof(::mavsdk::rpc::mavlink_direct::SendMessageResponse)},
        {20, -1, -1, sizeof(::mavsdk::rpc::mavlink_direct::SubscribeMessageRequest)},
        {29, 38, -1, sizeof(::mavsdk::rpc::mavlink_direct::MessageResponse)},
        {39, -1, -1, sizeof(::mavsdk::rpc::mavlink_direct::LoadCustomXmlRequest)},
        {48, 57, -1, sizeof(::mavsdk::rpc::mavlink_direct::LoadCustomXmlResponse)},
        {58, -1, -1, sizeof(::mavsdk::rpc::mavlink_direct::MavlinkMessage)},
        {72, -1, -1, sizeof(::mavsdk::rpc::mavlink_direct::MavlinkDirectResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::mavlink_direct::_SendMessageRequest_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_SendMessageResponse_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_SubscribeMessageRequest_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_MessageResponse_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_LoadCustomXmlRequest_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_LoadCustomXmlResponse_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_MavlinkMessage_default_instance_._instance,
    &::mavsdk::rpc::mavlink_direct::_MavlinkDirectResult_default_instance_._instance,
};
const char descriptor_table_protodef_mavlink_5fdirect_2fmavlink_5fdirect_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#mavlink_direct/mavlink_direct.proto\022\031m"
    "avsdk.rpc.mavlink_direct\032\024mavsdk_options"
    ".proto\"P\n\022SendMessageRequest\022:\n\007message\030"
    "\001 \001(\0132).mavsdk.rpc.mavlink_direct.Mavlin"
    "kMessage\"d\n\023SendMessageResponse\022M\n\025mavli"
    "nk_direct_result\030\001 \001(\0132..mavsdk.rpc.mavl"
    "ink_direct.MavlinkDirectResult\"/\n\027Subscr"
    "ibeMessageRequest\022\024\n\014message_name\030\001 \001(\t\""
    "M\n\017MessageResponse\022:\n\007message\030\001 \001(\0132).ma"
    "vsdk.rpc.mavlink_direct.MavlinkMessage\"+"
    "\n\024LoadCustomXmlRequest\022\023\n\013xml_content\030\001 "
    "\001(\t\"f\n\025LoadCustomXmlResponse\022M\n\025mavlink_"
    "direct_result\030\001 \001(\0132..mavsdk.rpc.mavlink"
    "_direct.MavlinkDirectResult\"\233\001\n\016MavlinkM"
    "essage\022\024\n\014message_name\030\001 \001(\t\022\021\n\tsystem_i"
    "d\030\002 \001(\r\022\024\n\014component_id\030\003 \001(\r\022\030\n\020target_"
    "system_id\030\004 \001(\r\022\033\n\023target_component_id\030\005"
    " \001(\r\022\023\n\013fields_json\030\006 \001(\t\"\262\002\n\023MavlinkDir"
    "ectResult\022E\n\006result\030\001 \001(\01625.mavsdk.rpc.m"
    "avlink_direct.MavlinkDirectResult.Result"
    "\022\022\n\nresult_str\030\002 \001(\t\"\277\001\n\006Result\022\022\n\016RESUL"
    "T_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\020\n\014RESUL"
    "T_ERROR\020\002\022\032\n\026RESULT_INVALID_MESSAGE\020\003\022\030\n"
    "\024RESULT_INVALID_FIELD\020\004\022\033\n\027RESULT_CONNEC"
    "TION_ERROR\020\005\022\024\n\020RESULT_NO_SYSTEM\020\006\022\022\n\016RE"
    "SULT_TIMEOUT\020\0072\200\003\n\024MavlinkDirectService\022"
    "r\n\013SendMessage\022-.mavsdk.rpc.mavlink_dire"
    "ct.SendMessageRequest\032..mavsdk.rpc.mavli"
    "nk_direct.SendMessageResponse\"\004\200\265\030\001\022z\n\020S"
    "ubscribeMessage\0222.mavsdk.rpc.mavlink_dir"
    "ect.SubscribeMessageRequest\032*.mavsdk.rpc"
    ".mavlink_direct.MessageResponse\"\004\200\265\030\0000\001\022"
    "x\n\rLoadCustomXml\022/.mavsdk.rpc.mavlink_di"
    "rect.LoadCustomXmlRequest\0320.mavsdk.rpc.m"
    "avlink_direct.LoadCustomXmlResponse\"\004\200\265\030"
    "\001B.\n\030io.mavsdk.mavlink_directB\022MavlinkDi"
    "rectProtob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto = {
    false,
    false,
    1457,
    descriptor_table_protodef_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    "mavlink_direct/mavlink_direct.proto",
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto_once,
    descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_mavlink_5fdirect_2fmavlink_5fdirect_2eproto::offsets,
    file_level_enum_descriptors_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    file_level_service_descriptors_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
};
namespace mavsdk {
namespace rpc {
namespace mavlink_direct {
const ::google::protobuf::EnumDescriptor* MavlinkDirectResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto);
  return file_level_enum_descriptors_mavlink_5fdirect_2fmavlink_5fdirect_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MavlinkDirectResult_Result_internal_data_[] = {
    524288u, 0u, };
bool MavlinkDirectResult_Result_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_UNKNOWN;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_SUCCESS;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_ERROR;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_INVALID_MESSAGE;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_INVALID_FIELD;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_CONNECTION_ERROR;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_NO_SYSTEM;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::RESULT_TIMEOUT;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::Result_MIN;
constexpr MavlinkDirectResult_Result MavlinkDirectResult::Result_MAX;
constexpr int MavlinkDirectResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SendMessageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._has_bits_);
};

SendMessageRequest::SendMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.SendMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::SendMessageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageRequest::SendMessageRequest(
    ::google::protobuf::Arena* arena,
    const SendMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(
                              arena, *from._impl_.message_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.SendMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.message_ = {};
}
SendMessageRequest::~SendMessageRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.SendMessageRequest)
  SharedDtor(*this);
}
inline void SendMessageRequest::SharedDtor(MessageLite& self) {
  SendMessageRequest& this_ = static_cast<SendMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_;
  this_._impl_.~Impl_();
}

inline void* SendMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendMessageRequest(arena);
}
constexpr auto SendMessageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SendMessageRequest),
                                            alignof(SendMessageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendMessageRequest>(), &SendMessageRequest::ByteSizeLong,
            &SendMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._cached_size_),
        false,
    },
    &SendMessageRequest::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::SendMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MavlinkMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.SendMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.message_ != nullptr);
    _impl_.message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendMessageRequest& this_ = static_cast<const SendMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.SendMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_, this_._impl_.message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.SendMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendMessageRequest::ByteSizeLong(const MessageLite& base) {
          const SendMessageRequest& this_ = static_cast<const SendMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendMessageRequest::ByteSizeLong() const {
          const SendMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.SendMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.SendMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.message_ != nullptr);
    if (_this->_impl_.message_ == nullptr) {
      _this->_impl_.message_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(arena, *from._impl_.message_);
    } else {
      _this->_impl_.message_->MergeFrom(*from._impl_.message_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageRequest::CopyFrom(const SendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.SendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageRequest::InternalSwap(SendMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.message_, other->_impl_.message_);
}

::google::protobuf::Metadata SendMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendMessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_._has_bits_);
};

SendMessageResponse::SendMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.SendMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::SendMessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageResponse::SendMessageResponse(
    ::google::protobuf::Arena* arena,
    const SendMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mavlink_direct_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(
                              arena, *from._impl_.mavlink_direct_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.SendMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mavlink_direct_result_ = {};
}
SendMessageResponse::~SendMessageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.SendMessageResponse)
  SharedDtor(*this);
}
inline void SendMessageResponse::SharedDtor(MessageLite& self) {
  SendMessageResponse& this_ = static_cast<SendMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mavlink_direct_result_;
  this_._impl_.~Impl_();
}

inline void* SendMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendMessageResponse(arena);
}
constexpr auto SendMessageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SendMessageResponse),
                                            alignof(SendMessageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendMessageResponse>(), &SendMessageResponse::ByteSizeLong,
            &SendMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_._cached_size_),
        false,
    },
    &SendMessageResponse::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::SendMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.mavlink_direct_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.mavlink_direct_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.SendMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mavlink_direct_result_ != nullptr);
    _impl_.mavlink_direct_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendMessageResponse& this_ = static_cast<const SendMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.SendMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.mavlink_direct_result_, this_._impl_.mavlink_direct_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.SendMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendMessageResponse::ByteSizeLong(const MessageLite& base) {
          const SendMessageResponse& this_ = static_cast<const SendMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendMessageResponse::ByteSizeLong() const {
          const SendMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.SendMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mavlink_direct_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageResponse*>(&to_msg);
  auto& from = static_cast<const SendMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.SendMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.mavlink_direct_result_ != nullptr);
    if (_this->_impl_.mavlink_direct_result_ == nullptr) {
      _this->_impl_.mavlink_direct_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(arena, *from._impl_.mavlink_direct_result_);
    } else {
      _this->_impl_.mavlink_direct_result_->MergeFrom(*from._impl_.mavlink_direct_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageResponse::CopyFrom(const SendMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.SendMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageResponse::InternalSwap(SendMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mavlink_direct_result_, other->_impl_.mavlink_direct_result_);
}

::google::protobuf::Metadata SendMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeMessageRequest::_Internal {
 public:
};

SubscribeMessageRequest::SubscribeMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::SubscribeMessageRequest& from_msg)
      : message_name_(arena, from.message_name_),
        _cached_size_{0} {}

SubscribeMessageRequest::SubscribeMessageRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_name_(arena),
        _cached_size_{0} {}

inline void SubscribeMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeMessageRequest::~SubscribeMessageRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
  SharedDtor(*this);
}
inline void SubscribeMessageRequest::SharedDtor(MessageLite& self) {
  SubscribeMessageRequest& this_ = static_cast<SubscribeMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeMessageRequest(arena);
}
constexpr auto SubscribeMessageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeMessageRequest),
                                            alignof(SubscribeMessageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeMessageRequest>(), &SubscribeMessageRequest::ByteSizeLong,
            &SubscribeMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeMessageRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeMessageRequest::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 70, 2> SubscribeMessageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::SubscribeMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeMessageRequest, _impl_.message_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_name = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeMessageRequest, _impl_.message_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\14\0\0\0\0\0\0"
    "mavsdk.rpc.mavlink_direct.SubscribeMessageRequest"
    "message_name"
  }},
};

PROTOBUF_NOINLINE void SubscribeMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeMessageRequest& this_ = static_cast<const SubscribeMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message_name = 1;
          if (!this_._internal_message_name().empty()) {
            const std::string& _s = this_._internal_message_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.mavlink_direct.SubscribeMessageRequest.message_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeMessageRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeMessageRequest& this_ = static_cast<const SubscribeMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeMessageRequest::ByteSizeLong() const {
          const SubscribeMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string message_name = 1;
            if (!this_._internal_message_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeMessageRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_name().empty()) {
    _this->_internal_set_message_name(from._internal_message_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeMessageRequest::CopyFrom(const SubscribeMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.SubscribeMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeMessageRequest::InternalSwap(SubscribeMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_name_, &other->_impl_.message_name_, arena);
}

::google::protobuf::Metadata SubscribeMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_._has_bits_);
};

MessageResponse::MessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.MessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE MessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::MessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MessageResponse::MessageResponse(
    ::google::protobuf::Arena* arena,
    const MessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(
                              arena, *from._impl_.message_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.MessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE MessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.message_ = {};
}
MessageResponse::~MessageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.MessageResponse)
  SharedDtor(*this);
}
inline void MessageResponse::SharedDtor(MessageLite& self) {
  MessageResponse& this_ = static_cast<MessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_;
  this_._impl_.~Impl_();
}

inline void* MessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageResponse(arena);
}
constexpr auto MessageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MessageResponse),
                                            alignof(MessageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageResponse>(), &MessageResponse::ByteSizeLong,
            &MessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_._cached_size_),
        false,
    },
    &MessageResponse::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
    {PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MavlinkMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.MessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.message_ != nullptr);
    _impl_.message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageResponse& this_ = static_cast<const MessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.MessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_, this_._impl_.message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.MessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageResponse::ByteSizeLong(const MessageLite& base) {
          const MessageResponse& this_ = static_cast<const MessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageResponse::ByteSizeLong() const {
          const MessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.MessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.mavlink_direct.MavlinkMessage message = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageResponse*>(&to_msg);
  auto& from = static_cast<const MessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.MessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.message_ != nullptr);
    if (_this->_impl_.message_ == nullptr) {
      _this->_impl_.message_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(arena, *from._impl_.message_);
    } else {
      _this->_impl_.message_->MergeFrom(*from._impl_.message_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageResponse::CopyFrom(const MessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.MessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageResponse::InternalSwap(MessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.message_, other->_impl_.message_);
}

::google::protobuf::Metadata MessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoadCustomXmlRequest::_Internal {
 public:
};

LoadCustomXmlRequest::LoadCustomXmlRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
}
inline PROTOBUF_NDEBUG_INLINE LoadCustomXmlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::LoadCustomXmlRequest& from_msg)
      : xml_content_(arena, from.xml_content_),
        _cached_size_{0} {}

LoadCustomXmlRequest::LoadCustomXmlRequest(
    ::google::protobuf::Arena* arena,
    const LoadCustomXmlRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoadCustomXmlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
}
inline PROTOBUF_NDEBUG_INLINE LoadCustomXmlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : xml_content_(arena),
        _cached_size_{0} {}

inline void LoadCustomXmlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoadCustomXmlRequest::~LoadCustomXmlRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
  SharedDtor(*this);
}
inline void LoadCustomXmlRequest::SharedDtor(MessageLite& self) {
  LoadCustomXmlRequest& this_ = static_cast<LoadCustomXmlRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.xml_content_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LoadCustomXmlRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoadCustomXmlRequest(arena);
}
constexpr auto LoadCustomXmlRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LoadCustomXmlRequest),
                                            alignof(LoadCustomXmlRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoadCustomXmlRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoadCustomXmlRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoadCustomXmlRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoadCustomXmlRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoadCustomXmlRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoadCustomXmlRequest>(), &LoadCustomXmlRequest::ByteSizeLong,
            &LoadCustomXmlRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoadCustomXmlRequest, _impl_._cached_size_),
        false,
    },
    &LoadCustomXmlRequest::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoadCustomXmlRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 66, 2> LoadCustomXmlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::LoadCustomXmlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string xml_content = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LoadCustomXmlRequest, _impl_.xml_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string xml_content = 1;
    {PROTOBUF_FIELD_OFFSET(LoadCustomXmlRequest, _impl_.xml_content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\13\0\0\0\0\0\0"
    "mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest"
    "xml_content"
  }},
};

PROTOBUF_NOINLINE void LoadCustomXmlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xml_content_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoadCustomXmlRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoadCustomXmlRequest& this_ = static_cast<const LoadCustomXmlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoadCustomXmlRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoadCustomXmlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string xml_content = 1;
          if (!this_._internal_xml_content().empty()) {
            const std::string& _s = this_._internal_xml_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest.xml_content");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoadCustomXmlRequest::ByteSizeLong(const MessageLite& base) {
          const LoadCustomXmlRequest& this_ = static_cast<const LoadCustomXmlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoadCustomXmlRequest::ByteSizeLong() const {
          const LoadCustomXmlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string xml_content = 1;
            if (!this_._internal_xml_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_xml_content());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoadCustomXmlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoadCustomXmlRequest*>(&to_msg);
  auto& from = static_cast<const LoadCustomXmlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xml_content().empty()) {
    _this->_internal_set_xml_content(from._internal_xml_content());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadCustomXmlRequest::CopyFrom(const LoadCustomXmlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoadCustomXmlRequest::InternalSwap(LoadCustomXmlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.xml_content_, &other->_impl_.xml_content_, arena);
}

::google::protobuf::Metadata LoadCustomXmlRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoadCustomXmlResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LoadCustomXmlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LoadCustomXmlResponse, _impl_._has_bits_);
};

LoadCustomXmlResponse::LoadCustomXmlResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoadCustomXmlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::LoadCustomXmlResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LoadCustomXmlResponse::LoadCustomXmlResponse(
    ::google::protobuf::Arena* arena,
    const LoadCustomXmlResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoadCustomXmlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mavlink_direct_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(
                              arena, *from._impl_.mavlink_direct_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoadCustomXmlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadCustomXmlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mavlink_direct_result_ = {};
}
LoadCustomXmlResponse::~LoadCustomXmlResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
  SharedDtor(*this);
}
inline void LoadCustomXmlResponse::SharedDtor(MessageLite& self) {
  LoadCustomXmlResponse& this_ = static_cast<LoadCustomXmlResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mavlink_direct_result_;
  this_._impl_.~Impl_();
}

inline void* LoadCustomXmlResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoadCustomXmlResponse(arena);
}
constexpr auto LoadCustomXmlResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LoadCustomXmlResponse),
                                            alignof(LoadCustomXmlResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoadCustomXmlResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoadCustomXmlResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoadCustomXmlResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoadCustomXmlResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoadCustomXmlResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoadCustomXmlResponse>(), &LoadCustomXmlResponse::ByteSizeLong,
            &LoadCustomXmlResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoadCustomXmlResponse, _impl_._cached_size_),
        false,
    },
    &LoadCustomXmlResponse::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoadCustomXmlResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LoadCustomXmlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoadCustomXmlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::LoadCustomXmlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoadCustomXmlResponse, _impl_.mavlink_direct_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
    {PROTOBUF_FIELD_OFFSET(LoadCustomXmlResponse, _impl_.mavlink_direct_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LoadCustomXmlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mavlink_direct_result_ != nullptr);
    _impl_.mavlink_direct_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoadCustomXmlResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoadCustomXmlResponse& this_ = static_cast<const LoadCustomXmlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoadCustomXmlResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoadCustomXmlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.mavlink_direct_result_, this_._impl_.mavlink_direct_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoadCustomXmlResponse::ByteSizeLong(const MessageLite& base) {
          const LoadCustomXmlResponse& this_ = static_cast<const LoadCustomXmlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoadCustomXmlResponse::ByteSizeLong() const {
          const LoadCustomXmlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult mavlink_direct_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mavlink_direct_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoadCustomXmlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoadCustomXmlResponse*>(&to_msg);
  auto& from = static_cast<const LoadCustomXmlResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.mavlink_direct_result_ != nullptr);
    if (_this->_impl_.mavlink_direct_result_ == nullptr) {
      _this->_impl_.mavlink_direct_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(arena, *from._impl_.mavlink_direct_result_);
    } else {
      _this->_impl_.mavlink_direct_result_->MergeFrom(*from._impl_.mavlink_direct_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadCustomXmlResponse::CopyFrom(const LoadCustomXmlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.LoadCustomXmlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoadCustomXmlResponse::InternalSwap(LoadCustomXmlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mavlink_direct_result_, other->_impl_.mavlink_direct_result_);
}

::google::protobuf::Metadata LoadCustomXmlResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MavlinkMessage::_Internal {
 public:
};

MavlinkMessage::MavlinkMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.MavlinkMessage)
}
inline PROTOBUF_NDEBUG_INLINE MavlinkMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::MavlinkMessage& from_msg)
      : message_name_(arena, from.message_name_),
        fields_json_(arena, from.fields_json_),
        _cached_size_{0} {}

MavlinkMessage::MavlinkMessage(
    ::google::protobuf::Arena* arena,
    const MavlinkMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MavlinkMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, system_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, system_id_),
           offsetof(Impl_, target_component_id_) -
               offsetof(Impl_, system_id_) +
               sizeof(Impl_::target_component_id_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.MavlinkMessage)
}
inline PROTOBUF_NDEBUG_INLINE MavlinkMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_name_(arena),
        fields_json_(arena),
        _cached_size_{0} {}

inline void MavlinkMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, system_id_),
           0,
           offsetof(Impl_, target_component_id_) -
               offsetof(Impl_, system_id_) +
               sizeof(Impl_::target_component_id_));
}
MavlinkMessage::~MavlinkMessage() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.MavlinkMessage)
  SharedDtor(*this);
}
inline void MavlinkMessage::SharedDtor(MessageLite& self) {
  MavlinkMessage& this_ = static_cast<MavlinkMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_name_.Destroy();
  this_._impl_.fields_json_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MavlinkMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MavlinkMessage(arena);
}
constexpr auto MavlinkMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MavlinkMessage),
                                            alignof(MavlinkMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MavlinkMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MavlinkMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MavlinkMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MavlinkMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MavlinkMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MavlinkMessage>(), &MavlinkMessage::ByteSizeLong,
            &MavlinkMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_._cached_size_),
        false,
    },
    &MavlinkMessage::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MavlinkMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 72, 2> MavlinkMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MavlinkMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.message_name_)}},
    // uint32 system_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MavlinkMessage, _impl_.system_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.system_id_)}},
    // uint32 component_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MavlinkMessage, _impl_.component_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.component_id_)}},
    // uint32 target_system_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MavlinkMessage, _impl_.target_system_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.target_system_id_)}},
    // uint32 target_component_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MavlinkMessage, _impl_.target_component_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.target_component_id_)}},
    // string fields_json = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.fields_json_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_name = 1;
    {PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.message_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 system_id = 2;
    {PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.system_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 component_id = 3;
    {PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 target_system_id = 4;
    {PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.target_system_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 target_component_id = 5;
    {PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.target_component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string fields_json = 6;
    {PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.fields_json_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\14\0\0\0\0\13\0"
    "mavsdk.rpc.mavlink_direct.MavlinkMessage"
    "message_name"
    "fields_json"
  }},
};

PROTOBUF_NOINLINE void MavlinkMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.MavlinkMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_name_.ClearToEmpty();
  _impl_.fields_json_.ClearToEmpty();
  ::memset(&_impl_.system_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.target_component_id_) -
      reinterpret_cast<char*>(&_impl_.system_id_)) + sizeof(_impl_.target_component_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MavlinkMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MavlinkMessage& this_ = static_cast<const MavlinkMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MavlinkMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MavlinkMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.MavlinkMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message_name = 1;
          if (!this_._internal_message_name().empty()) {
            const std::string& _s = this_._internal_message_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.mavlink_direct.MavlinkMessage.message_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 system_id = 2;
          if (this_._internal_system_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_system_id(), target);
          }

          // uint32 component_id = 3;
          if (this_._internal_component_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_component_id(), target);
          }

          // uint32 target_system_id = 4;
          if (this_._internal_target_system_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_target_system_id(), target);
          }

          // uint32 target_component_id = 5;
          if (this_._internal_target_component_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_target_component_id(), target);
          }

          // string fields_json = 6;
          if (!this_._internal_fields_json().empty()) {
            const std::string& _s = this_._internal_fields_json();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.mavlink_direct.MavlinkMessage.fields_json");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.MavlinkMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MavlinkMessage::ByteSizeLong(const MessageLite& base) {
          const MavlinkMessage& this_ = static_cast<const MavlinkMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MavlinkMessage::ByteSizeLong() const {
          const MavlinkMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.MavlinkMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message_name = 1;
            if (!this_._internal_message_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_name());
            }
            // string fields_json = 6;
            if (!this_._internal_fields_json().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fields_json());
            }
            // uint32 system_id = 2;
            if (this_._internal_system_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_system_id());
            }
            // uint32 component_id = 3;
            if (this_._internal_component_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_component_id());
            }
            // uint32 target_system_id = 4;
            if (this_._internal_target_system_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_target_system_id());
            }
            // uint32 target_component_id = 5;
            if (this_._internal_target_component_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_target_component_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MavlinkMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MavlinkMessage*>(&to_msg);
  auto& from = static_cast<const MavlinkMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.MavlinkMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_name().empty()) {
    _this->_internal_set_message_name(from._internal_message_name());
  }
  if (!from._internal_fields_json().empty()) {
    _this->_internal_set_fields_json(from._internal_fields_json());
  }
  if (from._internal_system_id() != 0) {
    _this->_impl_.system_id_ = from._impl_.system_id_;
  }
  if (from._internal_component_id() != 0) {
    _this->_impl_.component_id_ = from._impl_.component_id_;
  }
  if (from._internal_target_system_id() != 0) {
    _this->_impl_.target_system_id_ = from._impl_.target_system_id_;
  }
  if (from._internal_target_component_id() != 0) {
    _this->_impl_.target_component_id_ = from._impl_.target_component_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MavlinkMessage::CopyFrom(const MavlinkMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.MavlinkMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MavlinkMessage::InternalSwap(MavlinkMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_name_, &other->_impl_.message_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fields_json_, &other->_impl_.fields_json_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.target_component_id_)
      + sizeof(MavlinkMessage::_impl_.target_component_id_)
      - PROTOBUF_FIELD_OFFSET(MavlinkMessage, _impl_.system_id_)>(
          reinterpret_cast<char*>(&_impl_.system_id_),
          reinterpret_cast<char*>(&other->_impl_.system_id_));
}

::google::protobuf::Metadata MavlinkMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MavlinkDirectResult::_Internal {
 public:
};

MavlinkDirectResult::MavlinkDirectResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
}
inline PROTOBUF_NDEBUG_INLINE MavlinkDirectResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::mavlink_direct::MavlinkDirectResult& from_msg)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

MavlinkDirectResult::MavlinkDirectResult(
    ::google::protobuf::Arena* arena,
    const MavlinkDirectResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MavlinkDirectResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
}
inline PROTOBUF_NDEBUG_INLINE MavlinkDirectResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void MavlinkDirectResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
MavlinkDirectResult::~MavlinkDirectResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
  SharedDtor(*this);
}
inline void MavlinkDirectResult::SharedDtor(MessageLite& self) {
  MavlinkDirectResult& this_ = static_cast<MavlinkDirectResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_str_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MavlinkDirectResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MavlinkDirectResult(arena);
}
constexpr auto MavlinkDirectResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MavlinkDirectResult),
                                            alignof(MavlinkDirectResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MavlinkDirectResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MavlinkDirectResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MavlinkDirectResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MavlinkDirectResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MavlinkDirectResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MavlinkDirectResult>(), &MavlinkDirectResult::ByteSizeLong,
            &MavlinkDirectResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MavlinkDirectResult, _impl_._cached_size_),
        false,
    },
    &MavlinkDirectResult::kDescriptorMethods,
    &descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MavlinkDirectResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> MavlinkDirectResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::mavlink_direct::MavlinkDirectResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkDirectResult, _impl_.result_str_)}},
    // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MavlinkDirectResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MavlinkDirectResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(MavlinkDirectResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(MavlinkDirectResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\12\0\0\0\0\0"
    "mavsdk.rpc.mavlink_direct.MavlinkDirectResult"
    "result_str"
  }},
};

PROTOBUF_NOINLINE void MavlinkDirectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MavlinkDirectResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MavlinkDirectResult& this_ = static_cast<const MavlinkDirectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MavlinkDirectResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MavlinkDirectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult.Result result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_result(), target);
          }

          // string result_str = 2;
          if (!this_._internal_result_str().empty()) {
            const std::string& _s = this_._internal_result_str();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.mavlink_direct.MavlinkDirectResult.result_str");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MavlinkDirectResult::ByteSizeLong(const MessageLite& base) {
          const MavlinkDirectResult& this_ = static_cast<const MavlinkDirectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MavlinkDirectResult::ByteSizeLong() const {
          const MavlinkDirectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string result_str = 2;
            if (!this_._internal_result_str().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result_str());
            }
            // .mavsdk.rpc.mavlink_direct.MavlinkDirectResult.Result result = 1;
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MavlinkDirectResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MavlinkDirectResult*>(&to_msg);
  auto& from = static_cast<const MavlinkDirectResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MavlinkDirectResult::CopyFrom(const MavlinkDirectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mavlink_direct.MavlinkDirectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MavlinkDirectResult::InternalSwap(MavlinkDirectResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata MavlinkDirectResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mavlink_direct
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mavlink_5fdirect_2fmavlink_5fdirect_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
