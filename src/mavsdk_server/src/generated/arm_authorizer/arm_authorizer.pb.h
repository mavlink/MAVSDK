// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arm_authorizer/arm_authorizer.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_arm_5fauthorizer_2farm_5fauthorizer_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_arm_5fauthorizer_2farm_5fauthorizer_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_arm_5fauthorizer_2farm_5fauthorizer_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_arm_5fauthorizer_2farm_5fauthorizer_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_arm_5fauthorizer_2farm_5fauthorizer_2eproto;
namespace mavsdk {
namespace rpc {
namespace arm_authorizer {
class RespondArmAuthorizationRequest;
struct RespondArmAuthorizationRequestDefaultTypeInternal;
extern RespondArmAuthorizationRequestDefaultTypeInternal _RespondArmAuthorizationRequest_default_instance_;
class RespondArmAuthorizationResponse;
struct RespondArmAuthorizationResponseDefaultTypeInternal;
extern RespondArmAuthorizationResponseDefaultTypeInternal _RespondArmAuthorizationResponse_default_instance_;
class SubscribeArmAuthorizationRequest;
struct SubscribeArmAuthorizationRequestDefaultTypeInternal;
extern SubscribeArmAuthorizationRequestDefaultTypeInternal _SubscribeArmAuthorizationRequest_default_instance_;
class SubscribeArmAuthorizationResponse;
struct SubscribeArmAuthorizationResponseDefaultTypeInternal;
extern SubscribeArmAuthorizationResponseDefaultTypeInternal _SubscribeArmAuthorizationResponse_default_instance_;
}  // namespace arm_authorizer
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace arm_authorizer {
enum ArmAuthorizerDecision : int {
  DECISION_ACCEPTED = 0,
  DECISION_TEMPORARILY_REJECTED = 1,
  DECISION_DENIED = 2,
  ArmAuthorizerDecision_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ArmAuthorizerDecision_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ArmAuthorizerDecision_IsValid(int value);
extern const uint32_t ArmAuthorizerDecision_internal_data_[];
constexpr ArmAuthorizerDecision ArmAuthorizerDecision_MIN = static_cast<ArmAuthorizerDecision>(0);
constexpr ArmAuthorizerDecision ArmAuthorizerDecision_MAX = static_cast<ArmAuthorizerDecision>(2);
constexpr int ArmAuthorizerDecision_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ArmAuthorizerDecision_descriptor();
template <typename T>
const std::string& ArmAuthorizerDecision_Name(T value) {
  static_assert(std::is_same<T, ArmAuthorizerDecision>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ArmAuthorizerDecision_Name().");
  return ArmAuthorizerDecision_Name(static_cast<ArmAuthorizerDecision>(value));
}
template <>
inline const std::string& ArmAuthorizerDecision_Name(ArmAuthorizerDecision value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ArmAuthorizerDecision_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ArmAuthorizerDecision_Parse(absl::string_view name, ArmAuthorizerDecision* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ArmAuthorizerDecision>(
      ArmAuthorizerDecision_descriptor(), name, value);
}
enum CommandAnswer : int {
  COMMAND_ANSWER_ACCEPTED = 0,
  COMMAND_ANSWER_FAILED = 1,
  CommandAnswer_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CommandAnswer_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CommandAnswer_IsValid(int value);
extern const uint32_t CommandAnswer_internal_data_[];
constexpr CommandAnswer CommandAnswer_MIN = static_cast<CommandAnswer>(0);
constexpr CommandAnswer CommandAnswer_MAX = static_cast<CommandAnswer>(1);
constexpr int CommandAnswer_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
CommandAnswer_descriptor();
template <typename T>
const std::string& CommandAnswer_Name(T value) {
  static_assert(std::is_same<T, CommandAnswer>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CommandAnswer_Name().");
  return CommandAnswer_Name(static_cast<CommandAnswer>(value));
}
template <>
inline const std::string& CommandAnswer_Name(CommandAnswer value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CommandAnswer_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool CommandAnswer_Parse(absl::string_view name, CommandAnswer* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandAnswer>(
      CommandAnswer_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SubscribeArmAuthorizationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse) */ {
 public:
  inline SubscribeArmAuthorizationResponse() : SubscribeArmAuthorizationResponse(nullptr) {}
  ~SubscribeArmAuthorizationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeArmAuthorizationResponse(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeArmAuthorizationResponse(const SubscribeArmAuthorizationResponse& from)
      : SubscribeArmAuthorizationResponse(nullptr, from) {}
  SubscribeArmAuthorizationResponse(SubscribeArmAuthorizationResponse&& from) noexcept
    : SubscribeArmAuthorizationResponse() {
    *this = ::std::move(from);
  }

  inline SubscribeArmAuthorizationResponse& operator=(const SubscribeArmAuthorizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeArmAuthorizationResponse& operator=(SubscribeArmAuthorizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeArmAuthorizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeArmAuthorizationResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeArmAuthorizationResponse*>(
               &_SubscribeArmAuthorizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SubscribeArmAuthorizationResponse& a, SubscribeArmAuthorizationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeArmAuthorizationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeArmAuthorizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeArmAuthorizationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeArmAuthorizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeArmAuthorizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubscribeArmAuthorizationResponse& from) {
    SubscribeArmAuthorizationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeArmAuthorizationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse";
  }
  protected:
  explicit SubscribeArmAuthorizationResponse(::google::protobuf::Arena* arena);
  SubscribeArmAuthorizationResponse(::google::protobuf::Arena* arena, const SubscribeArmAuthorizationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSystemIdFieldNumber = 1,
  };
  // uint32 system_id = 1;
  void clear_system_id() ;
  ::uint32_t system_id() const;
  void set_system_id(::uint32_t value);

  private:
  ::uint32_t _internal_system_id() const;
  void _internal_set_system_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t system_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_2farm_5fauthorizer_2eproto;
};// -------------------------------------------------------------------

class SubscribeArmAuthorizationRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationRequest) */ {
 public:
  inline SubscribeArmAuthorizationRequest() : SubscribeArmAuthorizationRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeArmAuthorizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeArmAuthorizationRequest(const SubscribeArmAuthorizationRequest& from)
      : SubscribeArmAuthorizationRequest(nullptr, from) {}
  SubscribeArmAuthorizationRequest(SubscribeArmAuthorizationRequest&& from) noexcept
    : SubscribeArmAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeArmAuthorizationRequest& operator=(const SubscribeArmAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeArmAuthorizationRequest& operator=(SubscribeArmAuthorizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeArmAuthorizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeArmAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeArmAuthorizationRequest*>(
               &_SubscribeArmAuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SubscribeArmAuthorizationRequest& a, SubscribeArmAuthorizationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeArmAuthorizationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeArmAuthorizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeArmAuthorizationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeArmAuthorizationRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeArmAuthorizationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeArmAuthorizationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationRequest";
  }
  protected:
  explicit SubscribeArmAuthorizationRequest(::google::protobuf::Arena* arena);
  SubscribeArmAuthorizationRequest(::google::protobuf::Arena* arena, const SubscribeArmAuthorizationRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_arm_5fauthorizer_2farm_5fauthorizer_2eproto;
};// -------------------------------------------------------------------

class RespondArmAuthorizationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationResponse) */ {
 public:
  inline RespondArmAuthorizationResponse() : RespondArmAuthorizationResponse(nullptr) {}
  ~RespondArmAuthorizationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondArmAuthorizationResponse(::google::protobuf::internal::ConstantInitialized);

  inline RespondArmAuthorizationResponse(const RespondArmAuthorizationResponse& from)
      : RespondArmAuthorizationResponse(nullptr, from) {}
  RespondArmAuthorizationResponse(RespondArmAuthorizationResponse&& from) noexcept
    : RespondArmAuthorizationResponse() {
    *this = ::std::move(from);
  }

  inline RespondArmAuthorizationResponse& operator=(const RespondArmAuthorizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondArmAuthorizationResponse& operator=(RespondArmAuthorizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondArmAuthorizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondArmAuthorizationResponse* internal_default_instance() {
    return reinterpret_cast<const RespondArmAuthorizationResponse*>(
               &_RespondArmAuthorizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RespondArmAuthorizationResponse& a, RespondArmAuthorizationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondArmAuthorizationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondArmAuthorizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondArmAuthorizationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondArmAuthorizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondArmAuthorizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondArmAuthorizationResponse& from) {
    RespondArmAuthorizationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondArmAuthorizationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.RespondArmAuthorizationResponse";
  }
  protected:
  explicit RespondArmAuthorizationResponse(::google::protobuf::Arena* arena);
  RespondArmAuthorizationResponse(::google::protobuf::Arena* arena, const RespondArmAuthorizationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandAnswerFieldNumber = 1,
  };
  // .mavsdk.rpc.arm_authorizer.CommandAnswer command_answer = 1;
  void clear_command_answer() ;
  ::mavsdk::rpc::arm_authorizer::CommandAnswer command_answer() const;
  void set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value);

  private:
  ::mavsdk::rpc::arm_authorizer::CommandAnswer _internal_command_answer() const;
  void _internal_set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int command_answer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_2farm_5fauthorizer_2eproto;
};// -------------------------------------------------------------------

class RespondArmAuthorizationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationRequest) */ {
 public:
  inline RespondArmAuthorizationRequest() : RespondArmAuthorizationRequest(nullptr) {}
  ~RespondArmAuthorizationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondArmAuthorizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline RespondArmAuthorizationRequest(const RespondArmAuthorizationRequest& from)
      : RespondArmAuthorizationRequest(nullptr, from) {}
  RespondArmAuthorizationRequest(RespondArmAuthorizationRequest&& from) noexcept
    : RespondArmAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline RespondArmAuthorizationRequest& operator=(const RespondArmAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondArmAuthorizationRequest& operator=(RespondArmAuthorizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondArmAuthorizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondArmAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const RespondArmAuthorizationRequest*>(
               &_RespondArmAuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RespondArmAuthorizationRequest& a, RespondArmAuthorizationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondArmAuthorizationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondArmAuthorizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondArmAuthorizationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondArmAuthorizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondArmAuthorizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondArmAuthorizationRequest& from) {
    RespondArmAuthorizationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondArmAuthorizationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.RespondArmAuthorizationRequest";
  }
  protected:
  explicit RespondArmAuthorizationRequest(::google::protobuf::Arena* arena);
  RespondArmAuthorizationRequest(::google::protobuf::Arena* arena, const RespondArmAuthorizationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArmAuthorizerDecisionFieldNumber = 1,
  };
  // .mavsdk.rpc.arm_authorizer.ArmAuthorizerDecision arm_authorizer_decision = 1;
  void clear_arm_authorizer_decision() ;
  ::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision arm_authorizer_decision() const;
  void set_arm_authorizer_decision(::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision value);

  private:
  ::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision _internal_arm_authorizer_decision() const;
  void _internal_set_arm_authorizer_decision(::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int arm_authorizer_decision_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_2farm_5fauthorizer_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubscribeArmAuthorizationRequest

// -------------------------------------------------------------------

// SubscribeArmAuthorizationResponse

// uint32 system_id = 1;
inline void SubscribeArmAuthorizationResponse::clear_system_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.system_id_ = 0u;
}
inline ::uint32_t SubscribeArmAuthorizationResponse::system_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse.system_id)
  return _internal_system_id();
}
inline void SubscribeArmAuthorizationResponse::set_system_id(::uint32_t value) {
  _internal_set_system_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse.system_id)
}
inline ::uint32_t SubscribeArmAuthorizationResponse::_internal_system_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.system_id_;
}
inline void SubscribeArmAuthorizationResponse::_internal_set_system_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.system_id_ = value;
}

// -------------------------------------------------------------------

// RespondArmAuthorizationRequest

// .mavsdk.rpc.arm_authorizer.ArmAuthorizerDecision arm_authorizer_decision = 1;
inline void RespondArmAuthorizationRequest::clear_arm_authorizer_decision() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arm_authorizer_decision_ = 0;
}
inline ::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision RespondArmAuthorizationRequest::arm_authorizer_decision() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationRequest.arm_authorizer_decision)
  return _internal_arm_authorizer_decision();
}
inline void RespondArmAuthorizationRequest::set_arm_authorizer_decision(::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision value) {
  _internal_set_arm_authorizer_decision(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationRequest.arm_authorizer_decision)
}
inline ::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision RespondArmAuthorizationRequest::_internal_arm_authorizer_decision() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision>(_impl_.arm_authorizer_decision_);
}
inline void RespondArmAuthorizationRequest::_internal_set_arm_authorizer_decision(::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.arm_authorizer_decision_ = value;
}

// -------------------------------------------------------------------

// RespondArmAuthorizationResponse

// .mavsdk.rpc.arm_authorizer.CommandAnswer command_answer = 1;
inline void RespondArmAuthorizationResponse::clear_command_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_answer_ = 0;
}
inline ::mavsdk::rpc::arm_authorizer::CommandAnswer RespondArmAuthorizationResponse::command_answer() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationResponse.command_answer)
  return _internal_command_answer();
}
inline void RespondArmAuthorizationResponse::set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value) {
  _internal_set_command_answer(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.RespondArmAuthorizationResponse.command_answer)
}
inline ::mavsdk::rpc::arm_authorizer::CommandAnswer RespondArmAuthorizationResponse::_internal_command_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::arm_authorizer::CommandAnswer>(_impl_.command_answer_);
}
inline void RespondArmAuthorizationResponse::_internal_set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_answer_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace arm_authorizer
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision>() {
  return ::mavsdk::rpc::arm_authorizer::ArmAuthorizerDecision_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::arm_authorizer::CommandAnswer> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::arm_authorizer::CommandAnswer>() {
  return ::mavsdk::rpc::arm_authorizer::CommandAnswer_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_arm_5fauthorizer_2farm_5fauthorizer_2eproto_2epb_2eh
