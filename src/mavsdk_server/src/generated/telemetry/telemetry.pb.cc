// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: telemetry/telemetry.proto
// Protobuf C++ Version: 5.29.1

#include "telemetry/telemetry.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace telemetry {

inline constexpr Wind::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : wind_x_ned_m_s_{0},
        wind_y_ned_m_s_{0},
        wind_z_ned_m_s_{0},
        horizontal_variability_stddev_m_s_{0},
        vertical_variability_stddev_m_s_{0},
        wind_altitude_msl_m_{0},
        horizontal_wind_speed_accuracy_m_s_{0},
        vertical_wind_speed_accuracy_m_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Wind::Wind(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WindDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WindDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WindDefaultTypeInternal() {}
  union {
    Wind _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WindDefaultTypeInternal _Wind_default_instance_;

inline constexpr VtolStateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vtol_state_{static_cast< ::mavsdk::rpc::telemetry::VtolState >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VtolStateResponse::VtolStateResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VtolStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VtolStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VtolStateResponseDefaultTypeInternal() {}
  union {
    VtolStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VtolStateResponseDefaultTypeInternal _VtolStateResponse_default_instance_;

inline constexpr VelocityNed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : north_m_s_{0},
        east_m_s_{0},
        down_m_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityNed::VelocityNed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VelocityNedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityNedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityNedDefaultTypeInternal() {}
  union {
    VelocityNed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityNedDefaultTypeInternal _VelocityNed_default_instance_;

inline constexpr VelocityBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_m_s_{0},
        y_m_s_{0},
        z_m_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityBody::VelocityBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VelocityBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityBodyDefaultTypeInternal() {}
  union {
    VelocityBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityBodyDefaultTypeInternal _VelocityBody_default_instance_;

inline constexpr UnixEpochTimeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : time_us_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnixEpochTimeResponse::UnixEpochTimeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnixEpochTimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnixEpochTimeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnixEpochTimeResponseDefaultTypeInternal() {}
  union {
    UnixEpochTimeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnixEpochTimeResponseDefaultTypeInternal _UnixEpochTimeResponse_default_instance_;

inline constexpr TelemetryResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::telemetry::TelemetryResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TelemetryResult::TelemetryResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TelemetryResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TelemetryResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TelemetryResultDefaultTypeInternal() {}
  union {
    TelemetryResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TelemetryResultDefaultTypeInternal _TelemetryResult_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeWindRequest::SubscribeWindRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeWindRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeWindRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeWindRequestDefaultTypeInternal() {}
  union {
    SubscribeWindRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeWindRequestDefaultTypeInternal _SubscribeWindRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeVtolStateRequest::SubscribeVtolStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeVtolStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeVtolStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeVtolStateRequestDefaultTypeInternal() {}
  union {
    SubscribeVtolStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeVtolStateRequestDefaultTypeInternal _SubscribeVtolStateRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeVelocityNedRequest::SubscribeVelocityNedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeVelocityNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeVelocityNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeVelocityNedRequestDefaultTypeInternal() {}
  union {
    SubscribeVelocityNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeVelocityNedRequestDefaultTypeInternal _SubscribeVelocityNedRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeUnixEpochTimeRequest::SubscribeUnixEpochTimeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeUnixEpochTimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUnixEpochTimeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUnixEpochTimeRequestDefaultTypeInternal() {}
  union {
    SubscribeUnixEpochTimeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUnixEpochTimeRequestDefaultTypeInternal _SubscribeUnixEpochTimeRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeStatusTextRequest::SubscribeStatusTextRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeStatusTextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStatusTextRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStatusTextRequestDefaultTypeInternal() {}
  union {
    SubscribeStatusTextRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStatusTextRequestDefaultTypeInternal _SubscribeStatusTextRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeScaledPressureRequest::SubscribeScaledPressureRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeScaledPressureRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeScaledPressureRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeScaledPressureRequestDefaultTypeInternal() {}
  union {
    SubscribeScaledPressureRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeScaledPressureRequestDefaultTypeInternal _SubscribeScaledPressureRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeScaledImuRequest::SubscribeScaledImuRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeScaledImuRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeScaledImuRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeScaledImuRequestDefaultTypeInternal() {}
  union {
    SubscribeScaledImuRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeScaledImuRequestDefaultTypeInternal _SubscribeScaledImuRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeRcStatusRequest::SubscribeRcStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRcStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRcStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRcStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeRcStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRcStatusRequestDefaultTypeInternal _SubscribeRcStatusRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeRawImuRequest::SubscribeRawImuRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRawImuRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRawImuRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRawImuRequestDefaultTypeInternal() {}
  union {
    SubscribeRawImuRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRawImuRequestDefaultTypeInternal _SubscribeRawImuRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeRawGpsRequest::SubscribeRawGpsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRawGpsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRawGpsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRawGpsRequestDefaultTypeInternal() {}
  union {
    SubscribeRawGpsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRawGpsRequestDefaultTypeInternal _SubscribeRawGpsRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribePositionVelocityNedRequest::SubscribePositionVelocityNedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribePositionVelocityNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribePositionVelocityNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribePositionVelocityNedRequestDefaultTypeInternal() {}
  union {
    SubscribePositionVelocityNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribePositionVelocityNedRequestDefaultTypeInternal _SubscribePositionVelocityNedRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribePositionRequest::SubscribePositionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribePositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribePositionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribePositionRequestDefaultTypeInternal() {}
  union {
    SubscribePositionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribePositionRequestDefaultTypeInternal _SubscribePositionRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeOdometryRequest::SubscribeOdometryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeOdometryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeOdometryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeOdometryRequestDefaultTypeInternal() {}
  union {
    SubscribeOdometryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeOdometryRequestDefaultTypeInternal _SubscribeOdometryRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeLandedStateRequest::SubscribeLandedStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeLandedStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeLandedStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeLandedStateRequestDefaultTypeInternal() {}
  union {
    SubscribeLandedStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeLandedStateRequestDefaultTypeInternal _SubscribeLandedStateRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeInAirRequest::SubscribeInAirRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeInAirRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeInAirRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeInAirRequestDefaultTypeInternal() {}
  union {
    SubscribeInAirRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeInAirRequestDefaultTypeInternal _SubscribeInAirRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeImuRequest::SubscribeImuRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeImuRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeImuRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeImuRequestDefaultTypeInternal() {}
  union {
    SubscribeImuRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeImuRequestDefaultTypeInternal _SubscribeImuRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeHomeRequest::SubscribeHomeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeHomeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeHomeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeHomeRequestDefaultTypeInternal() {}
  union {
    SubscribeHomeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeHomeRequestDefaultTypeInternal _SubscribeHomeRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeHealthRequest::SubscribeHealthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeHealthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeHealthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeHealthRequestDefaultTypeInternal() {}
  union {
    SubscribeHealthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeHealthRequestDefaultTypeInternal _SubscribeHealthRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeHealthAllOkRequest::SubscribeHealthAllOkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeHealthAllOkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeHealthAllOkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeHealthAllOkRequestDefaultTypeInternal() {}
  union {
    SubscribeHealthAllOkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeHealthAllOkRequestDefaultTypeInternal _SubscribeHealthAllOkRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeHeadingRequest::SubscribeHeadingRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeHeadingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeHeadingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeHeadingRequestDefaultTypeInternal() {}
  union {
    SubscribeHeadingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeHeadingRequestDefaultTypeInternal _SubscribeHeadingRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeGroundTruthRequest::SubscribeGroundTruthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeGroundTruthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeGroundTruthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeGroundTruthRequestDefaultTypeInternal() {}
  union {
    SubscribeGroundTruthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeGroundTruthRequestDefaultTypeInternal _SubscribeGroundTruthRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeGpsInfoRequest::SubscribeGpsInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeGpsInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeGpsInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeGpsInfoRequestDefaultTypeInternal() {}
  union {
    SubscribeGpsInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeGpsInfoRequestDefaultTypeInternal _SubscribeGpsInfoRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeFlightModeRequest::SubscribeFlightModeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeFlightModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeFlightModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeFlightModeRequestDefaultTypeInternal() {}
  union {
    SubscribeFlightModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeFlightModeRequestDefaultTypeInternal _SubscribeFlightModeRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeFixedwingMetricsRequest::SubscribeFixedwingMetricsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeFixedwingMetricsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeFixedwingMetricsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeFixedwingMetricsRequestDefaultTypeInternal() {}
  union {
    SubscribeFixedwingMetricsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeFixedwingMetricsRequestDefaultTypeInternal _SubscribeFixedwingMetricsRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeDistanceSensorRequest::SubscribeDistanceSensorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeDistanceSensorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeDistanceSensorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeDistanceSensorRequestDefaultTypeInternal() {}
  union {
    SubscribeDistanceSensorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeDistanceSensorRequestDefaultTypeInternal _SubscribeDistanceSensorRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeBatteryRequest::SubscribeBatteryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeBatteryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeBatteryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeBatteryRequestDefaultTypeInternal() {}
  union {
    SubscribeBatteryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeBatteryRequestDefaultTypeInternal _SubscribeBatteryRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeAttitudeQuaternionRequest::SubscribeAttitudeQuaternionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeAttitudeQuaternionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeAttitudeQuaternionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeAttitudeQuaternionRequestDefaultTypeInternal() {}
  union {
    SubscribeAttitudeQuaternionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeAttitudeQuaternionRequestDefaultTypeInternal _SubscribeAttitudeQuaternionRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeAttitudeEulerRequest::SubscribeAttitudeEulerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeAttitudeEulerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeAttitudeEulerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeAttitudeEulerRequestDefaultTypeInternal() {}
  union {
    SubscribeAttitudeEulerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeAttitudeEulerRequestDefaultTypeInternal _SubscribeAttitudeEulerRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeAttitudeAngularVelocityBodyRequest::SubscribeAttitudeAngularVelocityBodyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeAttitudeAngularVelocityBodyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeAttitudeAngularVelocityBodyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeAttitudeAngularVelocityBodyRequestDefaultTypeInternal() {}
  union {
    SubscribeAttitudeAngularVelocityBodyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeAttitudeAngularVelocityBodyRequestDefaultTypeInternal _SubscribeAttitudeAngularVelocityBodyRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeArmedRequest::SubscribeArmedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeArmedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeArmedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeArmedRequestDefaultTypeInternal() {}
  union {
    SubscribeArmedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeArmedRequestDefaultTypeInternal _SubscribeArmedRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeAltitudeRequest::SubscribeAltitudeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeAltitudeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeAltitudeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeAltitudeRequestDefaultTypeInternal() {}
  union {
    SubscribeAltitudeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeAltitudeRequestDefaultTypeInternal _SubscribeAltitudeRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeActuatorOutputStatusRequest::SubscribeActuatorOutputStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeActuatorOutputStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeActuatorOutputStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeActuatorOutputStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeActuatorOutputStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeActuatorOutputStatusRequestDefaultTypeInternal _SubscribeActuatorOutputStatusRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SubscribeActuatorControlTargetRequest::SubscribeActuatorControlTargetRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeActuatorControlTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeActuatorControlTargetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeActuatorControlTargetRequestDefaultTypeInternal() {}
  union {
    SubscribeActuatorControlTargetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeActuatorControlTargetRequestDefaultTypeInternal _SubscribeActuatorControlTargetRequest_default_instance_;

inline constexpr StatusText::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::mavsdk::rpc::telemetry::StatusTextType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatusText::StatusText(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatusTextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusTextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusTextDefaultTypeInternal() {}
  union {
    StatusText _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusTextDefaultTypeInternal _StatusText_default_instance_;

inline constexpr SetRateVtolStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateVtolStateRequest::SetRateVtolStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateVtolStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateVtolStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateVtolStateRequestDefaultTypeInternal() {}
  union {
    SetRateVtolStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateVtolStateRequestDefaultTypeInternal _SetRateVtolStateRequest_default_instance_;

inline constexpr SetRateVelocityNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateVelocityNedRequest::SetRateVelocityNedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateVelocityNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateVelocityNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateVelocityNedRequestDefaultTypeInternal() {}
  union {
    SetRateVelocityNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateVelocityNedRequestDefaultTypeInternal _SetRateVelocityNedRequest_default_instance_;

inline constexpr SetRateUnixEpochTimeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateUnixEpochTimeRequest::SetRateUnixEpochTimeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateUnixEpochTimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateUnixEpochTimeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateUnixEpochTimeRequestDefaultTypeInternal() {}
  union {
    SetRateUnixEpochTimeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateUnixEpochTimeRequestDefaultTypeInternal _SetRateUnixEpochTimeRequest_default_instance_;

inline constexpr SetRateScaledImuRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateScaledImuRequest::SetRateScaledImuRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateScaledImuRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateScaledImuRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateScaledImuRequestDefaultTypeInternal() {}
  union {
    SetRateScaledImuRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateScaledImuRequestDefaultTypeInternal _SetRateScaledImuRequest_default_instance_;

inline constexpr SetRateRcStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateRcStatusRequest::SetRateRcStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateRcStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateRcStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateRcStatusRequestDefaultTypeInternal() {}
  union {
    SetRateRcStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateRcStatusRequestDefaultTypeInternal _SetRateRcStatusRequest_default_instance_;

inline constexpr SetRateRawImuRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateRawImuRequest::SetRateRawImuRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateRawImuRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateRawImuRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateRawImuRequestDefaultTypeInternal() {}
  union {
    SetRateRawImuRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateRawImuRequestDefaultTypeInternal _SetRateRawImuRequest_default_instance_;

inline constexpr SetRateRawGpsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateRawGpsRequest::SetRateRawGpsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateRawGpsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateRawGpsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateRawGpsRequestDefaultTypeInternal() {}
  union {
    SetRateRawGpsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateRawGpsRequestDefaultTypeInternal _SetRateRawGpsRequest_default_instance_;

inline constexpr SetRatePositionVelocityNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRatePositionVelocityNedRequest::SetRatePositionVelocityNedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRatePositionVelocityNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRatePositionVelocityNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRatePositionVelocityNedRequestDefaultTypeInternal() {}
  union {
    SetRatePositionVelocityNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRatePositionVelocityNedRequestDefaultTypeInternal _SetRatePositionVelocityNedRequest_default_instance_;

inline constexpr SetRatePositionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRatePositionRequest::SetRatePositionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRatePositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRatePositionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRatePositionRequestDefaultTypeInternal() {}
  union {
    SetRatePositionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRatePositionRequestDefaultTypeInternal _SetRatePositionRequest_default_instance_;

inline constexpr SetRateOdometryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateOdometryRequest::SetRateOdometryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateOdometryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateOdometryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateOdometryRequestDefaultTypeInternal() {}
  union {
    SetRateOdometryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateOdometryRequestDefaultTypeInternal _SetRateOdometryRequest_default_instance_;

inline constexpr SetRateLandedStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateLandedStateRequest::SetRateLandedStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateLandedStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateLandedStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateLandedStateRequestDefaultTypeInternal() {}
  union {
    SetRateLandedStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateLandedStateRequestDefaultTypeInternal _SetRateLandedStateRequest_default_instance_;

inline constexpr SetRateInAirRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateInAirRequest::SetRateInAirRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateInAirRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateInAirRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateInAirRequestDefaultTypeInternal() {}
  union {
    SetRateInAirRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateInAirRequestDefaultTypeInternal _SetRateInAirRequest_default_instance_;

inline constexpr SetRateImuRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateImuRequest::SetRateImuRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateImuRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateImuRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateImuRequestDefaultTypeInternal() {}
  union {
    SetRateImuRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateImuRequestDefaultTypeInternal _SetRateImuRequest_default_instance_;

inline constexpr SetRateHomeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateHomeRequest::SetRateHomeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateHomeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateHomeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateHomeRequestDefaultTypeInternal() {}
  union {
    SetRateHomeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateHomeRequestDefaultTypeInternal _SetRateHomeRequest_default_instance_;

inline constexpr SetRateHealthRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateHealthRequest::SetRateHealthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateHealthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateHealthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateHealthRequestDefaultTypeInternal() {}
  union {
    SetRateHealthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateHealthRequestDefaultTypeInternal _SetRateHealthRequest_default_instance_;

inline constexpr SetRateGroundTruthRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateGroundTruthRequest::SetRateGroundTruthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateGroundTruthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateGroundTruthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateGroundTruthRequestDefaultTypeInternal() {}
  union {
    SetRateGroundTruthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateGroundTruthRequestDefaultTypeInternal _SetRateGroundTruthRequest_default_instance_;

inline constexpr SetRateGpsInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateGpsInfoRequest::SetRateGpsInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateGpsInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateGpsInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateGpsInfoRequestDefaultTypeInternal() {}
  union {
    SetRateGpsInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateGpsInfoRequestDefaultTypeInternal _SetRateGpsInfoRequest_default_instance_;

inline constexpr SetRateFixedwingMetricsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateFixedwingMetricsRequest::SetRateFixedwingMetricsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateFixedwingMetricsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateFixedwingMetricsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateFixedwingMetricsRequestDefaultTypeInternal() {}
  union {
    SetRateFixedwingMetricsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateFixedwingMetricsRequestDefaultTypeInternal _SetRateFixedwingMetricsRequest_default_instance_;

inline constexpr SetRateDistanceSensorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateDistanceSensorRequest::SetRateDistanceSensorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateDistanceSensorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateDistanceSensorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateDistanceSensorRequestDefaultTypeInternal() {}
  union {
    SetRateDistanceSensorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateDistanceSensorRequestDefaultTypeInternal _SetRateDistanceSensorRequest_default_instance_;

inline constexpr SetRateBatteryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateBatteryRequest::SetRateBatteryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateBatteryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateBatteryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateBatteryRequestDefaultTypeInternal() {}
  union {
    SetRateBatteryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateBatteryRequestDefaultTypeInternal _SetRateBatteryRequest_default_instance_;

inline constexpr SetRateAttitudeQuaternionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAttitudeQuaternionRequest::SetRateAttitudeQuaternionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAttitudeQuaternionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAttitudeQuaternionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAttitudeQuaternionRequestDefaultTypeInternal() {}
  union {
    SetRateAttitudeQuaternionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAttitudeQuaternionRequestDefaultTypeInternal _SetRateAttitudeQuaternionRequest_default_instance_;

inline constexpr SetRateAttitudeEulerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAttitudeEulerRequest::SetRateAttitudeEulerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAttitudeEulerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAttitudeEulerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAttitudeEulerRequestDefaultTypeInternal() {}
  union {
    SetRateAttitudeEulerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAttitudeEulerRequestDefaultTypeInternal _SetRateAttitudeEulerRequest_default_instance_;

inline constexpr SetRateAttitudeAngularVelocityBodyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAttitudeAngularVelocityBodyRequest::SetRateAttitudeAngularVelocityBodyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAttitudeAngularVelocityBodyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAttitudeAngularVelocityBodyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAttitudeAngularVelocityBodyRequestDefaultTypeInternal() {}
  union {
    SetRateAttitudeAngularVelocityBodyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAttitudeAngularVelocityBodyRequestDefaultTypeInternal _SetRateAttitudeAngularVelocityBodyRequest_default_instance_;

inline constexpr SetRateAltitudeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAltitudeRequest::SetRateAltitudeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAltitudeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAltitudeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAltitudeRequestDefaultTypeInternal() {}
  union {
    SetRateAltitudeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAltitudeRequestDefaultTypeInternal _SetRateAltitudeRequest_default_instance_;

inline constexpr SetRateActuatorOutputStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateActuatorOutputStatusRequest::SetRateActuatorOutputStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateActuatorOutputStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateActuatorOutputStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateActuatorOutputStatusRequestDefaultTypeInternal() {}
  union {
    SetRateActuatorOutputStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateActuatorOutputStatusRequestDefaultTypeInternal _SetRateActuatorOutputStatusRequest_default_instance_;

inline constexpr SetRateActuatorControlTargetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_hz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateActuatorControlTargetRequest::SetRateActuatorControlTargetRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateActuatorControlTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateActuatorControlTargetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateActuatorControlTargetRequestDefaultTypeInternal() {}
  union {
    SetRateActuatorControlTargetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateActuatorControlTargetRequestDefaultTypeInternal _SetRateActuatorControlTargetRequest_default_instance_;

inline constexpr ScaledPressure::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_us_{::uint64_t{0u}},
        absolute_pressure_hpa_{0},
        differential_pressure_hpa_{0},
        temperature_deg_{0},
        differential_pressure_temperature_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScaledPressure::ScaledPressure(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScaledPressureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScaledPressureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScaledPressureDefaultTypeInternal() {}
  union {
    ScaledPressure _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScaledPressureDefaultTypeInternal _ScaledPressure_default_instance_;

inline constexpr RcStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : was_available_once_{false},
        is_available_{false},
        signal_strength_percent_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RcStatus::RcStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RcStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RcStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RcStatusDefaultTypeInternal() {}
  union {
    RcStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RcStatusDefaultTypeInternal _RcStatus_default_instance_;

inline constexpr RawGps::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_us_{::uint64_t{0u}},
        latitude_deg_{0},
        longitude_deg_{0},
        absolute_altitude_m_{0},
        hdop_{0},
        vdop_{0},
        velocity_m_s_{0},
        cog_deg_{0},
        altitude_ellipsoid_m_{0},
        horizontal_uncertainty_m_{0},
        vertical_uncertainty_m_{0},
        velocity_uncertainty_m_s_{0},
        heading_uncertainty_deg_{0},
        yaw_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RawGps::RawGps(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RawGpsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RawGpsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RawGpsDefaultTypeInternal() {}
  union {
    RawGps _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RawGpsDefaultTypeInternal _RawGps_default_instance_;

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : w_{0},
        x_{0},
        y_{0},
        z_{0},
        timestamp_us_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr PositionNed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : north_m_{0},
        east_m_{0},
        down_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionNed::PositionNed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionNedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionNedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionNedDefaultTypeInternal() {}
  union {
    PositionNed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionNedDefaultTypeInternal _PositionNed_default_instance_;

inline constexpr PositionBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_m_{0},
        y_m_{0},
        z_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionBody::PositionBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionBodyDefaultTypeInternal() {}
  union {
    PositionBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionBodyDefaultTypeInternal _PositionBody_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        absolute_altitude_m_{0},
        relative_altitude_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr MagneticFieldFrd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : forward_gauss_{0},
        right_gauss_{0},
        down_gauss_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MagneticFieldFrd::MagneticFieldFrd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MagneticFieldFrdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MagneticFieldFrdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MagneticFieldFrdDefaultTypeInternal() {}
  union {
    MagneticFieldFrd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MagneticFieldFrdDefaultTypeInternal _MagneticFieldFrd_default_instance_;

inline constexpr LandedStateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : landed_state_{static_cast< ::mavsdk::rpc::telemetry::LandedState >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LandedStateResponse::LandedStateResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LandedStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LandedStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LandedStateResponseDefaultTypeInternal() {}
  union {
    LandedStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LandedStateResponseDefaultTypeInternal _LandedStateResponse_default_instance_;

inline constexpr InAirResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_in_air_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InAirResponse::InAirResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InAirResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InAirResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InAirResponseDefaultTypeInternal() {}
  union {
    InAirResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InAirResponseDefaultTypeInternal _InAirResponse_default_instance_;

inline constexpr HealthAllOkResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_health_all_ok_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HealthAllOkResponse::HealthAllOkResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HealthAllOkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthAllOkResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthAllOkResponseDefaultTypeInternal() {}
  union {
    HealthAllOkResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthAllOkResponseDefaultTypeInternal _HealthAllOkResponse_default_instance_;

inline constexpr Health::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_gyrometer_calibration_ok_{false},
        is_accelerometer_calibration_ok_{false},
        is_magnetometer_calibration_ok_{false},
        is_local_position_ok_{false},
        is_global_position_ok_{false},
        is_home_position_ok_{false},
        is_armable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Health::Health(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HealthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthDefaultTypeInternal() {}
  union {
    Health _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthDefaultTypeInternal _Health_default_instance_;

inline constexpr Heading::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : heading_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Heading::Heading(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeadingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeadingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeadingDefaultTypeInternal() {}
  union {
    Heading _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeadingDefaultTypeInternal _Heading_default_instance_;

inline constexpr GroundTruth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        absolute_altitude_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GroundTruth::GroundTruth(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GroundTruthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroundTruthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroundTruthDefaultTypeInternal() {}
  union {
    GroundTruth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroundTruthDefaultTypeInternal _GroundTruth_default_instance_;

inline constexpr GpsInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : num_satellites_{0},
        fix_type_{static_cast< ::mavsdk::rpc::telemetry::FixType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GpsInfo::GpsInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GpsInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpsInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpsInfoDefaultTypeInternal() {}
  union {
    GpsInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpsInfoDefaultTypeInternal _GpsInfo_default_instance_;

inline constexpr GpsGlobalOrigin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        altitude_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GpsGlobalOrigin::GpsGlobalOrigin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GpsGlobalOriginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpsGlobalOriginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpsGlobalOriginDefaultTypeInternal() {}
  union {
    GpsGlobalOrigin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpsGlobalOriginDefaultTypeInternal _GpsGlobalOrigin_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GetGpsGlobalOriginRequest::GetGpsGlobalOriginRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetGpsGlobalOriginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGpsGlobalOriginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGpsGlobalOriginRequestDefaultTypeInternal() {}
  union {
    GetGpsGlobalOriginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGpsGlobalOriginRequestDefaultTypeInternal _GetGpsGlobalOriginRequest_default_instance_;

inline constexpr FlightModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : flight_mode_{static_cast< ::mavsdk::rpc::telemetry::FlightMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FlightModeResponse::FlightModeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FlightModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlightModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlightModeResponseDefaultTypeInternal() {}
  union {
    FlightModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlightModeResponseDefaultTypeInternal _FlightModeResponse_default_instance_;

inline constexpr FixedwingMetrics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : airspeed_m_s_{0},
        throttle_percentage_{0},
        climb_rate_m_s_{0},
        groundspeed_m_s_{0},
        heading_deg_{0},
        absolute_altitude_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FixedwingMetrics::FixedwingMetrics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FixedwingMetricsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FixedwingMetricsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FixedwingMetricsDefaultTypeInternal() {}
  union {
    FixedwingMetrics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FixedwingMetricsDefaultTypeInternal _FixedwingMetrics_default_instance_;

inline constexpr EulerAngle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_deg_{0},
        pitch_deg_{0},
        timestamp_us_{::uint64_t{0u}},
        yaw_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EulerAngle::EulerAngle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EulerAngleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EulerAngleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EulerAngleDefaultTypeInternal() {}
  union {
    EulerAngle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EulerAngleDefaultTypeInternal _EulerAngle_default_instance_;

inline constexpr Covariance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : covariance_matrix_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Covariance::Covariance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CovarianceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CovarianceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CovarianceDefaultTypeInternal() {}
  union {
    Covariance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CovarianceDefaultTypeInternal _Covariance_default_instance_;

inline constexpr Battery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0u},
        temperature_degc_{0},
        voltage_v_{0},
        current_battery_a_{0},
        capacity_consumed_ah_{0},
        remaining_percent_{0},
        time_remaining_s_{0},
        battery_function_{static_cast< ::mavsdk::rpc::telemetry::BatteryFunction >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Battery::Battery(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatteryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatteryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatteryDefaultTypeInternal() {}
  union {
    Battery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatteryDefaultTypeInternal _Battery_default_instance_;

inline constexpr ArmedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_armed_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArmedResponse::ArmedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ArmedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmedResponseDefaultTypeInternal() {}
  union {
    ArmedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmedResponseDefaultTypeInternal _ArmedResponse_default_instance_;

inline constexpr AngularVelocityFrd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : forward_rad_s_{0},
        right_rad_s_{0},
        down_rad_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AngularVelocityFrd::AngularVelocityFrd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AngularVelocityFrdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AngularVelocityFrdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AngularVelocityFrdDefaultTypeInternal() {}
  union {
    AngularVelocityFrd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AngularVelocityFrdDefaultTypeInternal _AngularVelocityFrd_default_instance_;

inline constexpr AngularVelocityBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_rad_s_{0},
        pitch_rad_s_{0},
        yaw_rad_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AngularVelocityBody::AngularVelocityBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AngularVelocityBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AngularVelocityBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AngularVelocityBodyDefaultTypeInternal() {}
  union {
    AngularVelocityBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AngularVelocityBodyDefaultTypeInternal _AngularVelocityBody_default_instance_;

inline constexpr Altitude::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : altitude_monotonic_m_{0},
        altitude_amsl_m_{0},
        altitude_local_m_{0},
        altitude_relative_m_{0},
        altitude_terrain_m_{0},
        bottom_clearance_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Altitude::Altitude(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AltitudeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AltitudeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AltitudeDefaultTypeInternal() {}
  union {
    Altitude _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AltitudeDefaultTypeInternal _Altitude_default_instance_;

inline constexpr ActuatorOutputStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : actuator_{},
        active_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActuatorOutputStatus::ActuatorOutputStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActuatorOutputStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActuatorOutputStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActuatorOutputStatusDefaultTypeInternal() {}
  union {
    ActuatorOutputStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActuatorOutputStatusDefaultTypeInternal _ActuatorOutputStatus_default_instance_;

inline constexpr ActuatorControlTarget::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : controls_{},
        group_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActuatorControlTarget::ActuatorControlTarget(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActuatorControlTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActuatorControlTargetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActuatorControlTargetDefaultTypeInternal() {}
  union {
    ActuatorControlTarget _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActuatorControlTargetDefaultTypeInternal _ActuatorControlTarget_default_instance_;

inline constexpr AccelerationFrd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : forward_m_s2_{0},
        right_m_s2_{0},
        down_m_s2_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccelerationFrd::AccelerationFrd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccelerationFrdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccelerationFrdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccelerationFrdDefaultTypeInternal() {}
  union {
    AccelerationFrd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccelerationFrdDefaultTypeInternal _AccelerationFrd_default_instance_;

inline constexpr WindResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        wind_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR WindResponse::WindResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WindResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WindResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WindResponseDefaultTypeInternal() {}
  union {
    WindResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WindResponseDefaultTypeInternal _WindResponse_default_instance_;

inline constexpr VelocityNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        velocity_ned_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityNedResponse::VelocityNedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VelocityNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityNedResponseDefaultTypeInternal() {}
  union {
    VelocityNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityNedResponseDefaultTypeInternal _VelocityNedResponse_default_instance_;

inline constexpr StatusTextResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_text_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StatusTextResponse::StatusTextResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatusTextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusTextResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusTextResponseDefaultTypeInternal() {}
  union {
    StatusTextResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusTextResponseDefaultTypeInternal _StatusTextResponse_default_instance_;

inline constexpr SetRateVtolStateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateVtolStateResponse::SetRateVtolStateResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateVtolStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateVtolStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateVtolStateResponseDefaultTypeInternal() {}
  union {
    SetRateVtolStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateVtolStateResponseDefaultTypeInternal _SetRateVtolStateResponse_default_instance_;

inline constexpr SetRateVelocityNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateVelocityNedResponse::SetRateVelocityNedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateVelocityNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateVelocityNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateVelocityNedResponseDefaultTypeInternal() {}
  union {
    SetRateVelocityNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateVelocityNedResponseDefaultTypeInternal _SetRateVelocityNedResponse_default_instance_;

inline constexpr SetRateUnixEpochTimeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateUnixEpochTimeResponse::SetRateUnixEpochTimeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateUnixEpochTimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateUnixEpochTimeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateUnixEpochTimeResponseDefaultTypeInternal() {}
  union {
    SetRateUnixEpochTimeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateUnixEpochTimeResponseDefaultTypeInternal _SetRateUnixEpochTimeResponse_default_instance_;

inline constexpr SetRateScaledImuResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateScaledImuResponse::SetRateScaledImuResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateScaledImuResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateScaledImuResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateScaledImuResponseDefaultTypeInternal() {}
  union {
    SetRateScaledImuResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateScaledImuResponseDefaultTypeInternal _SetRateScaledImuResponse_default_instance_;

inline constexpr SetRateRcStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateRcStatusResponse::SetRateRcStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateRcStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateRcStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateRcStatusResponseDefaultTypeInternal() {}
  union {
    SetRateRcStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateRcStatusResponseDefaultTypeInternal _SetRateRcStatusResponse_default_instance_;

inline constexpr SetRateRawImuResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateRawImuResponse::SetRateRawImuResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateRawImuResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateRawImuResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateRawImuResponseDefaultTypeInternal() {}
  union {
    SetRateRawImuResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateRawImuResponseDefaultTypeInternal _SetRateRawImuResponse_default_instance_;

inline constexpr SetRatePositionVelocityNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRatePositionVelocityNedResponse::SetRatePositionVelocityNedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRatePositionVelocityNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRatePositionVelocityNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRatePositionVelocityNedResponseDefaultTypeInternal() {}
  union {
    SetRatePositionVelocityNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRatePositionVelocityNedResponseDefaultTypeInternal _SetRatePositionVelocityNedResponse_default_instance_;

inline constexpr SetRatePositionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRatePositionResponse::SetRatePositionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRatePositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRatePositionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRatePositionResponseDefaultTypeInternal() {}
  union {
    SetRatePositionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRatePositionResponseDefaultTypeInternal _SetRatePositionResponse_default_instance_;

inline constexpr SetRateOdometryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateOdometryResponse::SetRateOdometryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateOdometryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateOdometryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateOdometryResponseDefaultTypeInternal() {}
  union {
    SetRateOdometryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateOdometryResponseDefaultTypeInternal _SetRateOdometryResponse_default_instance_;

inline constexpr SetRateLandedStateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateLandedStateResponse::SetRateLandedStateResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateLandedStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateLandedStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateLandedStateResponseDefaultTypeInternal() {}
  union {
    SetRateLandedStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateLandedStateResponseDefaultTypeInternal _SetRateLandedStateResponse_default_instance_;

inline constexpr SetRateInAirResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateInAirResponse::SetRateInAirResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateInAirResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateInAirResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateInAirResponseDefaultTypeInternal() {}
  union {
    SetRateInAirResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateInAirResponseDefaultTypeInternal _SetRateInAirResponse_default_instance_;

inline constexpr SetRateImuResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateImuResponse::SetRateImuResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateImuResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateImuResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateImuResponseDefaultTypeInternal() {}
  union {
    SetRateImuResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateImuResponseDefaultTypeInternal _SetRateImuResponse_default_instance_;

inline constexpr SetRateHomeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateHomeResponse::SetRateHomeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateHomeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateHomeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateHomeResponseDefaultTypeInternal() {}
  union {
    SetRateHomeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateHomeResponseDefaultTypeInternal _SetRateHomeResponse_default_instance_;

inline constexpr SetRateHealthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateHealthResponse::SetRateHealthResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateHealthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateHealthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateHealthResponseDefaultTypeInternal() {}
  union {
    SetRateHealthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateHealthResponseDefaultTypeInternal _SetRateHealthResponse_default_instance_;

inline constexpr SetRateGroundTruthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateGroundTruthResponse::SetRateGroundTruthResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateGroundTruthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateGroundTruthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateGroundTruthResponseDefaultTypeInternal() {}
  union {
    SetRateGroundTruthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateGroundTruthResponseDefaultTypeInternal _SetRateGroundTruthResponse_default_instance_;

inline constexpr SetRateGpsInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateGpsInfoResponse::SetRateGpsInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateGpsInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateGpsInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateGpsInfoResponseDefaultTypeInternal() {}
  union {
    SetRateGpsInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateGpsInfoResponseDefaultTypeInternal _SetRateGpsInfoResponse_default_instance_;

inline constexpr SetRateFixedwingMetricsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateFixedwingMetricsResponse::SetRateFixedwingMetricsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateFixedwingMetricsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateFixedwingMetricsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateFixedwingMetricsResponseDefaultTypeInternal() {}
  union {
    SetRateFixedwingMetricsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateFixedwingMetricsResponseDefaultTypeInternal _SetRateFixedwingMetricsResponse_default_instance_;

inline constexpr SetRateDistanceSensorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateDistanceSensorResponse::SetRateDistanceSensorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateDistanceSensorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateDistanceSensorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateDistanceSensorResponseDefaultTypeInternal() {}
  union {
    SetRateDistanceSensorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateDistanceSensorResponseDefaultTypeInternal _SetRateDistanceSensorResponse_default_instance_;

inline constexpr SetRateBatteryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateBatteryResponse::SetRateBatteryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateBatteryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateBatteryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateBatteryResponseDefaultTypeInternal() {}
  union {
    SetRateBatteryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateBatteryResponseDefaultTypeInternal _SetRateBatteryResponse_default_instance_;

inline constexpr SetRateAttitudeQuaternionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAttitudeQuaternionResponse::SetRateAttitudeQuaternionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAttitudeQuaternionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAttitudeQuaternionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAttitudeQuaternionResponseDefaultTypeInternal() {}
  union {
    SetRateAttitudeQuaternionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAttitudeQuaternionResponseDefaultTypeInternal _SetRateAttitudeQuaternionResponse_default_instance_;

inline constexpr SetRateAttitudeEulerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAttitudeEulerResponse::SetRateAttitudeEulerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAttitudeEulerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAttitudeEulerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAttitudeEulerResponseDefaultTypeInternal() {}
  union {
    SetRateAttitudeEulerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAttitudeEulerResponseDefaultTypeInternal _SetRateAttitudeEulerResponse_default_instance_;

inline constexpr SetRateAttitudeAngularVelocityBodyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAttitudeAngularVelocityBodyResponse::SetRateAttitudeAngularVelocityBodyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAttitudeAngularVelocityBodyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAttitudeAngularVelocityBodyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAttitudeAngularVelocityBodyResponseDefaultTypeInternal() {}
  union {
    SetRateAttitudeAngularVelocityBodyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAttitudeAngularVelocityBodyResponseDefaultTypeInternal _SetRateAttitudeAngularVelocityBodyResponse_default_instance_;

inline constexpr SetRateAltitudeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateAltitudeResponse::SetRateAltitudeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateAltitudeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateAltitudeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateAltitudeResponseDefaultTypeInternal() {}
  union {
    SetRateAltitudeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateAltitudeResponseDefaultTypeInternal _SetRateAltitudeResponse_default_instance_;

inline constexpr SetRateActuatorOutputStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateActuatorOutputStatusResponse::SetRateActuatorOutputStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateActuatorOutputStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateActuatorOutputStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateActuatorOutputStatusResponseDefaultTypeInternal() {}
  union {
    SetRateActuatorOutputStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateActuatorOutputStatusResponseDefaultTypeInternal _SetRateActuatorOutputStatusResponse_default_instance_;

inline constexpr SetRateActuatorControlTargetResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetRateActuatorControlTargetResponse::SetRateActuatorControlTargetResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetRateActuatorControlTargetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateActuatorControlTargetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateActuatorControlTargetResponseDefaultTypeInternal() {}
  union {
    SetRateActuatorControlTargetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateActuatorControlTargetResponseDefaultTypeInternal _SetRateActuatorControlTargetResponse_default_instance_;

inline constexpr ScaledPressureResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scaled_pressure_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ScaledPressureResponse::ScaledPressureResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScaledPressureResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScaledPressureResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScaledPressureResponseDefaultTypeInternal() {}
  union {
    ScaledPressureResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScaledPressureResponseDefaultTypeInternal _ScaledPressureResponse_default_instance_;

inline constexpr RcStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rc_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RcStatusResponse::RcStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RcStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RcStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RcStatusResponseDefaultTypeInternal() {}
  union {
    RcStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RcStatusResponseDefaultTypeInternal _RcStatusResponse_default_instance_;

inline constexpr RawGpsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        raw_gps_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RawGpsResponse::RawGpsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RawGpsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RawGpsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RawGpsResponseDefaultTypeInternal() {}
  union {
    RawGpsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RawGpsResponseDefaultTypeInternal _RawGpsResponse_default_instance_;

inline constexpr PositionVelocityNed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        velocity_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionVelocityNed::PositionVelocityNed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionVelocityNedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionVelocityNedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionVelocityNedDefaultTypeInternal() {}
  union {
    PositionVelocityNed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionVelocityNedDefaultTypeInternal _PositionVelocityNed_default_instance_;

inline constexpr PositionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionResponse::PositionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionResponseDefaultTypeInternal() {}
  union {
    PositionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionResponseDefaultTypeInternal _PositionResponse_default_instance_;

inline constexpr Odometry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_body_{nullptr},
        q_{nullptr},
        velocity_body_{nullptr},
        angular_velocity_body_{nullptr},
        pose_covariance_{nullptr},
        velocity_covariance_{nullptr},
        time_usec_{::uint64_t{0u}},
        frame_id_{static_cast< ::mavsdk::rpc::telemetry::Odometry_MavFrame >(0)},
        child_frame_id_{static_cast< ::mavsdk::rpc::telemetry::Odometry_MavFrame >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Odometry::Odometry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OdometryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OdometryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OdometryDefaultTypeInternal() {}
  union {
    Odometry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OdometryDefaultTypeInternal _Odometry_default_instance_;

inline constexpr Imu::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        acceleration_frd_{nullptr},
        angular_velocity_frd_{nullptr},
        magnetic_field_frd_{nullptr},
        timestamp_us_{::uint64_t{0u}},
        temperature_degc_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Imu::Imu(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImuDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImuDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImuDefaultTypeInternal() {}
  union {
    Imu _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImuDefaultTypeInternal _Imu_default_instance_;

inline constexpr HomeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        home_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HomeResponse::HomeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HomeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HomeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HomeResponseDefaultTypeInternal() {}
  union {
    HomeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HomeResponseDefaultTypeInternal _HomeResponse_default_instance_;

inline constexpr HealthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        health_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HealthResponse::HealthResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HealthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthResponseDefaultTypeInternal() {}
  union {
    HealthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthResponseDefaultTypeInternal _HealthResponse_default_instance_;

inline constexpr HeadingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        heading_deg_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HeadingResponse::HeadingResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeadingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeadingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeadingResponseDefaultTypeInternal() {}
  union {
    HeadingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeadingResponseDefaultTypeInternal _HeadingResponse_default_instance_;

inline constexpr GroundTruthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ground_truth_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GroundTruthResponse::GroundTruthResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GroundTruthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroundTruthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroundTruthResponseDefaultTypeInternal() {}
  union {
    GroundTruthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroundTruthResponseDefaultTypeInternal _GroundTruthResponse_default_instance_;

inline constexpr GpsInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gps_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GpsInfoResponse::GpsInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GpsInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpsInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpsInfoResponseDefaultTypeInternal() {}
  union {
    GpsInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpsInfoResponseDefaultTypeInternal _GpsInfoResponse_default_instance_;

inline constexpr GetGpsGlobalOriginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        telemetry_result_{nullptr},
        gps_global_origin_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetGpsGlobalOriginResponse::GetGpsGlobalOriginResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetGpsGlobalOriginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGpsGlobalOriginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGpsGlobalOriginResponseDefaultTypeInternal() {}
  union {
    GetGpsGlobalOriginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGpsGlobalOriginResponseDefaultTypeInternal _GetGpsGlobalOriginResponse_default_instance_;

inline constexpr FixedwingMetricsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fixedwing_metrics_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FixedwingMetricsResponse::FixedwingMetricsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FixedwingMetricsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FixedwingMetricsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FixedwingMetricsResponseDefaultTypeInternal() {}
  union {
    FixedwingMetricsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FixedwingMetricsResponseDefaultTypeInternal _FixedwingMetricsResponse_default_instance_;

inline constexpr DistanceSensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        orientation_{nullptr},
        minimum_distance_m_{0},
        maximum_distance_m_{0},
        current_distance_m_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DistanceSensor::DistanceSensor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DistanceSensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistanceSensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistanceSensorDefaultTypeInternal() {}
  union {
    DistanceSensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistanceSensorDefaultTypeInternal _DistanceSensor_default_instance_;

inline constexpr BatteryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        battery_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BatteryResponse::BatteryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatteryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatteryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatteryResponseDefaultTypeInternal() {}
  union {
    BatteryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatteryResponseDefaultTypeInternal _BatteryResponse_default_instance_;

inline constexpr AttitudeQuaternionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attitude_quaternion_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AttitudeQuaternionResponse::AttitudeQuaternionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttitudeQuaternionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeQuaternionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeQuaternionResponseDefaultTypeInternal() {}
  union {
    AttitudeQuaternionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeQuaternionResponseDefaultTypeInternal _AttitudeQuaternionResponse_default_instance_;

inline constexpr AttitudeEulerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attitude_euler_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AttitudeEulerResponse::AttitudeEulerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttitudeEulerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeEulerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeEulerResponseDefaultTypeInternal() {}
  union {
    AttitudeEulerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeEulerResponseDefaultTypeInternal _AttitudeEulerResponse_default_instance_;

inline constexpr AttitudeAngularVelocityBodyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attitude_angular_velocity_body_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AttitudeAngularVelocityBodyResponse::AttitudeAngularVelocityBodyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttitudeAngularVelocityBodyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeAngularVelocityBodyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeAngularVelocityBodyResponseDefaultTypeInternal() {}
  union {
    AttitudeAngularVelocityBodyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeAngularVelocityBodyResponseDefaultTypeInternal _AttitudeAngularVelocityBodyResponse_default_instance_;

inline constexpr AltitudeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        altitude_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AltitudeResponse::AltitudeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AltitudeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AltitudeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AltitudeResponseDefaultTypeInternal() {}
  union {
    AltitudeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AltitudeResponseDefaultTypeInternal _AltitudeResponse_default_instance_;

inline constexpr ActuatorOutputStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        actuator_output_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ActuatorOutputStatusResponse::ActuatorOutputStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActuatorOutputStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActuatorOutputStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActuatorOutputStatusResponseDefaultTypeInternal() {}
  union {
    ActuatorOutputStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActuatorOutputStatusResponseDefaultTypeInternal _ActuatorOutputStatusResponse_default_instance_;

inline constexpr ActuatorControlTargetResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        actuator_control_target_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ActuatorControlTargetResponse::ActuatorControlTargetResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActuatorControlTargetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActuatorControlTargetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActuatorControlTargetResponseDefaultTypeInternal() {}
  union {
    ActuatorControlTargetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActuatorControlTargetResponseDefaultTypeInternal _ActuatorControlTargetResponse_default_instance_;

inline constexpr ScaledImuResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        imu_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ScaledImuResponse::ScaledImuResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScaledImuResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScaledImuResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScaledImuResponseDefaultTypeInternal() {}
  union {
    ScaledImuResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScaledImuResponseDefaultTypeInternal _ScaledImuResponse_default_instance_;

inline constexpr RawImuResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        imu_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RawImuResponse::RawImuResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RawImuResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RawImuResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RawImuResponseDefaultTypeInternal() {}
  union {
    RawImuResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RawImuResponseDefaultTypeInternal _RawImuResponse_default_instance_;

inline constexpr PositionVelocityNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_velocity_ned_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionVelocityNedResponse::PositionVelocityNedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionVelocityNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionVelocityNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionVelocityNedResponseDefaultTypeInternal() {}
  union {
    PositionVelocityNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionVelocityNedResponseDefaultTypeInternal _PositionVelocityNedResponse_default_instance_;

inline constexpr OdometryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        odometry_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OdometryResponse::OdometryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OdometryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OdometryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OdometryResponseDefaultTypeInternal() {}
  union {
    OdometryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OdometryResponseDefaultTypeInternal _OdometryResponse_default_instance_;

inline constexpr ImuResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        imu_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ImuResponse::ImuResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImuResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImuResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImuResponseDefaultTypeInternal() {}
  union {
    ImuResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImuResponseDefaultTypeInternal _ImuResponse_default_instance_;

inline constexpr DistanceSensorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        distance_sensor_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DistanceSensorResponse::DistanceSensorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DistanceSensorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistanceSensorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistanceSensorResponseDefaultTypeInternal() {}
  union {
    DistanceSensorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistanceSensorResponseDefaultTypeInternal _DistanceSensorResponse_default_instance_;
}  // namespace telemetry
}  // namespace rpc
}  // namespace mavsdk
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_telemetry_2ftelemetry_2eproto = nullptr;
const ::uint32_t
    TableStruct_telemetry_2ftelemetry_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribePositionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionResponse, _impl_.position_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeHomeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HomeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HomeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HomeResponse, _impl_.home_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeInAirRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::InAirResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::InAirResponse, _impl_.is_in_air_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeLandedStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::LandedStateResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::LandedStateResponse, _impl_.landed_state_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeArmedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ArmedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ArmedResponse, _impl_.is_armed_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeVtolStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VtolStateResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VtolStateResponse, _impl_.vtol_state_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeAttitudeQuaternionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeQuaternionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeQuaternionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeQuaternionResponse, _impl_.attitude_quaternion_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeAttitudeEulerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeEulerResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeEulerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeEulerResponse, _impl_.attitude_euler_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeAttitudeAngularVelocityBodyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeAngularVelocityBodyResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeAngularVelocityBodyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AttitudeAngularVelocityBodyResponse, _impl_.attitude_angular_velocity_body_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeVelocityNedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNedResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNedResponse, _impl_.velocity_ned_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeGpsInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsInfoResponse, _impl_.gps_info_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeRawGpsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGpsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGpsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGpsResponse, _impl_.raw_gps_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeBatteryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::BatteryResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::BatteryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::BatteryResponse, _impl_.battery_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeFlightModeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FlightModeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FlightModeResponse, _impl_.flight_mode_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeHealthRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HealthResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HealthResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HealthResponse, _impl_.health_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeRcStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatusResponse, _impl_.rc_status_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeStatusTextRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::StatusTextResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::StatusTextResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::StatusTextResponse, _impl_.status_text_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeActuatorControlTargetRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorControlTargetResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorControlTargetResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorControlTargetResponse, _impl_.actuator_control_target_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeActuatorOutputStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorOutputStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorOutputStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorOutputStatusResponse, _impl_.actuator_output_status_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeOdometryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::OdometryResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::OdometryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::OdometryResponse, _impl_.odometry_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribePositionVelocityNedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNedResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNedResponse, _impl_.position_velocity_ned_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeGroundTruthRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruthResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruthResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruthResponse, _impl_.ground_truth_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeFixedwingMetricsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetricsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetricsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetricsResponse, _impl_.fixedwing_metrics_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeImuRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ImuResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ImuResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ImuResponse, _impl_.imu_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeScaledImuRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledImuResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledImuResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledImuResponse, _impl_.imu_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeRawImuRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawImuResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawImuResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawImuResponse, _impl_.imu_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeHealthAllOkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HealthAllOkResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HealthAllOkResponse, _impl_.is_health_all_ok_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeUnixEpochTimeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::UnixEpochTimeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::UnixEpochTimeResponse, _impl_.time_us_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeDistanceSensorRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensorResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensorResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensorResponse, _impl_.distance_sensor_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeScaledPressureRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressureResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressureResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressureResponse, _impl_.scaled_pressure_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeHeadingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HeadingResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HeadingResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::HeadingResponse, _impl_.heading_deg_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeAltitudeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AltitudeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AltitudeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AltitudeResponse, _impl_.altitude_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SubscribeWindRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::WindResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::WindResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::WindResponse, _impl_.wind_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHomeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHomeRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHomeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHomeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHomeResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateInAirRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateInAirRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateInAirResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateInAirResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateInAirResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateLandedStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateLandedStateRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateLandedStateResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateLandedStateResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateLandedStateResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVtolStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVtolStateRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVtolStateResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVtolStateResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVtolStateResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeEulerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeEulerRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeEulerResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeEulerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeEulerResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVelocityNedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVelocityNedRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVelocityNedResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVelocityNedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateVelocityNedResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGpsInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGpsInfoRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGpsInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGpsInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGpsInfoResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawGpsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawGpsRequest, _impl_.rate_hz_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateBatteryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateBatteryRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateBatteryResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateBatteryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateBatteryResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRcStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRcStatusRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRcStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRcStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRcStatusResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateOdometryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateOdometryRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateOdometryResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateOdometryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateOdometryResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGroundTruthRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGroundTruthRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGroundTruthResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGroundTruthResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateGroundTruthResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateImuRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateImuRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateImuResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateImuResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateImuResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateScaledImuRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateScaledImuRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateScaledImuResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateScaledImuResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateScaledImuResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawImuRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawImuRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawImuResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawImuResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateRawImuResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateDistanceSensorRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateDistanceSensorRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateDistanceSensorResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateDistanceSensorResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateDistanceSensorResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GetGpsGlobalOriginRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse, _impl_.telemetry_result_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse, _impl_.gps_global_origin_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAltitudeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAltitudeRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAltitudeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAltitudeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateAltitudeResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHealthRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHealthRequest, _impl_.rate_hz_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHealthResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHealthResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::SetRateHealthResponse, _impl_.telemetry_result_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Position, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Position, _impl_.latitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Position, _impl_.longitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Position, _impl_.absolute_altitude_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Position, _impl_.relative_altitude_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Heading, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Heading, _impl_.heading_deg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Quaternion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Quaternion, _impl_.w_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Quaternion, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Quaternion, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Quaternion, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Quaternion, _impl_.timestamp_us_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::EulerAngle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::EulerAngle, _impl_.roll_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::EulerAngle, _impl_.pitch_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::EulerAngle, _impl_.yaw_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::EulerAngle, _impl_.timestamp_us_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityBody, _impl_.roll_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityBody, _impl_.pitch_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityBody, _impl_.yaw_rad_s_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsInfo, _impl_.num_satellites_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsInfo, _impl_.fix_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.timestamp_us_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.latitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.longitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.absolute_altitude_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.hdop_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.vdop_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.velocity_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.cog_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.altitude_ellipsoid_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.horizontal_uncertainty_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.vertical_uncertainty_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.velocity_uncertainty_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.heading_uncertainty_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RawGps, _impl_.yaw_deg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.temperature_degc_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.voltage_v_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.current_battery_a_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.capacity_consumed_ah_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.remaining_percent_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.time_remaining_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Battery, _impl_.battery_function_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_gyrometer_calibration_ok_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_accelerometer_calibration_ok_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_magnetometer_calibration_ok_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_local_position_ok_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_global_position_ok_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_home_position_ok_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Health, _impl_.is_armable_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatus, _impl_.was_available_once_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatus, _impl_.is_available_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::RcStatus, _impl_.signal_strength_percent_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::StatusText, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::StatusText, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::StatusText, _impl_.text_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorControlTarget, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorControlTarget, _impl_.group_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorControlTarget, _impl_.controls_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorOutputStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorOutputStatus, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ActuatorOutputStatus, _impl_.actuator_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Covariance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Covariance, _impl_.covariance_matrix_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityBody, _impl_.x_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityBody, _impl_.y_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityBody, _impl_.z_m_s_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionBody, _impl_.x_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionBody, _impl_.y_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionBody, _impl_.z_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.time_usec_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.child_frame_id_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.position_body_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.q_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.velocity_body_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.angular_velocity_body_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.pose_covariance_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Odometry, _impl_.velocity_covariance_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensor, _impl_.minimum_distance_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensor, _impl_.maximum_distance_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensor, _impl_.current_distance_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::DistanceSensor, _impl_.orientation_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressure, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressure, _impl_.timestamp_us_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressure, _impl_.absolute_pressure_hpa_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressure, _impl_.differential_pressure_hpa_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressure, _impl_.temperature_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::ScaledPressure, _impl_.differential_pressure_temperature_deg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionNed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionNed, _impl_.north_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionNed, _impl_.east_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionNed, _impl_.down_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNed, _impl_.north_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNed, _impl_.east_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::VelocityNed, _impl_.down_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNed, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::PositionVelocityNed, _impl_.velocity_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruth, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruth, _impl_.latitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruth, _impl_.longitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GroundTruth, _impl_.absolute_altitude_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _impl_.airspeed_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _impl_.throttle_percentage_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _impl_.climb_rate_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _impl_.groundspeed_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _impl_.heading_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::FixedwingMetrics, _impl_.absolute_altitude_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AccelerationFrd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AccelerationFrd, _impl_.forward_m_s2_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AccelerationFrd, _impl_.right_m_s2_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AccelerationFrd, _impl_.down_m_s2_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityFrd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityFrd, _impl_.forward_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityFrd, _impl_.right_rad_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::AngularVelocityFrd, _impl_.down_rad_s_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::MagneticFieldFrd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::MagneticFieldFrd, _impl_.forward_gauss_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::MagneticFieldFrd, _impl_.right_gauss_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::MagneticFieldFrd, _impl_.down_gauss_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _impl_.acceleration_frd_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _impl_.angular_velocity_frd_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _impl_.magnetic_field_frd_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _impl_.temperature_degc_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Imu, _impl_.timestamp_us_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsGlobalOrigin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsGlobalOrigin, _impl_.latitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsGlobalOrigin, _impl_.longitude_deg_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::GpsGlobalOrigin, _impl_.altitude_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _impl_.altitude_monotonic_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _impl_.altitude_amsl_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _impl_.altitude_local_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _impl_.altitude_relative_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _impl_.altitude_terrain_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Altitude, _impl_.bottom_clearance_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.wind_x_ned_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.wind_y_ned_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.wind_z_ned_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.horizontal_variability_stddev_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.vertical_variability_stddev_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.wind_altitude_msl_m_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.horizontal_wind_speed_accuracy_m_s_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::Wind, _impl_.vertical_wind_speed_accuracy_m_s_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::TelemetryResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::TelemetryResult, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::telemetry::TelemetryResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribePositionRequest)},
        {8, 17, -1, sizeof(::mavsdk::rpc::telemetry::PositionResponse)},
        {18, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeHomeRequest)},
        {26, 35, -1, sizeof(::mavsdk::rpc::telemetry::HomeResponse)},
        {36, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeInAirRequest)},
        {44, -1, -1, sizeof(::mavsdk::rpc::telemetry::InAirResponse)},
        {53, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeLandedStateRequest)},
        {61, -1, -1, sizeof(::mavsdk::rpc::telemetry::LandedStateResponse)},
        {70, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeArmedRequest)},
        {78, -1, -1, sizeof(::mavsdk::rpc::telemetry::ArmedResponse)},
        {87, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeVtolStateRequest)},
        {95, -1, -1, sizeof(::mavsdk::rpc::telemetry::VtolStateResponse)},
        {104, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeAttitudeQuaternionRequest)},
        {112, 121, -1, sizeof(::mavsdk::rpc::telemetry::AttitudeQuaternionResponse)},
        {122, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeAttitudeEulerRequest)},
        {130, 139, -1, sizeof(::mavsdk::rpc::telemetry::AttitudeEulerResponse)},
        {140, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeAttitudeAngularVelocityBodyRequest)},
        {148, 157, -1, sizeof(::mavsdk::rpc::telemetry::AttitudeAngularVelocityBodyResponse)},
        {158, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeVelocityNedRequest)},
        {166, 175, -1, sizeof(::mavsdk::rpc::telemetry::VelocityNedResponse)},
        {176, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeGpsInfoRequest)},
        {184, 193, -1, sizeof(::mavsdk::rpc::telemetry::GpsInfoResponse)},
        {194, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeRawGpsRequest)},
        {202, 211, -1, sizeof(::mavsdk::rpc::telemetry::RawGpsResponse)},
        {212, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeBatteryRequest)},
        {220, 229, -1, sizeof(::mavsdk::rpc::telemetry::BatteryResponse)},
        {230, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeFlightModeRequest)},
        {238, -1, -1, sizeof(::mavsdk::rpc::telemetry::FlightModeResponse)},
        {247, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeHealthRequest)},
        {255, 264, -1, sizeof(::mavsdk::rpc::telemetry::HealthResponse)},
        {265, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeRcStatusRequest)},
        {273, 282, -1, sizeof(::mavsdk::rpc::telemetry::RcStatusResponse)},
        {283, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeStatusTextRequest)},
        {291, 300, -1, sizeof(::mavsdk::rpc::telemetry::StatusTextResponse)},
        {301, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeActuatorControlTargetRequest)},
        {309, 318, -1, sizeof(::mavsdk::rpc::telemetry::ActuatorControlTargetResponse)},
        {319, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeActuatorOutputStatusRequest)},
        {327, 336, -1, sizeof(::mavsdk::rpc::telemetry::ActuatorOutputStatusResponse)},
        {337, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeOdometryRequest)},
        {345, 354, -1, sizeof(::mavsdk::rpc::telemetry::OdometryResponse)},
        {355, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribePositionVelocityNedRequest)},
        {363, 372, -1, sizeof(::mavsdk::rpc::telemetry::PositionVelocityNedResponse)},
        {373, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeGroundTruthRequest)},
        {381, 390, -1, sizeof(::mavsdk::rpc::telemetry::GroundTruthResponse)},
        {391, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeFixedwingMetricsRequest)},
        {399, 408, -1, sizeof(::mavsdk::rpc::telemetry::FixedwingMetricsResponse)},
        {409, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeImuRequest)},
        {417, 426, -1, sizeof(::mavsdk::rpc::telemetry::ImuResponse)},
        {427, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeScaledImuRequest)},
        {435, 444, -1, sizeof(::mavsdk::rpc::telemetry::ScaledImuResponse)},
        {445, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeRawImuRequest)},
        {453, 462, -1, sizeof(::mavsdk::rpc::telemetry::RawImuResponse)},
        {463, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeHealthAllOkRequest)},
        {471, -1, -1, sizeof(::mavsdk::rpc::telemetry::HealthAllOkResponse)},
        {480, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeUnixEpochTimeRequest)},
        {488, -1, -1, sizeof(::mavsdk::rpc::telemetry::UnixEpochTimeResponse)},
        {497, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeDistanceSensorRequest)},
        {505, 514, -1, sizeof(::mavsdk::rpc::telemetry::DistanceSensorResponse)},
        {515, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeScaledPressureRequest)},
        {523, 532, -1, sizeof(::mavsdk::rpc::telemetry::ScaledPressureResponse)},
        {533, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeHeadingRequest)},
        {541, 550, -1, sizeof(::mavsdk::rpc::telemetry::HeadingResponse)},
        {551, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeAltitudeRequest)},
        {559, 568, -1, sizeof(::mavsdk::rpc::telemetry::AltitudeResponse)},
        {569, -1, -1, sizeof(::mavsdk::rpc::telemetry::SubscribeWindRequest)},
        {577, 586, -1, sizeof(::mavsdk::rpc::telemetry::WindResponse)},
        {587, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRatePositionRequest)},
        {596, 605, -1, sizeof(::mavsdk::rpc::telemetry::SetRatePositionResponse)},
        {606, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateHomeRequest)},
        {615, 624, -1, sizeof(::mavsdk::rpc::telemetry::SetRateHomeResponse)},
        {625, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateInAirRequest)},
        {634, 643, -1, sizeof(::mavsdk::rpc::telemetry::SetRateInAirResponse)},
        {644, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateLandedStateRequest)},
        {653, 662, -1, sizeof(::mavsdk::rpc::telemetry::SetRateLandedStateResponse)},
        {663, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateVtolStateRequest)},
        {672, 681, -1, sizeof(::mavsdk::rpc::telemetry::SetRateVtolStateResponse)},
        {682, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAttitudeEulerRequest)},
        {691, 700, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAttitudeEulerResponse)},
        {701, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionRequest)},
        {710, 719, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionResponse)},
        {720, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyRequest)},
        {729, 738, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyResponse)},
        {739, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateVelocityNedRequest)},
        {748, 757, -1, sizeof(::mavsdk::rpc::telemetry::SetRateVelocityNedResponse)},
        {758, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateGpsInfoRequest)},
        {767, 776, -1, sizeof(::mavsdk::rpc::telemetry::SetRateGpsInfoResponse)},
        {777, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateRawGpsRequest)},
        {786, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateBatteryRequest)},
        {795, 804, -1, sizeof(::mavsdk::rpc::telemetry::SetRateBatteryResponse)},
        {805, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateRcStatusRequest)},
        {814, 823, -1, sizeof(::mavsdk::rpc::telemetry::SetRateRcStatusResponse)},
        {824, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetRequest)},
        {833, 842, -1, sizeof(::mavsdk::rpc::telemetry::SetRateActuatorControlTargetResponse)},
        {843, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusRequest)},
        {852, 861, -1, sizeof(::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusResponse)},
        {862, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateOdometryRequest)},
        {871, 880, -1, sizeof(::mavsdk::rpc::telemetry::SetRateOdometryResponse)},
        {881, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedRequest)},
        {890, 899, -1, sizeof(::mavsdk::rpc::telemetry::SetRatePositionVelocityNedResponse)},
        {900, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateGroundTruthRequest)},
        {909, 918, -1, sizeof(::mavsdk::rpc::telemetry::SetRateGroundTruthResponse)},
        {919, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsRequest)},
        {928, 937, -1, sizeof(::mavsdk::rpc::telemetry::SetRateFixedwingMetricsResponse)},
        {938, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateImuRequest)},
        {947, 956, -1, sizeof(::mavsdk::rpc::telemetry::SetRateImuResponse)},
        {957, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateScaledImuRequest)},
        {966, 975, -1, sizeof(::mavsdk::rpc::telemetry::SetRateScaledImuResponse)},
        {976, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateRawImuRequest)},
        {985, 994, -1, sizeof(::mavsdk::rpc::telemetry::SetRateRawImuResponse)},
        {995, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeRequest)},
        {1004, 1013, -1, sizeof(::mavsdk::rpc::telemetry::SetRateUnixEpochTimeResponse)},
        {1014, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateDistanceSensorRequest)},
        {1023, 1032, -1, sizeof(::mavsdk::rpc::telemetry::SetRateDistanceSensorResponse)},
        {1033, -1, -1, sizeof(::mavsdk::rpc::telemetry::GetGpsGlobalOriginRequest)},
        {1041, 1051, -1, sizeof(::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse)},
        {1053, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAltitudeRequest)},
        {1062, 1071, -1, sizeof(::mavsdk::rpc::telemetry::SetRateAltitudeResponse)},
        {1072, -1, -1, sizeof(::mavsdk::rpc::telemetry::SetRateHealthRequest)},
        {1081, 1090, -1, sizeof(::mavsdk::rpc::telemetry::SetRateHealthResponse)},
        {1091, -1, -1, sizeof(::mavsdk::rpc::telemetry::Position)},
        {1103, -1, -1, sizeof(::mavsdk::rpc::telemetry::Heading)},
        {1112, -1, -1, sizeof(::mavsdk::rpc::telemetry::Quaternion)},
        {1125, -1, -1, sizeof(::mavsdk::rpc::telemetry::EulerAngle)},
        {1137, -1, -1, sizeof(::mavsdk::rpc::telemetry::AngularVelocityBody)},
        {1148, -1, -1, sizeof(::mavsdk::rpc::telemetry::GpsInfo)},
        {1158, -1, -1, sizeof(::mavsdk::rpc::telemetry::RawGps)},
        {1180, -1, -1, sizeof(::mavsdk::rpc::telemetry::Battery)},
        {1196, -1, -1, sizeof(::mavsdk::rpc::telemetry::Health)},
        {1211, -1, -1, sizeof(::mavsdk::rpc::telemetry::RcStatus)},
        {1222, -1, -1, sizeof(::mavsdk::rpc::telemetry::StatusText)},
        {1232, -1, -1, sizeof(::mavsdk::rpc::telemetry::ActuatorControlTarget)},
        {1242, -1, -1, sizeof(::mavsdk::rpc::telemetry::ActuatorOutputStatus)},
        {1252, -1, -1, sizeof(::mavsdk::rpc::telemetry::Covariance)},
        {1261, -1, -1, sizeof(::mavsdk::rpc::telemetry::VelocityBody)},
        {1272, -1, -1, sizeof(::mavsdk::rpc::telemetry::PositionBody)},
        {1283, 1300, -1, sizeof(::mavsdk::rpc::telemetry::Odometry)},
        {1309, 1321, -1, sizeof(::mavsdk::rpc::telemetry::DistanceSensor)},
        {1325, -1, -1, sizeof(::mavsdk::rpc::telemetry::ScaledPressure)},
        {1338, -1, -1, sizeof(::mavsdk::rpc::telemetry::PositionNed)},
        {1349, -1, -1, sizeof(::mavsdk::rpc::telemetry::VelocityNed)},
        {1360, 1370, -1, sizeof(::mavsdk::rpc::telemetry::PositionVelocityNed)},
        {1372, -1, -1, sizeof(::mavsdk::rpc::telemetry::GroundTruth)},
        {1383, -1, -1, sizeof(::mavsdk::rpc::telemetry::FixedwingMetrics)},
        {1397, -1, -1, sizeof(::mavsdk::rpc::telemetry::AccelerationFrd)},
        {1408, -1, -1, sizeof(::mavsdk::rpc::telemetry::AngularVelocityFrd)},
        {1419, -1, -1, sizeof(::mavsdk::rpc::telemetry::MagneticFieldFrd)},
        {1430, 1443, -1, sizeof(::mavsdk::rpc::telemetry::Imu)},
        {1448, -1, -1, sizeof(::mavsdk::rpc::telemetry::GpsGlobalOrigin)},
        {1459, -1, -1, sizeof(::mavsdk::rpc::telemetry::Altitude)},
        {1473, -1, -1, sizeof(::mavsdk::rpc::telemetry::Wind)},
        {1489, -1, -1, sizeof(::mavsdk::rpc::telemetry::TelemetryResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::telemetry::_SubscribePositionRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_PositionResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeHomeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_HomeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeInAirRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_InAirResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeLandedStateRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_LandedStateResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeArmedRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ArmedResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeVtolStateRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_VtolStateResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeAttitudeQuaternionRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AttitudeQuaternionResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeAttitudeEulerRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AttitudeEulerResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeAttitudeAngularVelocityBodyRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AttitudeAngularVelocityBodyResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeVelocityNedRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_VelocityNedResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeGpsInfoRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GpsInfoResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeRawGpsRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_RawGpsResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeBatteryRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_BatteryResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeFlightModeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_FlightModeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeHealthRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_HealthResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeRcStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_RcStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeStatusTextRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_StatusTextResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeActuatorControlTargetRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ActuatorControlTargetResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeActuatorOutputStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ActuatorOutputStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeOdometryRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_OdometryResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribePositionVelocityNedRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_PositionVelocityNedResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeGroundTruthRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GroundTruthResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeFixedwingMetricsRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_FixedwingMetricsResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeImuRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ImuResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeScaledImuRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ScaledImuResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeRawImuRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_RawImuResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeHealthAllOkRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_HealthAllOkResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeUnixEpochTimeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_UnixEpochTimeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeDistanceSensorRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_DistanceSensorResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeScaledPressureRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ScaledPressureResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeHeadingRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_HeadingResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeAltitudeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AltitudeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SubscribeWindRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_WindResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRatePositionRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRatePositionResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateHomeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateHomeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateInAirRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateInAirResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateLandedStateRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateLandedStateResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateVtolStateRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateVtolStateResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAttitudeEulerRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAttitudeEulerResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAttitudeQuaternionRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAttitudeQuaternionResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAttitudeAngularVelocityBodyRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAttitudeAngularVelocityBodyResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateVelocityNedRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateVelocityNedResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateGpsInfoRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateGpsInfoResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateRawGpsRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateBatteryRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateBatteryResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateRcStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateRcStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateActuatorControlTargetRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateActuatorControlTargetResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateActuatorOutputStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateActuatorOutputStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateOdometryRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateOdometryResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRatePositionVelocityNedRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRatePositionVelocityNedResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateGroundTruthRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateGroundTruthResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateFixedwingMetricsRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateFixedwingMetricsResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateImuRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateImuResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateScaledImuRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateScaledImuResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateRawImuRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateRawImuResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateUnixEpochTimeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateUnixEpochTimeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateDistanceSensorRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateDistanceSensorResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GetGpsGlobalOriginRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GetGpsGlobalOriginResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAltitudeRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateAltitudeResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateHealthRequest_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_SetRateHealthResponse_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Position_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Heading_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Quaternion_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_EulerAngle_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AngularVelocityBody_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GpsInfo_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_RawGps_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Battery_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Health_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_RcStatus_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_StatusText_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ActuatorControlTarget_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ActuatorOutputStatus_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Covariance_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_VelocityBody_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_PositionBody_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Odometry_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_DistanceSensor_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_ScaledPressure_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_PositionNed_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_VelocityNed_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_PositionVelocityNed_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GroundTruth_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_FixedwingMetrics_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AccelerationFrd_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_AngularVelocityFrd_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_MagneticFieldFrd_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Imu_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_GpsGlobalOrigin_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Altitude_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_Wind_default_instance_._instance,
    &::mavsdk::rpc::telemetry::_TelemetryResult_default_instance_._instance,
};
const char descriptor_table_protodef_telemetry_2ftelemetry_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\031telemetry/telemetry.proto\022\024mavsdk.rpc."
    "telemetry\032\024mavsdk_options.proto\"\032\n\030Subsc"
    "ribePositionRequest\"D\n\020PositionResponse\022"
    "0\n\010position\030\001 \001(\0132\036.mavsdk.rpc.telemetry"
    ".Position\"\026\n\024SubscribeHomeRequest\"<\n\014Hom"
    "eResponse\022,\n\004home\030\001 \001(\0132\036.mavsdk.rpc.tel"
    "emetry.Position\"\027\n\025SubscribeInAirRequest"
    "\"\"\n\rInAirResponse\022\021\n\tis_in_air\030\001 \001(\010\"\035\n\033"
    "SubscribeLandedStateRequest\"N\n\023LandedSta"
    "teResponse\0227\n\014landed_state\030\001 \001(\0162!.mavsd"
    "k.rpc.telemetry.LandedState\"\027\n\025Subscribe"
    "ArmedRequest\"!\n\rArmedResponse\022\020\n\010is_arme"
    "d\030\001 \001(\010\"\033\n\031SubscribeVtolStateRequest\"H\n\021"
    "VtolStateResponse\0223\n\nvtol_state\030\001 \001(\0162\037."
    "mavsdk.rpc.telemetry.VtolState\"$\n\"Subscr"
    "ibeAttitudeQuaternionRequest\"[\n\032Attitude"
    "QuaternionResponse\022=\n\023attitude_quaternio"
    "n\030\001 \001(\0132 .mavsdk.rpc.telemetry.Quaternio"
    "n\"\037\n\035SubscribeAttitudeEulerRequest\"Q\n\025At"
    "titudeEulerResponse\0228\n\016attitude_euler\030\001 "
    "\001(\0132 .mavsdk.rpc.telemetry.EulerAngle\"-\n"
    "+SubscribeAttitudeAngularVelocityBodyReq"
    "uest\"x\n#AttitudeAngularVelocityBodyRespo"
    "nse\022Q\n\036attitude_angular_velocity_body\030\001 "
    "\001(\0132).mavsdk.rpc.telemetry.AngularVeloci"
    "tyBody\"\035\n\033SubscribeVelocityNedRequest\"N\n"
    "\023VelocityNedResponse\0227\n\014velocity_ned\030\001 \001"
    "(\0132!.mavsdk.rpc.telemetry.VelocityNed\"\031\n"
    "\027SubscribeGpsInfoRequest\"B\n\017GpsInfoRespo"
    "nse\022/\n\010gps_info\030\001 \001(\0132\035.mavsdk.rpc.telem"
    "etry.GpsInfo\"\030\n\026SubscribeRawGpsRequest\"\?"
    "\n\016RawGpsResponse\022-\n\007raw_gps\030\001 \001(\0132\034.mavs"
    "dk.rpc.telemetry.RawGps\"\031\n\027SubscribeBatt"
    "eryRequest\"A\n\017BatteryResponse\022.\n\007battery"
    "\030\001 \001(\0132\035.mavsdk.rpc.telemetry.Battery\"\034\n"
    "\032SubscribeFlightModeRequest\"K\n\022FlightMod"
    "eResponse\0225\n\013flight_mode\030\001 \001(\0162 .mavsdk."
    "rpc.telemetry.FlightMode\"\030\n\026SubscribeHea"
    "lthRequest\">\n\016HealthResponse\022,\n\006health\030\001"
    " \001(\0132\034.mavsdk.rpc.telemetry.Health\"\032\n\030Su"
    "bscribeRcStatusRequest\"E\n\020RcStatusRespon"
    "se\0221\n\trc_status\030\001 \001(\0132\036.mavsdk.rpc.telem"
    "etry.RcStatus\"\034\n\032SubscribeStatusTextRequ"
    "est\"K\n\022StatusTextResponse\0225\n\013status_text"
    "\030\001 \001(\0132 .mavsdk.rpc.telemetry.StatusText"
    "\"\'\n%SubscribeActuatorControlTargetReques"
    "t\"m\n\035ActuatorControlTargetResponse\022L\n\027ac"
    "tuator_control_target\030\001 \001(\0132+.mavsdk.rpc"
    ".telemetry.ActuatorControlTarget\"&\n$Subs"
    "cribeActuatorOutputStatusRequest\"j\n\034Actu"
    "atorOutputStatusResponse\022J\n\026actuator_out"
    "put_status\030\001 \001(\0132*.mavsdk.rpc.telemetry."
    "ActuatorOutputStatus\"\032\n\030SubscribeOdometr"
    "yRequest\"D\n\020OdometryResponse\0220\n\010odometry"
    "\030\001 \001(\0132\036.mavsdk.rpc.telemetry.Odometry\"%"
    "\n#SubscribePositionVelocityNedRequest\"g\n"
    "\033PositionVelocityNedResponse\022H\n\025position"
    "_velocity_ned\030\001 \001(\0132).mavsdk.rpc.telemet"
    "ry.PositionVelocityNed\"\035\n\033SubscribeGroun"
    "dTruthRequest\"N\n\023GroundTruthResponse\0227\n\014"
    "ground_truth\030\001 \001(\0132!.mavsdk.rpc.telemetr"
    "y.GroundTruth\"\"\n SubscribeFixedwingMetri"
    "csRequest\"]\n\030FixedwingMetricsResponse\022A\n"
    "\021fixedwing_metrics\030\001 \001(\0132&.mavsdk.rpc.te"
    "lemetry.FixedwingMetrics\"\025\n\023SubscribeImu"
    "Request\"5\n\013ImuResponse\022&\n\003imu\030\001 \001(\0132\031.ma"
    "vsdk.rpc.telemetry.Imu\"\033\n\031SubscribeScale"
    "dImuRequest\";\n\021ScaledImuResponse\022&\n\003imu\030"
    "\001 \001(\0132\031.mavsdk.rpc.telemetry.Imu\"\030\n\026Subs"
    "cribeRawImuRequest\"8\n\016RawImuResponse\022&\n\003"
    "imu\030\001 \001(\0132\031.mavsdk.rpc.telemetry.Imu\"\035\n\033"
    "SubscribeHealthAllOkRequest\"/\n\023HealthAll"
    "OkResponse\022\030\n\020is_health_all_ok\030\001 \001(\010\"\037\n\035"
    "SubscribeUnixEpochTimeRequest\"(\n\025UnixEpo"
    "chTimeResponse\022\017\n\007time_us\030\001 \001(\004\" \n\036Subsc"
    "ribeDistanceSensorRequest\"W\n\026DistanceSen"
    "sorResponse\022=\n\017distance_sensor\030\001 \001(\0132$.m"
    "avsdk.rpc.telemetry.DistanceSensor\" \n\036Su"
    "bscribeScaledPressureRequest\"W\n\026ScaledPr"
    "essureResponse\022=\n\017scaled_pressure\030\001 \001(\0132"
    "$.mavsdk.rpc.telemetry.ScaledPressure\"\031\n"
    "\027SubscribeHeadingRequest\"E\n\017HeadingRespo"
    "nse\0222\n\013heading_deg\030\001 \001(\0132\035.mavsdk.rpc.te"
    "lemetry.Heading\"\032\n\030SubscribeAltitudeRequ"
    "est\"D\n\020AltitudeResponse\0220\n\010altitude\030\001 \001("
    "\0132\036.mavsdk.rpc.telemetry.Altitude\"\026\n\024Sub"
    "scribeWindRequest\"8\n\014WindResponse\022(\n\004win"
    "d\030\001 \001(\0132\032.mavsdk.rpc.telemetry.Wind\")\n\026S"
    "etRatePositionRequest\022\017\n\007rate_hz\030\001 \001(\001\"Z"
    "\n\027SetRatePositionResponse\022\?\n\020telemetry_r"
    "esult\030\001 \001(\0132%.mavsdk.rpc.telemetry.Telem"
    "etryResult\"%\n\022SetRateHomeRequest\022\017\n\007rate"
    "_hz\030\001 \001(\001\"V\n\023SetRateHomeResponse\022\?\n\020tele"
    "metry_result\030\001 \001(\0132%.mavsdk.rpc.telemetr"
    "y.TelemetryResult\"&\n\023SetRateInAirRequest"
    "\022\017\n\007rate_hz\030\001 \001(\001\"W\n\024SetRateInAirRespons"
    "e\022\?\n\020telemetry_result\030\001 \001(\0132%.mavsdk.rpc"
    ".telemetry.TelemetryResult\",\n\031SetRateLan"
    "dedStateRequest\022\017\n\007rate_hz\030\001 \001(\001\"]\n\032SetR"
    "ateLandedStateResponse\022\?\n\020telemetry_resu"
    "lt\030\001 \001(\0132%.mavsdk.rpc.telemetry.Telemetr"
    "yResult\"*\n\027SetRateVtolStateRequest\022\017\n\007ra"
    "te_hz\030\001 \001(\001\"[\n\030SetRateVtolStateResponse\022"
    "\?\n\020telemetry_result\030\001 \001(\0132%.mavsdk.rpc.t"
    "elemetry.TelemetryResult\".\n\033SetRateAttit"
    "udeEulerRequest\022\017\n\007rate_hz\030\001 \001(\001\"_\n\034SetR"
    "ateAttitudeEulerResponse\022\?\n\020telemetry_re"
    "sult\030\001 \001(\0132%.mavsdk.rpc.telemetry.Teleme"
    "tryResult\"3\n SetRateAttitudeQuaternionRe"
    "quest\022\017\n\007rate_hz\030\001 \001(\001\"d\n!SetRateAttitud"
    "eQuaternionResponse\022\?\n\020telemetry_result\030"
    "\001 \001(\0132%.mavsdk.rpc.telemetry.TelemetryRe"
    "sult\"<\n)SetRateAttitudeAngularVelocityBo"
    "dyRequest\022\017\n\007rate_hz\030\001 \001(\001\"m\n*SetRateAtt"
    "itudeAngularVelocityBodyResponse\022\?\n\020tele"
    "metry_result\030\001 \001(\0132%.mavsdk.rpc.telemetr"
    "y.TelemetryResult\",\n\031SetRateVelocityNedR"
    "equest\022\017\n\007rate_hz\030\001 \001(\001\"]\n\032SetRateVeloci"
    "tyNedResponse\022\?\n\020telemetry_result\030\001 \001(\0132"
    "%.mavsdk.rpc.telemetry.TelemetryResult\"("
    "\n\025SetRateGpsInfoRequest\022\017\n\007rate_hz\030\001 \001(\001"
    "\"Y\n\026SetRateGpsInfoResponse\022\?\n\020telemetry_"
    "result\030\001 \001(\0132%.mavsdk.rpc.telemetry.Tele"
    "metryResult\"\'\n\024SetRateRawGpsRequest\022\017\n\007r"
    "ate_hz\030\001 \001(\001\"(\n\025SetRateBatteryRequest\022\017\n"
    "\007rate_hz\030\001 \001(\001\"Y\n\026SetRateBatteryResponse"
    "\022\?\n\020telemetry_result\030\001 \001(\0132%.mavsdk.rpc."
    "telemetry.TelemetryResult\")\n\026SetRateRcSt"
    "atusRequest\022\017\n\007rate_hz\030\001 \001(\001\"Z\n\027SetRateR"
    "cStatusResponse\022\?\n\020telemetry_result\030\001 \001("
    "\0132%.mavsdk.rpc.telemetry.TelemetryResult"
    "\"6\n#SetRateActuatorControlTargetRequest\022"
    "\017\n\007rate_hz\030\001 \001(\001\"g\n$SetRateActuatorContr"
    "olTargetResponse\022\?\n\020telemetry_result\030\001 \001"
    "(\0132%.mavsdk.rpc.telemetry.TelemetryResul"
    "t\"5\n\"SetRateActuatorOutputStatusRequest\022"
    "\017\n\007rate_hz\030\001 \001(\001\"f\n#SetRateActuatorOutpu"
    "tStatusResponse\022\?\n\020telemetry_result\030\001 \001("
    "\0132%.mavsdk.rpc.telemetry.TelemetryResult"
    "\")\n\026SetRateOdometryRequest\022\017\n\007rate_hz\030\001 "
    "\001(\001\"Z\n\027SetRateOdometryResponse\022\?\n\020teleme"
    "try_result\030\001 \001(\0132%.mavsdk.rpc.telemetry."
    "TelemetryResult\"4\n!SetRatePositionVeloci"
    "tyNedRequest\022\017\n\007rate_hz\030\001 \001(\001\"e\n\"SetRate"
    "PositionVelocityNedResponse\022\?\n\020telemetry"
    "_result\030\001 \001(\0132%.mavsdk.rpc.telemetry.Tel"
    "emetryResult\",\n\031SetRateGroundTruthReques"
    "t\022\017\n\007rate_hz\030\001 \001(\001\"]\n\032SetRateGroundTruth"
    "Response\022\?\n\020telemetry_result\030\001 \001(\0132%.mav"
    "sdk.rpc.telemetry.TelemetryResult\"1\n\036Set"
    "RateFixedwingMetricsRequest\022\017\n\007rate_hz\030\001"
    " \001(\001\"b\n\037SetRateFixedwingMetricsResponse\022"
    "\?\n\020telemetry_result\030\001 \001(\0132%.mavsdk.rpc.t"
    "elemetry.TelemetryResult\"$\n\021SetRateImuRe"
    "quest\022\017\n\007rate_hz\030\001 \001(\001\"U\n\022SetRateImuResp"
    "onse\022\?\n\020telemetry_result\030\001 \001(\0132%.mavsdk."
    "rpc.telemetry.TelemetryResult\"*\n\027SetRate"
    "ScaledImuRequest\022\017\n\007rate_hz\030\001 \001(\001\"[\n\030Set"
    "RateScaledImuResponse\022\?\n\020telemetry_resul"
    "t\030\001 \001(\0132%.mavsdk.rpc.telemetry.Telemetry"
    "Result\"\'\n\024SetRateRawImuRequest\022\017\n\007rate_h"
    "z\030\001 \001(\001\"X\n\025SetRateRawImuResponse\022\?\n\020tele"
    "metry_result\030\001 \001(\0132%.mavsdk.rpc.telemetr"
    "y.TelemetryResult\".\n\033SetRateUnixEpochTim"
    "eRequest\022\017\n\007rate_hz\030\001 \001(\001\"_\n\034SetRateUnix"
    "EpochTimeResponse\022\?\n\020telemetry_result\030\001 "
    "\001(\0132%.mavsdk.rpc.telemetry.TelemetryResu"
    "lt\"/\n\034SetRateDistanceSensorRequest\022\017\n\007ra"
    "te_hz\030\001 \001(\001\"`\n\035SetRateDistanceSensorResp"
    "onse\022\?\n\020telemetry_result\030\001 \001(\0132%.mavsdk."
    "rpc.telemetry.TelemetryResult\"\033\n\031GetGpsG"
    "lobalOriginRequest\"\237\001\n\032GetGpsGlobalOrigi"
    "nResponse\022\?\n\020telemetry_result\030\001 \001(\0132%.ma"
    "vsdk.rpc.telemetry.TelemetryResult\022@\n\021gp"
    "s_global_origin\030\002 \001(\0132%.mavsdk.rpc.telem"
    "etry.GpsGlobalOrigin\")\n\026SetRateAltitudeR"
    "equest\022\017\n\007rate_hz\030\001 \001(\001\"Z\n\027SetRateAltitu"
    "deResponse\022\?\n\020telemetry_result\030\001 \001(\0132%.m"
    "avsdk.rpc.telemetry.TelemetryResult\"\'\n\024S"
    "etRateHealthRequest\022\017\n\007rate_hz\030\001 \001(\001\"X\n\025"
    "SetRateHealthResponse\022\?\n\020telemetry_resul"
    "t\030\001 \001(\0132%.mavsdk.rpc.telemetry.Telemetry"
    "Result\"\225\001\n\010Position\022\035\n\014latitude_deg\030\001 \001("
    "\001B\007\202\265\030\003NaN\022\036\n\rlongitude_deg\030\002 \001(\001B\007\202\265\030\003N"
    "aN\022$\n\023absolute_altitude_m\030\003 \001(\002B\007\202\265\030\003NaN"
    "\022$\n\023relative_altitude_m\030\004 \001(\002B\007\202\265\030\003NaN\"\'"
    "\n\007Heading\022\034\n\013heading_deg\030\001 \001(\001B\007\202\265\030\003NaN\""
    "r\n\nQuaternion\022\022\n\001w\030\001 \001(\002B\007\202\265\030\003NaN\022\022\n\001x\030\002"
    " \001(\002B\007\202\265\030\003NaN\022\022\n\001y\030\003 \001(\002B\007\202\265\030\003NaN\022\022\n\001z\030\004"
    " \001(\002B\007\202\265\030\003NaN\022\024\n\014timestamp_us\030\005 \001(\004\"s\n\nE"
    "ulerAngle\022\031\n\010roll_deg\030\001 \001(\002B\007\202\265\030\003NaN\022\032\n\t"
    "pitch_deg\030\002 \001(\002B\007\202\265\030\003NaN\022\030\n\007yaw_deg\030\003 \001("
    "\002B\007\202\265\030\003NaN\022\024\n\014timestamp_us\030\004 \001(\004\"l\n\023Angu"
    "larVelocityBody\022\033\n\nroll_rad_s\030\001 \001(\002B\007\202\265\030"
    "\003NaN\022\034\n\013pitch_rad_s\030\002 \001(\002B\007\202\265\030\003NaN\022\032\n\tya"
    "w_rad_s\030\003 \001(\002B\007\202\265\030\003NaN\"Y\n\007GpsInfo\022\035\n\016num"
    "_satellites\030\001 \001(\005B\005\202\265\030\0010\022/\n\010fix_type\030\002 \001"
    "(\0162\035.mavsdk.rpc.telemetry.FixType\"\337\002\n\006Ra"
    "wGps\022\024\n\014timestamp_us\030\001 \001(\004\022\024\n\014latitude_d"
    "eg\030\002 \001(\001\022\025\n\rlongitude_deg\030\003 \001(\001\022\033\n\023absol"
    "ute_altitude_m\030\004 \001(\002\022\014\n\004hdop\030\005 \001(\002\022\014\n\004vd"
    "op\030\006 \001(\002\022\024\n\014velocity_m_s\030\007 \001(\002\022\017\n\007cog_de"
    "g\030\010 \001(\002\022\034\n\024altitude_ellipsoid_m\030\t \001(\002\022 \n"
    "\030horizontal_uncertainty_m\030\n \001(\002\022\036\n\026verti"
    "cal_uncertainty_m\030\013 \001(\002\022 \n\030velocity_unce"
    "rtainty_m_s\030\014 \001(\002\022\037\n\027heading_uncertainty"
    "_deg\030\r \001(\002\022\017\n\007yaw_deg\030\016 \001(\002\"\256\002\n\007Battery\022"
    "\021\n\002id\030\001 \001(\rB\005\202\265\030\0010\022!\n\020temperature_degc\030\002"
    " \001(\002B\007\202\265\030\003NaN\022\032\n\tvoltage_v\030\003 \001(\002B\007\202\265\030\003Na"
    "N\022\"\n\021current_battery_a\030\004 \001(\002B\007\202\265\030\003NaN\022%\n"
    "\024capacity_consumed_ah\030\005 \001(\002B\007\202\265\030\003NaN\022\"\n\021"
    "remaining_percent\030\006 \001(\002B\007\202\265\030\003NaN\022!\n\020time"
    "_remaining_s\030\007 \001(\002B\007\202\265\030\003NaN\022\?\n\020battery_f"
    "unction\030\010 \001(\0162%.mavsdk.rpc.telemetry.Bat"
    "teryFunction\"\271\002\n\006Health\022.\n\033is_gyrometer_"
    "calibration_ok\030\001 \001(\010B\t\202\265\030\005false\0222\n\037is_ac"
    "celerometer_calibration_ok\030\002 \001(\010B\t\202\265\030\005fa"
    "lse\0221\n\036is_magnetometer_calibration_ok\030\003 "
    "\001(\010B\t\202\265\030\005false\022\'\n\024is_local_position_ok\030\005"
    " \001(\010B\t\202\265\030\005false\022(\n\025is_global_position_ok"
    "\030\006 \001(\010B\t\202\265\030\005false\022&\n\023is_home_position_ok"
    "\030\007 \001(\010B\t\202\265\030\005false\022\035\n\nis_armable\030\010 \001(\010B\t\202"
    "\265\030\005false\"|\n\010RcStatus\022%\n\022was_available_on"
    "ce\030\001 \001(\010B\t\202\265\030\005false\022\037\n\014is_available\030\002 \001("
    "\010B\t\202\265\030\005false\022(\n\027signal_strength_percent\030"
    "\003 \001(\002B\007\202\265\030\003NaN\"N\n\nStatusText\0222\n\004type\030\001 \001"
    "(\0162$.mavsdk.rpc.telemetry.StatusTextType"
    "\022\014\n\004text\030\002 \001(\t\"\?\n\025ActuatorControlTarget\022"
    "\024\n\005group\030\001 \001(\005B\005\202\265\030\0010\022\020\n\010controls\030\002 \003(\002\""
    "\?\n\024ActuatorOutputStatus\022\025\n\006active\030\001 \001(\rB"
    "\005\202\265\030\0010\022\020\n\010actuator\030\002 \003(\002\"\'\n\nCovariance\022\031"
    "\n\021covariance_matrix\030\001 \003(\002\";\n\014VelocityBod"
    "y\022\r\n\005x_m_s\030\001 \001(\002\022\r\n\005y_m_s\030\002 \001(\002\022\r\n\005z_m_s"
    "\030\003 \001(\002\"5\n\014PositionBody\022\013\n\003x_m\030\001 \001(\002\022\013\n\003y"
    "_m\030\002 \001(\002\022\013\n\003z_m\030\003 \001(\002\"\354\004\n\010Odometry\022\021\n\tti"
    "me_usec\030\001 \001(\004\0229\n\010frame_id\030\002 \001(\0162\'.mavsdk"
    ".rpc.telemetry.Odometry.MavFrame\022\?\n\016chil"
    "d_frame_id\030\003 \001(\0162\'.mavsdk.rpc.telemetry."
    "Odometry.MavFrame\0229\n\rposition_body\030\004 \001(\013"
    "2\".mavsdk.rpc.telemetry.PositionBody\022+\n\001"
    "q\030\005 \001(\0132 .mavsdk.rpc.telemetry.Quaternio"
    "n\0229\n\rvelocity_body\030\006 \001(\0132\".mavsdk.rpc.te"
    "lemetry.VelocityBody\022H\n\025angular_velocity"
    "_body\030\007 \001(\0132).mavsdk.rpc.telemetry.Angul"
    "arVelocityBody\0229\n\017pose_covariance\030\010 \001(\0132"
    " .mavsdk.rpc.telemetry.Covariance\022=\n\023vel"
    "ocity_covariance\030\t \001(\0132 .mavsdk.rpc.tele"
    "metry.Covariance\"j\n\010MavFrame\022\023\n\017MAV_FRAM"
    "E_UNDEF\020\000\022\026\n\022MAV_FRAME_BODY_NED\020\010\022\030\n\024MAV"
    "_FRAME_VISION_NED\020\020\022\027\n\023MAV_FRAME_ESTIM_N"
    "ED\020\022\"\266\001\n\016DistanceSensor\022#\n\022minimum_dista"
    "nce_m\030\001 \001(\002B\007\202\265\030\003NaN\022#\n\022maximum_distance"
    "_m\030\002 \001(\002B\007\202\265\030\003NaN\022#\n\022current_distance_m\030"
    "\003 \001(\002B\007\202\265\030\003NaN\0225\n\013orientation\030\004 \001(\0132 .ma"
    "vsdk.rpc.telemetry.EulerAngle\"\260\001\n\016Scaled"
    "Pressure\022\024\n\014timestamp_us\030\001 \001(\004\022\035\n\025absolu"
    "te_pressure_hpa\030\002 \001(\002\022!\n\031differential_pr"
    "essure_hpa\030\003 \001(\002\022\027\n\017temperature_deg\030\004 \001("
    "\002\022-\n%differential_pressure_temperature_d"
    "eg\030\005 \001(\002\"Y\n\013PositionNed\022\030\n\007north_m\030\001 \001(\002"
    "B\007\202\265\030\003NaN\022\027\n\006east_m\030\002 \001(\002B\007\202\265\030\003NaN\022\027\n\006do"
    "wn_m\030\003 \001(\002B\007\202\265\030\003NaN\"D\n\013VelocityNed\022\021\n\tno"
    "rth_m_s\030\001 \001(\002\022\020\n\010east_m_s\030\002 \001(\002\022\020\n\010down_"
    "m_s\030\003 \001(\002\"\177\n\023PositionVelocityNed\0223\n\010posi"
    "tion\030\001 \001(\0132!.mavsdk.rpc.telemetry.Positi"
    "onNed\0223\n\010velocity\030\002 \001(\0132!.mavsdk.rpc.tel"
    "emetry.VelocityNed\"r\n\013GroundTruth\022\035\n\014lat"
    "itude_deg\030\001 \001(\001B\007\202\265\030\003NaN\022\036\n\rlongitude_de"
    "g\030\002 \001(\001B\007\202\265\030\003NaN\022$\n\023absolute_altitude_m\030"
    "\003 \001(\002B\007\202\265\030\003NaN\"\336\001\n\020FixedwingMetrics\022\035\n\014a"
    "irspeed_m_s\030\001 \001(\002B\007\202\265\030\003NaN\022$\n\023throttle_p"
    "ercentage\030\002 \001(\002B\007\202\265\030\003NaN\022\037\n\016climb_rate_m"
    "_s\030\003 \001(\002B\007\202\265\030\003NaN\022 \n\017groundspeed_m_s\030\004 \001"
    "(\002B\007\202\265\030\003NaN\022\034\n\013heading_deg\030\005 \001(\002B\007\202\265\030\003Na"
    "N\022$\n\023absolute_altitude_m\030\006 \001(\002B\007\202\265\030\003NaN\""
    "i\n\017AccelerationFrd\022\035\n\014forward_m_s2\030\001 \001(\002"
    "B\007\202\265\030\003NaN\022\033\n\nright_m_s2\030\002 \001(\002B\007\202\265\030\003NaN\022\032"
    "\n\tdown_m_s2\030\003 \001(\002B\007\202\265\030\003NaN\"o\n\022AngularVel"
    "ocityFrd\022\036\n\rforward_rad_s\030\001 \001(\002B\007\202\265\030\003NaN"
    "\022\034\n\013right_rad_s\030\002 \001(\002B\007\202\265\030\003NaN\022\033\n\ndown_r"
    "ad_s\030\003 \001(\002B\007\202\265\030\003NaN\"m\n\020MagneticFieldFrd\022"
    "\036\n\rforward_gauss\030\001 \001(\002B\007\202\265\030\003NaN\022\034\n\013right"
    "_gauss\030\002 \001(\002B\007\202\265\030\003NaN\022\033\n\ndown_gauss\030\003 \001("
    "\002B\007\202\265\030\003NaN\"\213\002\n\003Imu\022\?\n\020acceleration_frd\030\001"
    " \001(\0132%.mavsdk.rpc.telemetry.Acceleration"
    "Frd\022F\n\024angular_velocity_frd\030\002 \001(\0132(.mavs"
    "dk.rpc.telemetry.AngularVelocityFrd\022B\n\022m"
    "agnetic_field_frd\030\003 \001(\0132&.mavsdk.rpc.tel"
    "emetry.MagneticFieldFrd\022!\n\020temperature_d"
    "egc\030\004 \001(\002B\007\202\265\030\003NaN\022\024\n\014timestamp_us\030\005 \001(\004"
    "\"m\n\017GpsGlobalOrigin\022\035\n\014latitude_deg\030\001 \001("
    "\001B\007\202\265\030\003NaN\022\036\n\rlongitude_deg\030\002 \001(\001B\007\202\265\030\003N"
    "aN\022\033\n\naltitude_m\030\003 \001(\002B\007\202\265\030\003NaN\"\346\001\n\010Alti"
    "tude\022%\n\024altitude_monotonic_m\030\001 \001(\002B\007\202\265\030\003"
    "NaN\022 \n\017altitude_amsl_m\030\002 \001(\002B\007\202\265\030\003NaN\022!\n"
    "\020altitude_local_m\030\003 \001(\002B\007\202\265\030\003NaN\022$\n\023alti"
    "tude_relative_m\030\004 \001(\002B\007\202\265\030\003NaN\022#\n\022altitu"
    "de_terrain_m\030\005 \001(\002B\007\202\265\030\003NaN\022#\n\022bottom_cl"
    "earance_m\030\006 \001(\002B\007\202\265\030\003NaN\"\335\002\n\004Wind\022\037\n\016win"
    "d_x_ned_m_s\030\001 \001(\002B\007\202\265\030\003NaN\022\037\n\016wind_y_ned"
    "_m_s\030\002 \001(\002B\007\202\265\030\003NaN\022\037\n\016wind_z_ned_m_s\030\003 "
    "\001(\002B\007\202\265\030\003NaN\0222\n!horizontal_variability_s"
    "tddev_m_s\030\004 \001(\002B\007\202\265\030\003NaN\0220\n\037vertical_var"
    "iability_stddev_m_s\030\005 \001(\002B\007\202\265\030\003NaN\022$\n\023wi"
    "nd_altitude_msl_m\030\006 \001(\002B\007\202\265\030\003NaN\0223\n\"hori"
    "zontal_wind_speed_accuracy_m_s\030\007 \001(\002B\007\202\265"
    "\030\003NaN\0221\n vertical_wind_speed_accuracy_m_"
    "s\030\010 \001(\002B\007\202\265\030\003NaN\"\241\002\n\017TelemetryResult\022<\n\006"
    "result\030\001 \001(\0162,.mavsdk.rpc.telemetry.Tele"
    "metryResult.Result\022\022\n\nresult_str\030\002 \001(\t\"\273"
    "\001\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_"
    "SUCCESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002\022\033\n\027RESUL"
    "T_CONNECTION_ERROR\020\003\022\017\n\013RESULT_BUSY\020\004\022\031\n"
    "\025RESULT_COMMAND_DENIED\020\005\022\022\n\016RESULT_TIMEO"
    "UT\020\006\022\026\n\022RESULT_UNSUPPORTED\020\007*\244\001\n\007FixType"
    "\022\023\n\017FIX_TYPE_NO_GPS\020\000\022\023\n\017FIX_TYPE_NO_FIX"
    "\020\001\022\023\n\017FIX_TYPE_FIX_2D\020\002\022\023\n\017FIX_TYPE_FIX_"
    "3D\020\003\022\025\n\021FIX_TYPE_FIX_DGPS\020\004\022\026\n\022FIX_TYPE_"
    "RTK_FLOAT\020\005\022\026\n\022FIX_TYPE_RTK_FIXED\020\006*\247\001\n\017"
    "BatteryFunction\022\034\n\030BATTERY_FUNCTION_UNKN"
    "OWN\020\000\022\030\n\024BATTERY_FUNCTION_ALL\020\001\022\037\n\033BATTE"
    "RY_FUNCTION_PROPULSION\020\002\022\035\n\031BATTERY_FUNC"
    "TION_AVIONICS\020\003\022\034\n\030BATTERY_FUNCTION_PAYL"
    "OAD\020\004*\206\003\n\nFlightMode\022\027\n\023FLIGHT_MODE_UNKN"
    "OWN\020\000\022\025\n\021FLIGHT_MODE_READY\020\001\022\027\n\023FLIGHT_M"
    "ODE_TAKEOFF\020\002\022\024\n\020FLIGHT_MODE_HOLD\020\003\022\027\n\023F"
    "LIGHT_MODE_MISSION\020\004\022 \n\034FLIGHT_MODE_RETU"
    "RN_TO_LAUNCH\020\005\022\024\n\020FLIGHT_MODE_LAND\020\006\022\030\n\024"
    "FLIGHT_MODE_OFFBOARD\020\007\022\031\n\025FLIGHT_MODE_FO"
    "LLOW_ME\020\010\022\026\n\022FLIGHT_MODE_MANUAL\020\t\022\026\n\022FLI"
    "GHT_MODE_ALTCTL\020\n\022\026\n\022FLIGHT_MODE_POSCTL\020"
    "\013\022\024\n\020FLIGHT_MODE_ACRO\020\014\022\032\n\026FLIGHT_MODE_S"
    "TABILIZED\020\r\022\031\n\025FLIGHT_MODE_RATTITUDE\020\016*\371"
    "\001\n\016StatusTextType\022\032\n\026STATUS_TEXT_TYPE_DE"
    "BUG\020\000\022\031\n\025STATUS_TEXT_TYPE_INFO\020\001\022\033\n\027STAT"
    "US_TEXT_TYPE_NOTICE\020\002\022\034\n\030STATUS_TEXT_TYP"
    "E_WARNING\020\003\022\032\n\026STATUS_TEXT_TYPE_ERROR\020\004\022"
    "\035\n\031STATUS_TEXT_TYPE_CRITICAL\020\005\022\032\n\026STATUS"
    "_TEXT_TYPE_ALERT\020\006\022\036\n\032STATUS_TEXT_TYPE_E"
    "MERGENCY\020\007*\223\001\n\013LandedState\022\030\n\024LANDED_STA"
    "TE_UNKNOWN\020\000\022\032\n\026LANDED_STATE_ON_GROUND\020\001"
    "\022\027\n\023LANDED_STATE_IN_AIR\020\002\022\033\n\027LANDED_STAT"
    "E_TAKING_OFF\020\003\022\030\n\024LANDED_STATE_LANDING\020\004"
    "*\215\001\n\tVtolState\022\030\n\024VTOL_STATE_UNDEFINED\020\000"
    "\022\037\n\033VTOL_STATE_TRANSITION_TO_FW\020\001\022\037\n\033VTO"
    "L_STATE_TRANSITION_TO_MC\020\002\022\021\n\rVTOL_STATE"
    "_MC\020\003\022\021\n\rVTOL_STATE_FW\020\0042\2307\n\020TelemetrySe"
    "rvice\022o\n\021SubscribePosition\022..mavsdk.rpc."
    "telemetry.SubscribePositionRequest\032&.mav"
    "sdk.rpc.telemetry.PositionResponse\"\0000\001\022c"
    "\n\rSubscribeHome\022*.mavsdk.rpc.telemetry.S"
    "ubscribeHomeRequest\032\".mavsdk.rpc.telemet"
    "ry.HomeResponse\"\0000\001\022f\n\016SubscribeInAir\022+."
    "mavsdk.rpc.telemetry.SubscribeInAirReque"
    "st\032#.mavsdk.rpc.telemetry.InAirResponse\""
    "\0000\001\022x\n\024SubscribeLandedState\0221.mavsdk.rpc"
    ".telemetry.SubscribeLandedStateRequest\032)"
    ".mavsdk.rpc.telemetry.LandedStateRespons"
    "e\"\0000\001\022f\n\016SubscribeArmed\022+.mavsdk.rpc.tel"
    "emetry.SubscribeArmedRequest\032#.mavsdk.rp"
    "c.telemetry.ArmedResponse\"\0000\001\022r\n\022Subscri"
    "beVtolState\022/.mavsdk.rpc.telemetry.Subsc"
    "ribeVtolStateRequest\032\'.mavsdk.rpc.teleme"
    "try.VtolStateResponse\"\0000\001\022\215\001\n\033SubscribeA"
    "ttitudeQuaternion\0228.mavsdk.rpc.telemetry"
    ".SubscribeAttitudeQuaternionRequest\0320.ma"
    "vsdk.rpc.telemetry.AttitudeQuaternionRes"
    "ponse\"\0000\001\022~\n\026SubscribeAttitudeEuler\0223.ma"
    "vsdk.rpc.telemetry.SubscribeAttitudeEule"
    "rRequest\032+.mavsdk.rpc.telemetry.Attitude"
    "EulerResponse\"\0000\001\022\250\001\n$SubscribeAttitudeA"
    "ngularVelocityBody\022A.mavsdk.rpc.telemetr"
    "y.SubscribeAttitudeAngularVelocityBodyRe"
    "quest\0329.mavsdk.rpc.telemetry.AttitudeAng"
    "ularVelocityBodyResponse\"\0000\001\022x\n\024Subscrib"
    "eVelocityNed\0221.mavsdk.rpc.telemetry.Subs"
    "cribeVelocityNedRequest\032).mavsdk.rpc.tel"
    "emetry.VelocityNedResponse\"\0000\001\022l\n\020Subscr"
    "ibeGpsInfo\022-.mavsdk.rpc.telemetry.Subscr"
    "ibeGpsInfoRequest\032%.mavsdk.rpc.telemetry"
    ".GpsInfoResponse\"\0000\001\022i\n\017SubscribeRawGps\022"
    ",.mavsdk.rpc.telemetry.SubscribeRawGpsRe"
    "quest\032$.mavsdk.rpc.telemetry.RawGpsRespo"
    "nse\"\0000\001\022l\n\020SubscribeBattery\022-.mavsdk.rpc"
    ".telemetry.SubscribeBatteryRequest\032%.mav"
    "sdk.rpc.telemetry.BatteryResponse\"\0000\001\022u\n"
    "\023SubscribeFlightMode\0220.mavsdk.rpc.teleme"
    "try.SubscribeFlightModeRequest\032(.mavsdk."
    "rpc.telemetry.FlightModeResponse\"\0000\001\022i\n\017"
    "SubscribeHealth\022,.mavsdk.rpc.telemetry.S"
    "ubscribeHealthRequest\032$.mavsdk.rpc.telem"
    "etry.HealthResponse\"\0000\001\022o\n\021SubscribeRcSt"
    "atus\022..mavsdk.rpc.telemetry.SubscribeRcS"
    "tatusRequest\032&.mavsdk.rpc.telemetry.RcSt"
    "atusResponse\"\0000\001\022u\n\023SubscribeStatusText\022"
    "0.mavsdk.rpc.telemetry.SubscribeStatusTe"
    "xtRequest\032(.mavsdk.rpc.telemetry.StatusT"
    "extResponse\"\0000\001\022\226\001\n\036SubscribeActuatorCon"
    "trolTarget\022;.mavsdk.rpc.telemetry.Subscr"
    "ibeActuatorControlTargetRequest\0323.mavsdk"
    ".rpc.telemetry.ActuatorControlTargetResp"
    "onse\"\0000\001\022\223\001\n\035SubscribeActuatorOutputStat"
    "us\022:.mavsdk.rpc.telemetry.SubscribeActua"
    "torOutputStatusRequest\0322.mavsdk.rpc.tele"
    "metry.ActuatorOutputStatusResponse\"\0000\001\022o"
    "\n\021SubscribeOdometry\022..mavsdk.rpc.telemet"
    "ry.SubscribeOdometryRequest\032&.mavsdk.rpc"
    ".telemetry.OdometryResponse\"\0000\001\022\220\001\n\034Subs"
    "cribePositionVelocityNed\0229.mavsdk.rpc.te"
    "lemetry.SubscribePositionVelocityNedRequ"
    "est\0321.mavsdk.rpc.telemetry.PositionVeloc"
    "ityNedResponse\"\0000\001\022x\n\024SubscribeGroundTru"
    "th\0221.mavsdk.rpc.telemetry.SubscribeGroun"
    "dTruthRequest\032).mavsdk.rpc.telemetry.Gro"
    "undTruthResponse\"\0000\001\022\207\001\n\031SubscribeFixedw"
    "ingMetrics\0226.mavsdk.rpc.telemetry.Subscr"
    "ibeFixedwingMetricsRequest\032..mavsdk.rpc."
    "telemetry.FixedwingMetricsResponse\"\0000\001\022`"
    "\n\014SubscribeImu\022).mavsdk.rpc.telemetry.Su"
    "bscribeImuRequest\032!.mavsdk.rpc.telemetry"
    ".ImuResponse\"\0000\001\022r\n\022SubscribeScaledImu\022/"
    ".mavsdk.rpc.telemetry.SubscribeScaledImu"
    "Request\032\'.mavsdk.rpc.telemetry.ScaledImu"
    "Response\"\0000\001\022i\n\017SubscribeRawImu\022,.mavsdk"
    ".rpc.telemetry.SubscribeRawImuRequest\032$."
    "mavsdk.rpc.telemetry.RawImuResponse\"\0000\001\022"
    "x\n\024SubscribeHealthAllOk\0221.mavsdk.rpc.tel"
    "emetry.SubscribeHealthAllOkRequest\032).mav"
    "sdk.rpc.telemetry.HealthAllOkResponse\"\0000"
    "\001\022~\n\026SubscribeUnixEpochTime\0223.mavsdk.rpc"
    ".telemetry.SubscribeUnixEpochTimeRequest"
    "\032+.mavsdk.rpc.telemetry.UnixEpochTimeRes"
    "ponse\"\0000\001\022\201\001\n\027SubscribeDistanceSensor\0224."
    "mavsdk.rpc.telemetry.SubscribeDistanceSe"
    "nsorRequest\032,.mavsdk.rpc.telemetry.Dista"
    "nceSensorResponse\"\0000\001\022\201\001\n\027SubscribeScale"
    "dPressure\0224.mavsdk.rpc.telemetry.Subscri"
    "beScaledPressureRequest\032,.mavsdk.rpc.tel"
    "emetry.ScaledPressureResponse\"\0000\001\022l\n\020Sub"
    "scribeHeading\022-.mavsdk.rpc.telemetry.Sub"
    "scribeHeadingRequest\032%.mavsdk.rpc.teleme"
    "try.HeadingResponse\"\0000\001\022o\n\021SubscribeAlti"
    "tude\022..mavsdk.rpc.telemetry.SubscribeAlt"
    "itudeRequest\032&.mavsdk.rpc.telemetry.Alti"
    "tudeResponse\"\0000\001\022c\n\rSubscribeWind\022*.mavs"
    "dk.rpc.telemetry.SubscribeWindRequest\032\"."
    "mavsdk.rpc.telemetry.WindResponse\"\0000\001\022p\n"
    "\017SetRatePosition\022,.mavsdk.rpc.telemetry."
    "SetRatePositionRequest\032-.mavsdk.rpc.tele"
    "metry.SetRatePositionResponse\"\000\022d\n\013SetRa"
    "teHome\022(.mavsdk.rpc.telemetry.SetRateHom"
    "eRequest\032).mavsdk.rpc.telemetry.SetRateH"
    "omeResponse\"\000\022g\n\014SetRateInAir\022).mavsdk.r"
    "pc.telemetry.SetRateInAirRequest\032*.mavsd"
    "k.rpc.telemetry.SetRateInAirResponse\"\000\022y"
    "\n\022SetRateLandedState\022/.mavsdk.rpc.teleme"
    "try.SetRateLandedStateRequest\0320.mavsdk.r"
    "pc.telemetry.SetRateLandedStateResponse\""
    "\000\022s\n\020SetRateVtolState\022-.mavsdk.rpc.telem"
    "etry.SetRateVtolStateRequest\032..mavsdk.rp"
    "c.telemetry.SetRateVtolStateResponse\"\000\022\216"
    "\001\n\031SetRateAttitudeQuaternion\0226.mavsdk.rp"
    "c.telemetry.SetRateAttitudeQuaternionReq"
    "uest\0327.mavsdk.rpc.telemetry.SetRateAttit"
    "udeQuaternionResponse\"\000\022\177\n\024SetRateAttitu"
    "deEuler\0221.mavsdk.rpc.telemetry.SetRateAt"
    "titudeEulerRequest\0322.mavsdk.rpc.telemetr"
    "y.SetRateAttitudeEulerResponse\"\000\022y\n\022SetR"
    "ateVelocityNed\022/.mavsdk.rpc.telemetry.Se"
    "tRateVelocityNedRequest\0320.mavsdk.rpc.tel"
    "emetry.SetRateVelocityNedResponse\"\000\022m\n\016S"
    "etRateGpsInfo\022+.mavsdk.rpc.telemetry.Set"
    "RateGpsInfoRequest\032,.mavsdk.rpc.telemetr"
    "y.SetRateGpsInfoResponse\"\000\022m\n\016SetRateBat"
    "tery\022+.mavsdk.rpc.telemetry.SetRateBatte"
    "ryRequest\032,.mavsdk.rpc.telemetry.SetRate"
    "BatteryResponse\"\000\022p\n\017SetRateRcStatus\022,.m"
    "avsdk.rpc.telemetry.SetRateRcStatusReque"
    "st\032-.mavsdk.rpc.telemetry.SetRateRcStatu"
    "sResponse\"\000\022\227\001\n\034SetRateActuatorControlTa"
    "rget\0229.mavsdk.rpc.telemetry.SetRateActua"
    "torControlTargetRequest\032:.mavsdk.rpc.tel"
    "emetry.SetRateActuatorControlTargetRespo"
    "nse\"\000\022\224\001\n\033SetRateActuatorOutputStatus\0228."
    "mavsdk.rpc.telemetry.SetRateActuatorOutp"
    "utStatusRequest\0329.mavsdk.rpc.telemetry.S"
    "etRateActuatorOutputStatusResponse\"\000\022p\n\017"
    "SetRateOdometry\022,.mavsdk.rpc.telemetry.S"
    "etRateOdometryRequest\032-.mavsdk.rpc.telem"
    "etry.SetRateOdometryResponse\"\000\022\221\001\n\032SetRa"
    "tePositionVelocityNed\0227.mavsdk.rpc.telem"
    "etry.SetRatePositionVelocityNedRequest\0328"
    ".mavsdk.rpc.telemetry.SetRatePositionVel"
    "ocityNedResponse\"\000\022y\n\022SetRateGroundTruth"
    "\022/.mavsdk.rpc.telemetry.SetRateGroundTru"
    "thRequest\0320.mavsdk.rpc.telemetry.SetRate"
    "GroundTruthResponse\"\000\022\210\001\n\027SetRateFixedwi"
    "ngMetrics\0224.mavsdk.rpc.telemetry.SetRate"
    "FixedwingMetricsRequest\0325.mavsdk.rpc.tel"
    "emetry.SetRateFixedwingMetricsResponse\"\000"
    "\022a\n\nSetRateImu\022\'.mavsdk.rpc.telemetry.Se"
    "tRateImuRequest\032(.mavsdk.rpc.telemetry.S"
    "etRateImuResponse\"\000\022s\n\020SetRateScaledImu\022"
    "-.mavsdk.rpc.telemetry.SetRateScaledImuR"
    "equest\032..mavsdk.rpc.telemetry.SetRateSca"
    "ledImuResponse\"\000\022j\n\rSetRateRawImu\022*.mavs"
    "dk.rpc.telemetry.SetRateRawImuRequest\032+."
    "mavsdk.rpc.telemetry.SetRateRawImuRespon"
    "se\"\000\022\177\n\024SetRateUnixEpochTime\0221.mavsdk.rp"
    "c.telemetry.SetRateUnixEpochTimeRequest\032"
    "2.mavsdk.rpc.telemetry.SetRateUnixEpochT"
    "imeResponse\"\000\022\202\001\n\025SetRateDistanceSensor\022"
    "2.mavsdk.rpc.telemetry.SetRateDistanceSe"
    "nsorRequest\0323.mavsdk.rpc.telemetry.SetRa"
    "teDistanceSensorResponse\"\000\022p\n\017SetRateAlt"
    "itude\022,.mavsdk.rpc.telemetry.SetRateAlti"
    "tudeRequest\032-.mavsdk.rpc.telemetry.SetRa"
    "teAltitudeResponse\"\000\022j\n\rSetRateHealth\022*."
    "mavsdk.rpc.telemetry.SetRateHealthReques"
    "t\032+.mavsdk.rpc.telemetry.SetRateHealthRe"
    "sponse\"\000\022y\n\022GetGpsGlobalOrigin\022/.mavsdk."
    "rpc.telemetry.GetGpsGlobalOriginRequest\032"
    "0.mavsdk.rpc.telemetry.GetGpsGlobalOrigi"
    "nResponse\"\000B%\n\023io.mavsdk.telemetryB\016Tele"
    "metryProtob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_telemetry_2ftelemetry_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_telemetry_2ftelemetry_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_telemetry_2ftelemetry_2eproto = {
    false,
    false,
    20978,
    descriptor_table_protodef_telemetry_2ftelemetry_2eproto,
    "telemetry/telemetry.proto",
    &descriptor_table_telemetry_2ftelemetry_2eproto_once,
    descriptor_table_telemetry_2ftelemetry_2eproto_deps,
    1,
    151,
    schemas,
    file_default_instances,
    TableStruct_telemetry_2ftelemetry_2eproto::offsets,
    file_level_enum_descriptors_telemetry_2ftelemetry_2eproto,
    file_level_service_descriptors_telemetry_2ftelemetry_2eproto,
};
namespace mavsdk {
namespace rpc {
namespace telemetry {
const ::google::protobuf::EnumDescriptor* Odometry_MavFrame_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Odometry_MavFrame_internal_data_[] = {
    65536u, 32u, 163968u, };
bool Odometry_MavFrame_IsValid(int value) {
  return 0 <= value && value <= 18 && ((327937u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Odometry_MavFrame Odometry::MAV_FRAME_UNDEF;
constexpr Odometry_MavFrame Odometry::MAV_FRAME_BODY_NED;
constexpr Odometry_MavFrame Odometry::MAV_FRAME_VISION_NED;
constexpr Odometry_MavFrame Odometry::MAV_FRAME_ESTIM_NED;
constexpr Odometry_MavFrame Odometry::MavFrame_MIN;
constexpr Odometry_MavFrame Odometry::MavFrame_MAX;
constexpr int Odometry::MavFrame_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TelemetryResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TelemetryResult_Result_internal_data_[] = {
    524288u, 0u, };
bool TelemetryResult_Result_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TelemetryResult_Result TelemetryResult::RESULT_UNKNOWN;
constexpr TelemetryResult_Result TelemetryResult::RESULT_SUCCESS;
constexpr TelemetryResult_Result TelemetryResult::RESULT_NO_SYSTEM;
constexpr TelemetryResult_Result TelemetryResult::RESULT_CONNECTION_ERROR;
constexpr TelemetryResult_Result TelemetryResult::RESULT_BUSY;
constexpr TelemetryResult_Result TelemetryResult::RESULT_COMMAND_DENIED;
constexpr TelemetryResult_Result TelemetryResult::RESULT_TIMEOUT;
constexpr TelemetryResult_Result TelemetryResult::RESULT_UNSUPPORTED;
constexpr TelemetryResult_Result TelemetryResult::Result_MIN;
constexpr TelemetryResult_Result TelemetryResult::Result_MAX;
constexpr int TelemetryResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* FixType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t FixType_internal_data_[] = {
    458752u, 0u, };
bool FixType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* BatteryFunction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t BatteryFunction_internal_data_[] = {
    327680u, 0u, };
bool BatteryFunction_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* FlightMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t FlightMode_internal_data_[] = {
    983040u, 0u, };
bool FlightMode_IsValid(int value) {
  return 0 <= value && value <= 14;
}
const ::google::protobuf::EnumDescriptor* StatusTextType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t StatusTextType_internal_data_[] = {
    524288u, 0u, };
bool StatusTextType_IsValid(int value) {
  return 0 <= value && value <= 7;
}
const ::google::protobuf::EnumDescriptor* LandedState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t LandedState_internal_data_[] = {
    327680u, 0u, };
bool LandedState_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* VtolState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto);
  return file_level_enum_descriptors_telemetry_2ftelemetry_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t VtolState_internal_data_[] = {
    327680u, 0u, };
bool VtolState_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class SubscribePositionRequest::_Internal {
 public:
};

SubscribePositionRequest::SubscribePositionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribePositionRequest)
}
SubscribePositionRequest::SubscribePositionRequest(
    ::google::protobuf::Arena* arena,
    const SubscribePositionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribePositionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribePositionRequest)
}

inline void* SubscribePositionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribePositionRequest(arena);
}
constexpr auto SubscribePositionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribePositionRequest),
                                            alignof(SubscribePositionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribePositionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribePositionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribePositionRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribePositionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribePositionRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribePositionRequest>(), &SubscribePositionRequest::ByteSizeLong,
            &SubscribePositionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribePositionRequest, _impl_._cached_size_),
        false,
    },
    &SubscribePositionRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribePositionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribePositionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribePositionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribePositionRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PositionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_._has_bits_);
};

PositionResponse::PositionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.PositionResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::PositionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PositionResponse::PositionResponse(
    ::google::protobuf::Arena* arena,
    const PositionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Position>(
                              arena, *from._impl_.position_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.PositionResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ = {};
}
PositionResponse::~PositionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.PositionResponse)
  SharedDtor(*this);
}
inline void PositionResponse::SharedDtor(MessageLite& self) {
  PositionResponse& this_ = static_cast<PositionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PositionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionResponse(arena);
}
constexpr auto PositionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionResponse),
                                            alignof(PositionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionResponse>(), &PositionResponse::ByteSizeLong,
            &PositionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_._cached_size_),
        false,
    },
    &PositionResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PositionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Position position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Position position = 1;
    {PROTOBUF_FIELD_OFFSET(PositionResponse, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Position>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.PositionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionResponse& this_ = static_cast<const PositionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.PositionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Position position = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.PositionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionResponse::ByteSizeLong(const MessageLite& base) {
          const PositionResponse& this_ = static_cast<const PositionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionResponse::ByteSizeLong() const {
          const PositionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.PositionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Position position = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionResponse*>(&to_msg);
  auto& from = static_cast<const PositionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.PositionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.position_ != nullptr);
    if (_this->_impl_.position_ == nullptr) {
      _this->_impl_.position_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Position>(arena, *from._impl_.position_);
    } else {
      _this->_impl_.position_->MergeFrom(*from._impl_.position_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionResponse::CopyFrom(const PositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.PositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionResponse::InternalSwap(PositionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata PositionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeHomeRequest::_Internal {
 public:
};

SubscribeHomeRequest::SubscribeHomeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeHomeRequest)
}
SubscribeHomeRequest::SubscribeHomeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeHomeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeHomeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeHomeRequest)
}

inline void* SubscribeHomeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeHomeRequest(arena);
}
constexpr auto SubscribeHomeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeHomeRequest),
                                            alignof(SubscribeHomeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeHomeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeHomeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeHomeRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeHomeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeHomeRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeHomeRequest>(), &SubscribeHomeRequest::ByteSizeLong,
            &SubscribeHomeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeHomeRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeHomeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeHomeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeHomeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeHomeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeHomeRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HomeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HomeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HomeResponse, _impl_._has_bits_);
};

HomeResponse::HomeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.HomeResponse)
}
inline PROTOBUF_NDEBUG_INLINE HomeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::HomeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HomeResponse::HomeResponse(
    ::google::protobuf::Arena* arena,
    const HomeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HomeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.home_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Position>(
                              arena, *from._impl_.home_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.HomeResponse)
}
inline PROTOBUF_NDEBUG_INLINE HomeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HomeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.home_ = {};
}
HomeResponse::~HomeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.HomeResponse)
  SharedDtor(*this);
}
inline void HomeResponse::SharedDtor(MessageLite& self) {
  HomeResponse& this_ = static_cast<HomeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.home_;
  this_._impl_.~Impl_();
}

inline void* HomeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HomeResponse(arena);
}
constexpr auto HomeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HomeResponse),
                                            alignof(HomeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HomeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HomeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HomeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HomeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HomeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HomeResponse>(), &HomeResponse::ByteSizeLong,
            &HomeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HomeResponse, _impl_._cached_size_),
        false,
    },
    &HomeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HomeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HomeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HomeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::HomeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Position home = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HomeResponse, _impl_.home_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Position home = 1;
    {PROTOBUF_FIELD_OFFSET(HomeResponse, _impl_.home_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Position>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HomeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.HomeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.home_ != nullptr);
    _impl_.home_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HomeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HomeResponse& this_ = static_cast<const HomeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HomeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HomeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.HomeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Position home = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.home_, this_._impl_.home_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.HomeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HomeResponse::ByteSizeLong(const MessageLite& base) {
          const HomeResponse& this_ = static_cast<const HomeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HomeResponse::ByteSizeLong() const {
          const HomeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.HomeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Position home = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.home_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HomeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HomeResponse*>(&to_msg);
  auto& from = static_cast<const HomeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.HomeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.home_ != nullptr);
    if (_this->_impl_.home_ == nullptr) {
      _this->_impl_.home_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Position>(arena, *from._impl_.home_);
    } else {
      _this->_impl_.home_->MergeFrom(*from._impl_.home_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HomeResponse::CopyFrom(const HomeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.HomeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HomeResponse::InternalSwap(HomeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.home_, other->_impl_.home_);
}

::google::protobuf::Metadata HomeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeInAirRequest::_Internal {
 public:
};

SubscribeInAirRequest::SubscribeInAirRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeInAirRequest)
}
SubscribeInAirRequest::SubscribeInAirRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeInAirRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeInAirRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeInAirRequest)
}

inline void* SubscribeInAirRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeInAirRequest(arena);
}
constexpr auto SubscribeInAirRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeInAirRequest),
                                            alignof(SubscribeInAirRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeInAirRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeInAirRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeInAirRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeInAirRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeInAirRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeInAirRequest>(), &SubscribeInAirRequest::ByteSizeLong,
            &SubscribeInAirRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeInAirRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeInAirRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeInAirRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeInAirRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeInAirRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeInAirRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InAirResponse::_Internal {
 public:
};

InAirResponse::InAirResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.InAirResponse)
}
InAirResponse::InAirResponse(
    ::google::protobuf::Arena* arena, const InAirResponse& from)
    : InAirResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE InAirResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InAirResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_in_air_ = {};
}
InAirResponse::~InAirResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.InAirResponse)
  SharedDtor(*this);
}
inline void InAirResponse::SharedDtor(MessageLite& self) {
  InAirResponse& this_ = static_cast<InAirResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* InAirResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InAirResponse(arena);
}
constexpr auto InAirResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(InAirResponse),
                                            alignof(InAirResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InAirResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InAirResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InAirResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InAirResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InAirResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InAirResponse>(), &InAirResponse::ByteSizeLong,
            &InAirResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InAirResponse, _impl_._cached_size_),
        false,
    },
    &InAirResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InAirResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> InAirResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::InAirResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_in_air = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InAirResponse, _impl_.is_in_air_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InAirResponse, _impl_.is_in_air_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_in_air = 1;
    {PROTOBUF_FIELD_OFFSET(InAirResponse, _impl_.is_in_air_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void InAirResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.InAirResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_in_air_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InAirResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InAirResponse& this_ = static_cast<const InAirResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InAirResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InAirResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.InAirResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_in_air = 1;
          if (this_._internal_is_in_air() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_in_air(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.InAirResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InAirResponse::ByteSizeLong(const MessageLite& base) {
          const InAirResponse& this_ = static_cast<const InAirResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InAirResponse::ByteSizeLong() const {
          const InAirResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.InAirResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool is_in_air = 1;
            if (this_._internal_is_in_air() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InAirResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InAirResponse*>(&to_msg);
  auto& from = static_cast<const InAirResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.InAirResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_in_air() != 0) {
    _this->_impl_.is_in_air_ = from._impl_.is_in_air_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InAirResponse::CopyFrom(const InAirResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.InAirResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InAirResponse::InternalSwap(InAirResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.is_in_air_, other->_impl_.is_in_air_);
}

::google::protobuf::Metadata InAirResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeLandedStateRequest::_Internal {
 public:
};

SubscribeLandedStateRequest::SubscribeLandedStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeLandedStateRequest)
}
SubscribeLandedStateRequest::SubscribeLandedStateRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeLandedStateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeLandedStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeLandedStateRequest)
}

inline void* SubscribeLandedStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeLandedStateRequest(arena);
}
constexpr auto SubscribeLandedStateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeLandedStateRequest),
                                            alignof(SubscribeLandedStateRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeLandedStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeLandedStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeLandedStateRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeLandedStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeLandedStateRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeLandedStateRequest>(), &SubscribeLandedStateRequest::ByteSizeLong,
            &SubscribeLandedStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeLandedStateRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeLandedStateRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeLandedStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeLandedStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeLandedStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeLandedStateRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LandedStateResponse::_Internal {
 public:
};

LandedStateResponse::LandedStateResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.LandedStateResponse)
}
LandedStateResponse::LandedStateResponse(
    ::google::protobuf::Arena* arena, const LandedStateResponse& from)
    : LandedStateResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LandedStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LandedStateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.landed_state_ = {};
}
LandedStateResponse::~LandedStateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.LandedStateResponse)
  SharedDtor(*this);
}
inline void LandedStateResponse::SharedDtor(MessageLite& self) {
  LandedStateResponse& this_ = static_cast<LandedStateResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LandedStateResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LandedStateResponse(arena);
}
constexpr auto LandedStateResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LandedStateResponse),
                                            alignof(LandedStateResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LandedStateResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LandedStateResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LandedStateResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LandedStateResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LandedStateResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LandedStateResponse>(), &LandedStateResponse::ByteSizeLong,
            &LandedStateResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LandedStateResponse, _impl_._cached_size_),
        false,
    },
    &LandedStateResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LandedStateResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LandedStateResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::LandedStateResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.LandedState landed_state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LandedStateResponse, _impl_.landed_state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LandedStateResponse, _impl_.landed_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.LandedState landed_state = 1;
    {PROTOBUF_FIELD_OFFSET(LandedStateResponse, _impl_.landed_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LandedStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.LandedStateResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.landed_state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LandedStateResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LandedStateResponse& this_ = static_cast<const LandedStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LandedStateResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LandedStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.LandedStateResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.telemetry.LandedState landed_state = 1;
          if (this_._internal_landed_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_landed_state(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.LandedStateResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LandedStateResponse::ByteSizeLong(const MessageLite& base) {
          const LandedStateResponse& this_ = static_cast<const LandedStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LandedStateResponse::ByteSizeLong() const {
          const LandedStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.LandedStateResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.LandedState landed_state = 1;
            if (this_._internal_landed_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_landed_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LandedStateResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LandedStateResponse*>(&to_msg);
  auto& from = static_cast<const LandedStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.LandedStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_landed_state() != 0) {
    _this->_impl_.landed_state_ = from._impl_.landed_state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LandedStateResponse::CopyFrom(const LandedStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.LandedStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LandedStateResponse::InternalSwap(LandedStateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.landed_state_, other->_impl_.landed_state_);
}

::google::protobuf::Metadata LandedStateResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeArmedRequest::_Internal {
 public:
};

SubscribeArmedRequest::SubscribeArmedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeArmedRequest)
}
SubscribeArmedRequest::SubscribeArmedRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeArmedRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeArmedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeArmedRequest)
}

inline void* SubscribeArmedRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeArmedRequest(arena);
}
constexpr auto SubscribeArmedRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeArmedRequest),
                                            alignof(SubscribeArmedRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeArmedRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeArmedRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeArmedRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeArmedRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeArmedRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeArmedRequest>(), &SubscribeArmedRequest::ByteSizeLong,
            &SubscribeArmedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeArmedRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeArmedRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeArmedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeArmedRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeArmedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeArmedRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ArmedResponse::_Internal {
 public:
};

ArmedResponse::ArmedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ArmedResponse)
}
ArmedResponse::ArmedResponse(
    ::google::protobuf::Arena* arena, const ArmedResponse& from)
    : ArmedResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ArmedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ArmedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_armed_ = {};
}
ArmedResponse::~ArmedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ArmedResponse)
  SharedDtor(*this);
}
inline void ArmedResponse::SharedDtor(MessageLite& self) {
  ArmedResponse& this_ = static_cast<ArmedResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ArmedResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ArmedResponse(arena);
}
constexpr auto ArmedResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ArmedResponse),
                                            alignof(ArmedResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ArmedResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ArmedResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ArmedResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ArmedResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ArmedResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ArmedResponse>(), &ArmedResponse::ByteSizeLong,
            &ArmedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ArmedResponse, _impl_._cached_size_),
        false,
    },
    &ArmedResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ArmedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ArmedResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ArmedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_armed = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ArmedResponse, _impl_.is_armed_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArmedResponse, _impl_.is_armed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_armed = 1;
    {PROTOBUF_FIELD_OFFSET(ArmedResponse, _impl_.is_armed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ArmedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ArmedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_armed_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ArmedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ArmedResponse& this_ = static_cast<const ArmedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ArmedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ArmedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ArmedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_armed = 1;
          if (this_._internal_is_armed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_armed(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ArmedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ArmedResponse::ByteSizeLong(const MessageLite& base) {
          const ArmedResponse& this_ = static_cast<const ArmedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ArmedResponse::ByteSizeLong() const {
          const ArmedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ArmedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool is_armed = 1;
            if (this_._internal_is_armed() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ArmedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ArmedResponse*>(&to_msg);
  auto& from = static_cast<const ArmedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ArmedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_armed() != 0) {
    _this->_impl_.is_armed_ = from._impl_.is_armed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmedResponse::CopyFrom(const ArmedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ArmedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ArmedResponse::InternalSwap(ArmedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.is_armed_, other->_impl_.is_armed_);
}

::google::protobuf::Metadata ArmedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeVtolStateRequest::_Internal {
 public:
};

SubscribeVtolStateRequest::SubscribeVtolStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeVtolStateRequest)
}
SubscribeVtolStateRequest::SubscribeVtolStateRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeVtolStateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeVtolStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeVtolStateRequest)
}

inline void* SubscribeVtolStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeVtolStateRequest(arena);
}
constexpr auto SubscribeVtolStateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeVtolStateRequest),
                                            alignof(SubscribeVtolStateRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeVtolStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeVtolStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeVtolStateRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeVtolStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeVtolStateRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeVtolStateRequest>(), &SubscribeVtolStateRequest::ByteSizeLong,
            &SubscribeVtolStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeVtolStateRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeVtolStateRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeVtolStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeVtolStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeVtolStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeVtolStateRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VtolStateResponse::_Internal {
 public:
};

VtolStateResponse::VtolStateResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.VtolStateResponse)
}
VtolStateResponse::VtolStateResponse(
    ::google::protobuf::Arena* arena, const VtolStateResponse& from)
    : VtolStateResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VtolStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VtolStateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.vtol_state_ = {};
}
VtolStateResponse::~VtolStateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.VtolStateResponse)
  SharedDtor(*this);
}
inline void VtolStateResponse::SharedDtor(MessageLite& self) {
  VtolStateResponse& this_ = static_cast<VtolStateResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* VtolStateResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VtolStateResponse(arena);
}
constexpr auto VtolStateResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VtolStateResponse),
                                            alignof(VtolStateResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VtolStateResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VtolStateResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VtolStateResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VtolStateResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VtolStateResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VtolStateResponse>(), &VtolStateResponse::ByteSizeLong,
            &VtolStateResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VtolStateResponse, _impl_._cached_size_),
        false,
    },
    &VtolStateResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VtolStateResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VtolStateResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VtolStateResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.VtolState vtol_state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VtolStateResponse, _impl_.vtol_state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VtolStateResponse, _impl_.vtol_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.VtolState vtol_state = 1;
    {PROTOBUF_FIELD_OFFSET(VtolStateResponse, _impl_.vtol_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VtolStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.VtolStateResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vtol_state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VtolStateResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VtolStateResponse& this_ = static_cast<const VtolStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VtolStateResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VtolStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.VtolStateResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.telemetry.VtolState vtol_state = 1;
          if (this_._internal_vtol_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_vtol_state(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.VtolStateResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VtolStateResponse::ByteSizeLong(const MessageLite& base) {
          const VtolStateResponse& this_ = static_cast<const VtolStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VtolStateResponse::ByteSizeLong() const {
          const VtolStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.VtolStateResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.VtolState vtol_state = 1;
            if (this_._internal_vtol_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_vtol_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VtolStateResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VtolStateResponse*>(&to_msg);
  auto& from = static_cast<const VtolStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.VtolStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vtol_state() != 0) {
    _this->_impl_.vtol_state_ = from._impl_.vtol_state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VtolStateResponse::CopyFrom(const VtolStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.VtolStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VtolStateResponse::InternalSwap(VtolStateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.vtol_state_, other->_impl_.vtol_state_);
}

::google::protobuf::Metadata VtolStateResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeAttitudeQuaternionRequest::_Internal {
 public:
};

SubscribeAttitudeQuaternionRequest::SubscribeAttitudeQuaternionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeAttitudeQuaternionRequest)
}
SubscribeAttitudeQuaternionRequest::SubscribeAttitudeQuaternionRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeAttitudeQuaternionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeAttitudeQuaternionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeAttitudeQuaternionRequest)
}

inline void* SubscribeAttitudeQuaternionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeAttitudeQuaternionRequest(arena);
}
constexpr auto SubscribeAttitudeQuaternionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeAttitudeQuaternionRequest),
                                            alignof(SubscribeAttitudeQuaternionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeAttitudeQuaternionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeAttitudeQuaternionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeAttitudeQuaternionRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeAttitudeQuaternionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeAttitudeQuaternionRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeAttitudeQuaternionRequest>(), &SubscribeAttitudeQuaternionRequest::ByteSizeLong,
            &SubscribeAttitudeQuaternionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeAttitudeQuaternionRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeAttitudeQuaternionRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeAttitudeQuaternionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeAttitudeQuaternionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeAttitudeQuaternionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeAttitudeQuaternionRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AttitudeQuaternionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AttitudeQuaternionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AttitudeQuaternionResponse, _impl_._has_bits_);
};

AttitudeQuaternionResponse::AttitudeQuaternionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeQuaternionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::AttitudeQuaternionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AttitudeQuaternionResponse::AttitudeQuaternionResponse(
    ::google::protobuf::Arena* arena,
    const AttitudeQuaternionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AttitudeQuaternionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attitude_quaternion_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Quaternion>(
                              arena, *from._impl_.attitude_quaternion_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeQuaternionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AttitudeQuaternionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attitude_quaternion_ = {};
}
AttitudeQuaternionResponse::~AttitudeQuaternionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
  SharedDtor(*this);
}
inline void AttitudeQuaternionResponse::SharedDtor(MessageLite& self) {
  AttitudeQuaternionResponse& this_ = static_cast<AttitudeQuaternionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.attitude_quaternion_;
  this_._impl_.~Impl_();
}

inline void* AttitudeQuaternionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AttitudeQuaternionResponse(arena);
}
constexpr auto AttitudeQuaternionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AttitudeQuaternionResponse),
                                            alignof(AttitudeQuaternionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AttitudeQuaternionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AttitudeQuaternionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AttitudeQuaternionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AttitudeQuaternionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AttitudeQuaternionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AttitudeQuaternionResponse>(), &AttitudeQuaternionResponse::ByteSizeLong,
            &AttitudeQuaternionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AttitudeQuaternionResponse, _impl_._cached_size_),
        false,
    },
    &AttitudeQuaternionResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AttitudeQuaternionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AttitudeQuaternionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttitudeQuaternionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AttitudeQuaternionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Quaternion attitude_quaternion = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttitudeQuaternionResponse, _impl_.attitude_quaternion_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Quaternion attitude_quaternion = 1;
    {PROTOBUF_FIELD_OFFSET(AttitudeQuaternionResponse, _impl_.attitude_quaternion_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Quaternion>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AttitudeQuaternionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.attitude_quaternion_ != nullptr);
    _impl_.attitude_quaternion_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AttitudeQuaternionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AttitudeQuaternionResponse& this_ = static_cast<const AttitudeQuaternionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AttitudeQuaternionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AttitudeQuaternionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Quaternion attitude_quaternion = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.attitude_quaternion_, this_._impl_.attitude_quaternion_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AttitudeQuaternionResponse::ByteSizeLong(const MessageLite& base) {
          const AttitudeQuaternionResponse& this_ = static_cast<const AttitudeQuaternionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AttitudeQuaternionResponse::ByteSizeLong() const {
          const AttitudeQuaternionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Quaternion attitude_quaternion = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attitude_quaternion_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AttitudeQuaternionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AttitudeQuaternionResponse*>(&to_msg);
  auto& from = static_cast<const AttitudeQuaternionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.attitude_quaternion_ != nullptr);
    if (_this->_impl_.attitude_quaternion_ == nullptr) {
      _this->_impl_.attitude_quaternion_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Quaternion>(arena, *from._impl_.attitude_quaternion_);
    } else {
      _this->_impl_.attitude_quaternion_->MergeFrom(*from._impl_.attitude_quaternion_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttitudeQuaternionResponse::CopyFrom(const AttitudeQuaternionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AttitudeQuaternionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttitudeQuaternionResponse::InternalSwap(AttitudeQuaternionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.attitude_quaternion_, other->_impl_.attitude_quaternion_);
}

::google::protobuf::Metadata AttitudeQuaternionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeAttitudeEulerRequest::_Internal {
 public:
};

SubscribeAttitudeEulerRequest::SubscribeAttitudeEulerRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeAttitudeEulerRequest)
}
SubscribeAttitudeEulerRequest::SubscribeAttitudeEulerRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeAttitudeEulerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeAttitudeEulerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeAttitudeEulerRequest)
}

inline void* SubscribeAttitudeEulerRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeAttitudeEulerRequest(arena);
}
constexpr auto SubscribeAttitudeEulerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeAttitudeEulerRequest),
                                            alignof(SubscribeAttitudeEulerRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeAttitudeEulerRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeAttitudeEulerRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeAttitudeEulerRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeAttitudeEulerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeAttitudeEulerRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeAttitudeEulerRequest>(), &SubscribeAttitudeEulerRequest::ByteSizeLong,
            &SubscribeAttitudeEulerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeAttitudeEulerRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeAttitudeEulerRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeAttitudeEulerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeAttitudeEulerRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeAttitudeEulerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeAttitudeEulerRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AttitudeEulerResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AttitudeEulerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AttitudeEulerResponse, _impl_._has_bits_);
};

AttitudeEulerResponse::AttitudeEulerResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AttitudeEulerResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeEulerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::AttitudeEulerResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AttitudeEulerResponse::AttitudeEulerResponse(
    ::google::protobuf::Arena* arena,
    const AttitudeEulerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AttitudeEulerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attitude_euler_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::EulerAngle>(
                              arena, *from._impl_.attitude_euler_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.AttitudeEulerResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeEulerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AttitudeEulerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attitude_euler_ = {};
}
AttitudeEulerResponse::~AttitudeEulerResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AttitudeEulerResponse)
  SharedDtor(*this);
}
inline void AttitudeEulerResponse::SharedDtor(MessageLite& self) {
  AttitudeEulerResponse& this_ = static_cast<AttitudeEulerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.attitude_euler_;
  this_._impl_.~Impl_();
}

inline void* AttitudeEulerResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AttitudeEulerResponse(arena);
}
constexpr auto AttitudeEulerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AttitudeEulerResponse),
                                            alignof(AttitudeEulerResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AttitudeEulerResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AttitudeEulerResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AttitudeEulerResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AttitudeEulerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AttitudeEulerResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AttitudeEulerResponse>(), &AttitudeEulerResponse::ByteSizeLong,
            &AttitudeEulerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AttitudeEulerResponse, _impl_._cached_size_),
        false,
    },
    &AttitudeEulerResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AttitudeEulerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AttitudeEulerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttitudeEulerResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AttitudeEulerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.EulerAngle attitude_euler = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttitudeEulerResponse, _impl_.attitude_euler_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.EulerAngle attitude_euler = 1;
    {PROTOBUF_FIELD_OFFSET(AttitudeEulerResponse, _impl_.attitude_euler_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::EulerAngle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AttitudeEulerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AttitudeEulerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.attitude_euler_ != nullptr);
    _impl_.attitude_euler_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AttitudeEulerResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AttitudeEulerResponse& this_ = static_cast<const AttitudeEulerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AttitudeEulerResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AttitudeEulerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AttitudeEulerResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.EulerAngle attitude_euler = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.attitude_euler_, this_._impl_.attitude_euler_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AttitudeEulerResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AttitudeEulerResponse::ByteSizeLong(const MessageLite& base) {
          const AttitudeEulerResponse& this_ = static_cast<const AttitudeEulerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AttitudeEulerResponse::ByteSizeLong() const {
          const AttitudeEulerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AttitudeEulerResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.EulerAngle attitude_euler = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attitude_euler_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AttitudeEulerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AttitudeEulerResponse*>(&to_msg);
  auto& from = static_cast<const AttitudeEulerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AttitudeEulerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.attitude_euler_ != nullptr);
    if (_this->_impl_.attitude_euler_ == nullptr) {
      _this->_impl_.attitude_euler_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::EulerAngle>(arena, *from._impl_.attitude_euler_);
    } else {
      _this->_impl_.attitude_euler_->MergeFrom(*from._impl_.attitude_euler_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttitudeEulerResponse::CopyFrom(const AttitudeEulerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AttitudeEulerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttitudeEulerResponse::InternalSwap(AttitudeEulerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.attitude_euler_, other->_impl_.attitude_euler_);
}

::google::protobuf::Metadata AttitudeEulerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeAttitudeAngularVelocityBodyRequest::_Internal {
 public:
};

SubscribeAttitudeAngularVelocityBodyRequest::SubscribeAttitudeAngularVelocityBodyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeAttitudeAngularVelocityBodyRequest)
}
SubscribeAttitudeAngularVelocityBodyRequest::SubscribeAttitudeAngularVelocityBodyRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeAttitudeAngularVelocityBodyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeAttitudeAngularVelocityBodyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeAttitudeAngularVelocityBodyRequest)
}

inline void* SubscribeAttitudeAngularVelocityBodyRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeAttitudeAngularVelocityBodyRequest(arena);
}
constexpr auto SubscribeAttitudeAngularVelocityBodyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeAttitudeAngularVelocityBodyRequest),
                                            alignof(SubscribeAttitudeAngularVelocityBodyRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeAttitudeAngularVelocityBodyRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeAttitudeAngularVelocityBodyRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeAttitudeAngularVelocityBodyRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeAttitudeAngularVelocityBodyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeAttitudeAngularVelocityBodyRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeAttitudeAngularVelocityBodyRequest>(), &SubscribeAttitudeAngularVelocityBodyRequest::ByteSizeLong,
            &SubscribeAttitudeAngularVelocityBodyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeAttitudeAngularVelocityBodyRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeAttitudeAngularVelocityBodyRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeAttitudeAngularVelocityBodyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeAttitudeAngularVelocityBodyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeAttitudeAngularVelocityBodyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeAttitudeAngularVelocityBodyRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AttitudeAngularVelocityBodyResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AttitudeAngularVelocityBodyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AttitudeAngularVelocityBodyResponse, _impl_._has_bits_);
};

AttitudeAngularVelocityBodyResponse::AttitudeAngularVelocityBodyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeAngularVelocityBodyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::AttitudeAngularVelocityBodyResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AttitudeAngularVelocityBodyResponse::AttitudeAngularVelocityBodyResponse(
    ::google::protobuf::Arena* arena,
    const AttitudeAngularVelocityBodyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AttitudeAngularVelocityBodyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attitude_angular_velocity_body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AngularVelocityBody>(
                              arena, *from._impl_.attitude_angular_velocity_body_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
}
inline PROTOBUF_NDEBUG_INLINE AttitudeAngularVelocityBodyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AttitudeAngularVelocityBodyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attitude_angular_velocity_body_ = {};
}
AttitudeAngularVelocityBodyResponse::~AttitudeAngularVelocityBodyResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
  SharedDtor(*this);
}
inline void AttitudeAngularVelocityBodyResponse::SharedDtor(MessageLite& self) {
  AttitudeAngularVelocityBodyResponse& this_ = static_cast<AttitudeAngularVelocityBodyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.attitude_angular_velocity_body_;
  this_._impl_.~Impl_();
}

inline void* AttitudeAngularVelocityBodyResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AttitudeAngularVelocityBodyResponse(arena);
}
constexpr auto AttitudeAngularVelocityBodyResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AttitudeAngularVelocityBodyResponse),
                                            alignof(AttitudeAngularVelocityBodyResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AttitudeAngularVelocityBodyResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AttitudeAngularVelocityBodyResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AttitudeAngularVelocityBodyResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AttitudeAngularVelocityBodyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AttitudeAngularVelocityBodyResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AttitudeAngularVelocityBodyResponse>(), &AttitudeAngularVelocityBodyResponse::ByteSizeLong,
            &AttitudeAngularVelocityBodyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AttitudeAngularVelocityBodyResponse, _impl_._cached_size_),
        false,
    },
    &AttitudeAngularVelocityBodyResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AttitudeAngularVelocityBodyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AttitudeAngularVelocityBodyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttitudeAngularVelocityBodyResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AttitudeAngularVelocityBodyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.AngularVelocityBody attitude_angular_velocity_body = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttitudeAngularVelocityBodyResponse, _impl_.attitude_angular_velocity_body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.AngularVelocityBody attitude_angular_velocity_body = 1;
    {PROTOBUF_FIELD_OFFSET(AttitudeAngularVelocityBodyResponse, _impl_.attitude_angular_velocity_body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AngularVelocityBody>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AttitudeAngularVelocityBodyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.attitude_angular_velocity_body_ != nullptr);
    _impl_.attitude_angular_velocity_body_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AttitudeAngularVelocityBodyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AttitudeAngularVelocityBodyResponse& this_ = static_cast<const AttitudeAngularVelocityBodyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AttitudeAngularVelocityBodyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AttitudeAngularVelocityBodyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.AngularVelocityBody attitude_angular_velocity_body = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.attitude_angular_velocity_body_, this_._impl_.attitude_angular_velocity_body_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AttitudeAngularVelocityBodyResponse::ByteSizeLong(const MessageLite& base) {
          const AttitudeAngularVelocityBodyResponse& this_ = static_cast<const AttitudeAngularVelocityBodyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AttitudeAngularVelocityBodyResponse::ByteSizeLong() const {
          const AttitudeAngularVelocityBodyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.AngularVelocityBody attitude_angular_velocity_body = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attitude_angular_velocity_body_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AttitudeAngularVelocityBodyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AttitudeAngularVelocityBodyResponse*>(&to_msg);
  auto& from = static_cast<const AttitudeAngularVelocityBodyResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.attitude_angular_velocity_body_ != nullptr);
    if (_this->_impl_.attitude_angular_velocity_body_ == nullptr) {
      _this->_impl_.attitude_angular_velocity_body_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AngularVelocityBody>(arena, *from._impl_.attitude_angular_velocity_body_);
    } else {
      _this->_impl_.attitude_angular_velocity_body_->MergeFrom(*from._impl_.attitude_angular_velocity_body_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttitudeAngularVelocityBodyResponse::CopyFrom(const AttitudeAngularVelocityBodyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AttitudeAngularVelocityBodyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttitudeAngularVelocityBodyResponse::InternalSwap(AttitudeAngularVelocityBodyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.attitude_angular_velocity_body_, other->_impl_.attitude_angular_velocity_body_);
}

::google::protobuf::Metadata AttitudeAngularVelocityBodyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeVelocityNedRequest::_Internal {
 public:
};

SubscribeVelocityNedRequest::SubscribeVelocityNedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeVelocityNedRequest)
}
SubscribeVelocityNedRequest::SubscribeVelocityNedRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeVelocityNedRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeVelocityNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeVelocityNedRequest)
}

inline void* SubscribeVelocityNedRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeVelocityNedRequest(arena);
}
constexpr auto SubscribeVelocityNedRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeVelocityNedRequest),
                                            alignof(SubscribeVelocityNedRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeVelocityNedRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeVelocityNedRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeVelocityNedRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeVelocityNedRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeVelocityNedRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeVelocityNedRequest>(), &SubscribeVelocityNedRequest::ByteSizeLong,
            &SubscribeVelocityNedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeVelocityNedRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeVelocityNedRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeVelocityNedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeVelocityNedRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeVelocityNedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeVelocityNedRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VelocityNedResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VelocityNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VelocityNedResponse, _impl_._has_bits_);
};

VelocityNedResponse::VelocityNedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.VelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE VelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::VelocityNedResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VelocityNedResponse::VelocityNedResponse(
    ::google::protobuf::Arena* arena,
    const VelocityNedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VelocityNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.velocity_ned_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::VelocityNed>(
                              arena, *from._impl_.velocity_ned_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.VelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE VelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VelocityNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.velocity_ned_ = {};
}
VelocityNedResponse::~VelocityNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.VelocityNedResponse)
  SharedDtor(*this);
}
inline void VelocityNedResponse::SharedDtor(MessageLite& self) {
  VelocityNedResponse& this_ = static_cast<VelocityNedResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.velocity_ned_;
  this_._impl_.~Impl_();
}

inline void* VelocityNedResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VelocityNedResponse(arena);
}
constexpr auto VelocityNedResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VelocityNedResponse),
                                            alignof(VelocityNedResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VelocityNedResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VelocityNedResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VelocityNedResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VelocityNedResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VelocityNedResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VelocityNedResponse>(), &VelocityNedResponse::ByteSizeLong,
            &VelocityNedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VelocityNedResponse, _impl_._cached_size_),
        false,
    },
    &VelocityNedResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VelocityNedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VelocityNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VelocityNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VelocityNedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.VelocityNed velocity_ned = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VelocityNedResponse, _impl_.velocity_ned_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.VelocityNed velocity_ned = 1;
    {PROTOBUF_FIELD_OFFSET(VelocityNedResponse, _impl_.velocity_ned_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VelocityNed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VelocityNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.VelocityNedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.velocity_ned_ != nullptr);
    _impl_.velocity_ned_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VelocityNedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VelocityNedResponse& this_ = static_cast<const VelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VelocityNedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.VelocityNedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.VelocityNed velocity_ned = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.velocity_ned_, this_._impl_.velocity_ned_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.VelocityNedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VelocityNedResponse::ByteSizeLong(const MessageLite& base) {
          const VelocityNedResponse& this_ = static_cast<const VelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VelocityNedResponse::ByteSizeLong() const {
          const VelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.VelocityNedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.VelocityNed velocity_ned = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_ned_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VelocityNedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VelocityNedResponse*>(&to_msg);
  auto& from = static_cast<const VelocityNedResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.VelocityNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.velocity_ned_ != nullptr);
    if (_this->_impl_.velocity_ned_ == nullptr) {
      _this->_impl_.velocity_ned_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::VelocityNed>(arena, *from._impl_.velocity_ned_);
    } else {
      _this->_impl_.velocity_ned_->MergeFrom(*from._impl_.velocity_ned_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityNedResponse::CopyFrom(const VelocityNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.VelocityNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VelocityNedResponse::InternalSwap(VelocityNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.velocity_ned_, other->_impl_.velocity_ned_);
}

::google::protobuf::Metadata VelocityNedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeGpsInfoRequest::_Internal {
 public:
};

SubscribeGpsInfoRequest::SubscribeGpsInfoRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeGpsInfoRequest)
}
SubscribeGpsInfoRequest::SubscribeGpsInfoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeGpsInfoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeGpsInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeGpsInfoRequest)
}

inline void* SubscribeGpsInfoRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeGpsInfoRequest(arena);
}
constexpr auto SubscribeGpsInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeGpsInfoRequest),
                                            alignof(SubscribeGpsInfoRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeGpsInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeGpsInfoRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeGpsInfoRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeGpsInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeGpsInfoRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeGpsInfoRequest>(), &SubscribeGpsInfoRequest::ByteSizeLong,
            &SubscribeGpsInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeGpsInfoRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeGpsInfoRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeGpsInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeGpsInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeGpsInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeGpsInfoRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GpsInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GpsInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GpsInfoResponse, _impl_._has_bits_);
};

GpsInfoResponse::GpsInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GpsInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GpsInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::GpsInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GpsInfoResponse::GpsInfoResponse(
    ::google::protobuf::Arena* arena,
    const GpsInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GpsInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gps_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::GpsInfo>(
                              arena, *from._impl_.gps_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.GpsInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GpsInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GpsInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gps_info_ = {};
}
GpsInfoResponse::~GpsInfoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.GpsInfoResponse)
  SharedDtor(*this);
}
inline void GpsInfoResponse::SharedDtor(MessageLite& self) {
  GpsInfoResponse& this_ = static_cast<GpsInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gps_info_;
  this_._impl_.~Impl_();
}

inline void* GpsInfoResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GpsInfoResponse(arena);
}
constexpr auto GpsInfoResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GpsInfoResponse),
                                            alignof(GpsInfoResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GpsInfoResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GpsInfoResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GpsInfoResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GpsInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GpsInfoResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GpsInfoResponse>(), &GpsInfoResponse::ByteSizeLong,
            &GpsInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GpsInfoResponse, _impl_._cached_size_),
        false,
    },
    &GpsInfoResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GpsInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GpsInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GpsInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GpsInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.GpsInfo gps_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GpsInfoResponse, _impl_.gps_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.GpsInfo gps_info = 1;
    {PROTOBUF_FIELD_OFFSET(GpsInfoResponse, _impl_.gps_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GpsInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GpsInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.GpsInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gps_info_ != nullptr);
    _impl_.gps_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GpsInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GpsInfoResponse& this_ = static_cast<const GpsInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GpsInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GpsInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.GpsInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.GpsInfo gps_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gps_info_, this_._impl_.gps_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.GpsInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GpsInfoResponse::ByteSizeLong(const MessageLite& base) {
          const GpsInfoResponse& this_ = static_cast<const GpsInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GpsInfoResponse::ByteSizeLong() const {
          const GpsInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.GpsInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.GpsInfo gps_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gps_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GpsInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GpsInfoResponse*>(&to_msg);
  auto& from = static_cast<const GpsInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.GpsInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gps_info_ != nullptr);
    if (_this->_impl_.gps_info_ == nullptr) {
      _this->_impl_.gps_info_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::GpsInfo>(arena, *from._impl_.gps_info_);
    } else {
      _this->_impl_.gps_info_->MergeFrom(*from._impl_.gps_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GpsInfoResponse::CopyFrom(const GpsInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.GpsInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GpsInfoResponse::InternalSwap(GpsInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gps_info_, other->_impl_.gps_info_);
}

::google::protobuf::Metadata GpsInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRawGpsRequest::_Internal {
 public:
};

SubscribeRawGpsRequest::SubscribeRawGpsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeRawGpsRequest)
}
SubscribeRawGpsRequest::SubscribeRawGpsRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeRawGpsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRawGpsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeRawGpsRequest)
}

inline void* SubscribeRawGpsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeRawGpsRequest(arena);
}
constexpr auto SubscribeRawGpsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRawGpsRequest),
                                            alignof(SubscribeRawGpsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeRawGpsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeRawGpsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeRawGpsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeRawGpsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeRawGpsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeRawGpsRequest>(), &SubscribeRawGpsRequest::ByteSizeLong,
            &SubscribeRawGpsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeRawGpsRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeRawGpsRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeRawGpsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeRawGpsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeRawGpsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeRawGpsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RawGpsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RawGpsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RawGpsResponse, _impl_._has_bits_);
};

RawGpsResponse::RawGpsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.RawGpsResponse)
}
inline PROTOBUF_NDEBUG_INLINE RawGpsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::RawGpsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RawGpsResponse::RawGpsResponse(
    ::google::protobuf::Arena* arena,
    const RawGpsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RawGpsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.raw_gps_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::RawGps>(
                              arena, *from._impl_.raw_gps_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.RawGpsResponse)
}
inline PROTOBUF_NDEBUG_INLINE RawGpsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RawGpsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.raw_gps_ = {};
}
RawGpsResponse::~RawGpsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.RawGpsResponse)
  SharedDtor(*this);
}
inline void RawGpsResponse::SharedDtor(MessageLite& self) {
  RawGpsResponse& this_ = static_cast<RawGpsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.raw_gps_;
  this_._impl_.~Impl_();
}

inline void* RawGpsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RawGpsResponse(arena);
}
constexpr auto RawGpsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RawGpsResponse),
                                            alignof(RawGpsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RawGpsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RawGpsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RawGpsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RawGpsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RawGpsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RawGpsResponse>(), &RawGpsResponse::ByteSizeLong,
            &RawGpsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RawGpsResponse, _impl_._cached_size_),
        false,
    },
    &RawGpsResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RawGpsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RawGpsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RawGpsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RawGpsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.RawGps raw_gps = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RawGpsResponse, _impl_.raw_gps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.RawGps raw_gps = 1;
    {PROTOBUF_FIELD_OFFSET(RawGpsResponse, _impl_.raw_gps_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RawGps>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RawGpsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.RawGpsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.raw_gps_ != nullptr);
    _impl_.raw_gps_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RawGpsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RawGpsResponse& this_ = static_cast<const RawGpsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RawGpsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RawGpsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.RawGpsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.RawGps raw_gps = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.raw_gps_, this_._impl_.raw_gps_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.RawGpsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RawGpsResponse::ByteSizeLong(const MessageLite& base) {
          const RawGpsResponse& this_ = static_cast<const RawGpsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RawGpsResponse::ByteSizeLong() const {
          const RawGpsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.RawGpsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.RawGps raw_gps = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.raw_gps_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RawGpsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RawGpsResponse*>(&to_msg);
  auto& from = static_cast<const RawGpsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.RawGpsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.raw_gps_ != nullptr);
    if (_this->_impl_.raw_gps_ == nullptr) {
      _this->_impl_.raw_gps_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::RawGps>(arena, *from._impl_.raw_gps_);
    } else {
      _this->_impl_.raw_gps_->MergeFrom(*from._impl_.raw_gps_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RawGpsResponse::CopyFrom(const RawGpsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.RawGpsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RawGpsResponse::InternalSwap(RawGpsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.raw_gps_, other->_impl_.raw_gps_);
}

::google::protobuf::Metadata RawGpsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeBatteryRequest::_Internal {
 public:
};

SubscribeBatteryRequest::SubscribeBatteryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeBatteryRequest)
}
SubscribeBatteryRequest::SubscribeBatteryRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeBatteryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeBatteryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeBatteryRequest)
}

inline void* SubscribeBatteryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeBatteryRequest(arena);
}
constexpr auto SubscribeBatteryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeBatteryRequest),
                                            alignof(SubscribeBatteryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeBatteryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeBatteryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeBatteryRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeBatteryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeBatteryRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeBatteryRequest>(), &SubscribeBatteryRequest::ByteSizeLong,
            &SubscribeBatteryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeBatteryRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeBatteryRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeBatteryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeBatteryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeBatteryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeBatteryRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatteryResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BatteryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatteryResponse, _impl_._has_bits_);
};

BatteryResponse::BatteryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.BatteryResponse)
}
inline PROTOBUF_NDEBUG_INLINE BatteryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::BatteryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BatteryResponse::BatteryResponse(
    ::google::protobuf::Arena* arena,
    const BatteryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BatteryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.battery_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Battery>(
                              arena, *from._impl_.battery_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.BatteryResponse)
}
inline PROTOBUF_NDEBUG_INLINE BatteryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BatteryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.battery_ = {};
}
BatteryResponse::~BatteryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.BatteryResponse)
  SharedDtor(*this);
}
inline void BatteryResponse::SharedDtor(MessageLite& self) {
  BatteryResponse& this_ = static_cast<BatteryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.battery_;
  this_._impl_.~Impl_();
}

inline void* BatteryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BatteryResponse(arena);
}
constexpr auto BatteryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BatteryResponse),
                                            alignof(BatteryResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BatteryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BatteryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BatteryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BatteryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BatteryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BatteryResponse>(), &BatteryResponse::ByteSizeLong,
            &BatteryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BatteryResponse, _impl_._cached_size_),
        false,
    },
    &BatteryResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BatteryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BatteryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatteryResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::BatteryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Battery battery = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BatteryResponse, _impl_.battery_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Battery battery = 1;
    {PROTOBUF_FIELD_OFFSET(BatteryResponse, _impl_.battery_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Battery>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BatteryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.BatteryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.battery_ != nullptr);
    _impl_.battery_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BatteryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BatteryResponse& this_ = static_cast<const BatteryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BatteryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BatteryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.BatteryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Battery battery = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.battery_, this_._impl_.battery_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.BatteryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BatteryResponse::ByteSizeLong(const MessageLite& base) {
          const BatteryResponse& this_ = static_cast<const BatteryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BatteryResponse::ByteSizeLong() const {
          const BatteryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.BatteryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Battery battery = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.battery_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BatteryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatteryResponse*>(&to_msg);
  auto& from = static_cast<const BatteryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.BatteryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.battery_ != nullptr);
    if (_this->_impl_.battery_ == nullptr) {
      _this->_impl_.battery_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Battery>(arena, *from._impl_.battery_);
    } else {
      _this->_impl_.battery_->MergeFrom(*from._impl_.battery_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatteryResponse::CopyFrom(const BatteryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.BatteryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatteryResponse::InternalSwap(BatteryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.battery_, other->_impl_.battery_);
}

::google::protobuf::Metadata BatteryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeFlightModeRequest::_Internal {
 public:
};

SubscribeFlightModeRequest::SubscribeFlightModeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeFlightModeRequest)
}
SubscribeFlightModeRequest::SubscribeFlightModeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeFlightModeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeFlightModeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeFlightModeRequest)
}

inline void* SubscribeFlightModeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeFlightModeRequest(arena);
}
constexpr auto SubscribeFlightModeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeFlightModeRequest),
                                            alignof(SubscribeFlightModeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeFlightModeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeFlightModeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeFlightModeRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeFlightModeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeFlightModeRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeFlightModeRequest>(), &SubscribeFlightModeRequest::ByteSizeLong,
            &SubscribeFlightModeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeFlightModeRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeFlightModeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeFlightModeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeFlightModeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeFlightModeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeFlightModeRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FlightModeResponse::_Internal {
 public:
};

FlightModeResponse::FlightModeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.FlightModeResponse)
}
FlightModeResponse::FlightModeResponse(
    ::google::protobuf::Arena* arena, const FlightModeResponse& from)
    : FlightModeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FlightModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FlightModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flight_mode_ = {};
}
FlightModeResponse::~FlightModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.FlightModeResponse)
  SharedDtor(*this);
}
inline void FlightModeResponse::SharedDtor(MessageLite& self) {
  FlightModeResponse& this_ = static_cast<FlightModeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FlightModeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FlightModeResponse(arena);
}
constexpr auto FlightModeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FlightModeResponse),
                                            alignof(FlightModeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FlightModeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FlightModeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FlightModeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FlightModeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FlightModeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FlightModeResponse>(), &FlightModeResponse::ByteSizeLong,
            &FlightModeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FlightModeResponse, _impl_._cached_size_),
        false,
    },
    &FlightModeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FlightModeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FlightModeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::FlightModeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.FlightMode flight_mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlightModeResponse, _impl_.flight_mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FlightModeResponse, _impl_.flight_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.FlightMode flight_mode = 1;
    {PROTOBUF_FIELD_OFFSET(FlightModeResponse, _impl_.flight_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FlightModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.FlightModeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flight_mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FlightModeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FlightModeResponse& this_ = static_cast<const FlightModeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FlightModeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FlightModeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.FlightModeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.telemetry.FlightMode flight_mode = 1;
          if (this_._internal_flight_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_flight_mode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.FlightModeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FlightModeResponse::ByteSizeLong(const MessageLite& base) {
          const FlightModeResponse& this_ = static_cast<const FlightModeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FlightModeResponse::ByteSizeLong() const {
          const FlightModeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.FlightModeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.FlightMode flight_mode = 1;
            if (this_._internal_flight_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_flight_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FlightModeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FlightModeResponse*>(&to_msg);
  auto& from = static_cast<const FlightModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.FlightModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flight_mode() != 0) {
    _this->_impl_.flight_mode_ = from._impl_.flight_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FlightModeResponse::CopyFrom(const FlightModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.FlightModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FlightModeResponse::InternalSwap(FlightModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flight_mode_, other->_impl_.flight_mode_);
}

::google::protobuf::Metadata FlightModeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeHealthRequest::_Internal {
 public:
};

SubscribeHealthRequest::SubscribeHealthRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeHealthRequest)
}
SubscribeHealthRequest::SubscribeHealthRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeHealthRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeHealthRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeHealthRequest)
}

inline void* SubscribeHealthRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeHealthRequest(arena);
}
constexpr auto SubscribeHealthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeHealthRequest),
                                            alignof(SubscribeHealthRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeHealthRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeHealthRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeHealthRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeHealthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeHealthRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeHealthRequest>(), &SubscribeHealthRequest::ByteSizeLong,
            &SubscribeHealthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeHealthRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeHealthRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeHealthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeHealthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeHealthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeHealthRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HealthResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HealthResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HealthResponse, _impl_._has_bits_);
};

HealthResponse::HealthResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.HealthResponse)
}
inline PROTOBUF_NDEBUG_INLINE HealthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::HealthResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HealthResponse::HealthResponse(
    ::google::protobuf::Arena* arena,
    const HealthResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HealthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.health_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Health>(
                              arena, *from._impl_.health_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.HealthResponse)
}
inline PROTOBUF_NDEBUG_INLINE HealthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HealthResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.health_ = {};
}
HealthResponse::~HealthResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.HealthResponse)
  SharedDtor(*this);
}
inline void HealthResponse::SharedDtor(MessageLite& self) {
  HealthResponse& this_ = static_cast<HealthResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.health_;
  this_._impl_.~Impl_();
}

inline void* HealthResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HealthResponse(arena);
}
constexpr auto HealthResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HealthResponse),
                                            alignof(HealthResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HealthResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HealthResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HealthResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HealthResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HealthResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HealthResponse>(), &HealthResponse::ByteSizeLong,
            &HealthResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HealthResponse, _impl_._cached_size_),
        false,
    },
    &HealthResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HealthResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HealthResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HealthResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::HealthResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Health health = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HealthResponse, _impl_.health_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Health health = 1;
    {PROTOBUF_FIELD_OFFSET(HealthResponse, _impl_.health_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Health>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HealthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.HealthResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.health_ != nullptr);
    _impl_.health_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HealthResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HealthResponse& this_ = static_cast<const HealthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HealthResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HealthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.HealthResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Health health = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.health_, this_._impl_.health_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.HealthResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HealthResponse::ByteSizeLong(const MessageLite& base) {
          const HealthResponse& this_ = static_cast<const HealthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HealthResponse::ByteSizeLong() const {
          const HealthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.HealthResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Health health = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.health_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HealthResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HealthResponse*>(&to_msg);
  auto& from = static_cast<const HealthResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.HealthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.health_ != nullptr);
    if (_this->_impl_.health_ == nullptr) {
      _this->_impl_.health_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Health>(arena, *from._impl_.health_);
    } else {
      _this->_impl_.health_->MergeFrom(*from._impl_.health_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthResponse::CopyFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HealthResponse::InternalSwap(HealthResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.health_, other->_impl_.health_);
}

::google::protobuf::Metadata HealthResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRcStatusRequest::_Internal {
 public:
};

SubscribeRcStatusRequest::SubscribeRcStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeRcStatusRequest)
}
SubscribeRcStatusRequest::SubscribeRcStatusRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeRcStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRcStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeRcStatusRequest)
}

inline void* SubscribeRcStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeRcStatusRequest(arena);
}
constexpr auto SubscribeRcStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRcStatusRequest),
                                            alignof(SubscribeRcStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeRcStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeRcStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeRcStatusRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeRcStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeRcStatusRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeRcStatusRequest>(), &SubscribeRcStatusRequest::ByteSizeLong,
            &SubscribeRcStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeRcStatusRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeRcStatusRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeRcStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeRcStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeRcStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeRcStatusRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RcStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RcStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RcStatusResponse, _impl_._has_bits_);
};

RcStatusResponse::RcStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.RcStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE RcStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::RcStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RcStatusResponse::RcStatusResponse(
    ::google::protobuf::Arena* arena,
    const RcStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RcStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rc_status_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::RcStatus>(
                              arena, *from._impl_.rc_status_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.RcStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE RcStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RcStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rc_status_ = {};
}
RcStatusResponse::~RcStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.RcStatusResponse)
  SharedDtor(*this);
}
inline void RcStatusResponse::SharedDtor(MessageLite& self) {
  RcStatusResponse& this_ = static_cast<RcStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.rc_status_;
  this_._impl_.~Impl_();
}

inline void* RcStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RcStatusResponse(arena);
}
constexpr auto RcStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RcStatusResponse),
                                            alignof(RcStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RcStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RcStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RcStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RcStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RcStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RcStatusResponse>(), &RcStatusResponse::ByteSizeLong,
            &RcStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RcStatusResponse, _impl_._cached_size_),
        false,
    },
    &RcStatusResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RcStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RcStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RcStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RcStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.RcStatus rc_status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RcStatusResponse, _impl_.rc_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.RcStatus rc_status = 1;
    {PROTOBUF_FIELD_OFFSET(RcStatusResponse, _impl_.rc_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RcStatus>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RcStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.RcStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rc_status_ != nullptr);
    _impl_.rc_status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RcStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RcStatusResponse& this_ = static_cast<const RcStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RcStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RcStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.RcStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.RcStatus rc_status = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.rc_status_, this_._impl_.rc_status_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.RcStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RcStatusResponse::ByteSizeLong(const MessageLite& base) {
          const RcStatusResponse& this_ = static_cast<const RcStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RcStatusResponse::ByteSizeLong() const {
          const RcStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.RcStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.RcStatus rc_status = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rc_status_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RcStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RcStatusResponse*>(&to_msg);
  auto& from = static_cast<const RcStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.RcStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rc_status_ != nullptr);
    if (_this->_impl_.rc_status_ == nullptr) {
      _this->_impl_.rc_status_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::RcStatus>(arena, *from._impl_.rc_status_);
    } else {
      _this->_impl_.rc_status_->MergeFrom(*from._impl_.rc_status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RcStatusResponse::CopyFrom(const RcStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.RcStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RcStatusResponse::InternalSwap(RcStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rc_status_, other->_impl_.rc_status_);
}

::google::protobuf::Metadata RcStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeStatusTextRequest::_Internal {
 public:
};

SubscribeStatusTextRequest::SubscribeStatusTextRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeStatusTextRequest)
}
SubscribeStatusTextRequest::SubscribeStatusTextRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStatusTextRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeStatusTextRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeStatusTextRequest)
}

inline void* SubscribeStatusTextRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeStatusTextRequest(arena);
}
constexpr auto SubscribeStatusTextRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeStatusTextRequest),
                                            alignof(SubscribeStatusTextRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeStatusTextRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeStatusTextRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeStatusTextRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeStatusTextRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeStatusTextRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeStatusTextRequest>(), &SubscribeStatusTextRequest::ByteSizeLong,
            &SubscribeStatusTextRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeStatusTextRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeStatusTextRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeStatusTextRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeStatusTextRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeStatusTextRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeStatusTextRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusTextResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StatusTextResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StatusTextResponse, _impl_._has_bits_);
};

StatusTextResponse::StatusTextResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.StatusTextResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusTextResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::StatusTextResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StatusTextResponse::StatusTextResponse(
    ::google::protobuf::Arena* arena,
    const StatusTextResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StatusTextResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_text_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::StatusText>(
                              arena, *from._impl_.status_text_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.StatusTextResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusTextResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatusTextResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_text_ = {};
}
StatusTextResponse::~StatusTextResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.StatusTextResponse)
  SharedDtor(*this);
}
inline void StatusTextResponse::SharedDtor(MessageLite& self) {
  StatusTextResponse& this_ = static_cast<StatusTextResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_text_;
  this_._impl_.~Impl_();
}

inline void* StatusTextResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StatusTextResponse(arena);
}
constexpr auto StatusTextResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StatusTextResponse),
                                            alignof(StatusTextResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StatusTextResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StatusTextResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StatusTextResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StatusTextResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StatusTextResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StatusTextResponse>(), &StatusTextResponse::ByteSizeLong,
            &StatusTextResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StatusTextResponse, _impl_._cached_size_),
        false,
    },
    &StatusTextResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StatusTextResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StatusTextResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StatusTextResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::StatusTextResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.StatusText status_text = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StatusTextResponse, _impl_.status_text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.StatusText status_text = 1;
    {PROTOBUF_FIELD_OFFSET(StatusTextResponse, _impl_.status_text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::StatusText>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StatusTextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.StatusTextResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_text_ != nullptr);
    _impl_.status_text_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StatusTextResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StatusTextResponse& this_ = static_cast<const StatusTextResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StatusTextResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StatusTextResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.StatusTextResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.StatusText status_text = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.status_text_, this_._impl_.status_text_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.StatusTextResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StatusTextResponse::ByteSizeLong(const MessageLite& base) {
          const StatusTextResponse& this_ = static_cast<const StatusTextResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StatusTextResponse::ByteSizeLong() const {
          const StatusTextResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.StatusTextResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.StatusText status_text = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_text_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StatusTextResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusTextResponse*>(&to_msg);
  auto& from = static_cast<const StatusTextResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.StatusTextResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.status_text_ != nullptr);
    if (_this->_impl_.status_text_ == nullptr) {
      _this->_impl_.status_text_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::StatusText>(arena, *from._impl_.status_text_);
    } else {
      _this->_impl_.status_text_->MergeFrom(*from._impl_.status_text_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusTextResponse::CopyFrom(const StatusTextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.StatusTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusTextResponse::InternalSwap(StatusTextResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_text_, other->_impl_.status_text_);
}

::google::protobuf::Metadata StatusTextResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeActuatorControlTargetRequest::_Internal {
 public:
};

SubscribeActuatorControlTargetRequest::SubscribeActuatorControlTargetRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeActuatorControlTargetRequest)
}
SubscribeActuatorControlTargetRequest::SubscribeActuatorControlTargetRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeActuatorControlTargetRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeActuatorControlTargetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeActuatorControlTargetRequest)
}

inline void* SubscribeActuatorControlTargetRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeActuatorControlTargetRequest(arena);
}
constexpr auto SubscribeActuatorControlTargetRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeActuatorControlTargetRequest),
                                            alignof(SubscribeActuatorControlTargetRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeActuatorControlTargetRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeActuatorControlTargetRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeActuatorControlTargetRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeActuatorControlTargetRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeActuatorControlTargetRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeActuatorControlTargetRequest>(), &SubscribeActuatorControlTargetRequest::ByteSizeLong,
            &SubscribeActuatorControlTargetRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeActuatorControlTargetRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeActuatorControlTargetRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeActuatorControlTargetRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeActuatorControlTargetRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeActuatorControlTargetRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeActuatorControlTargetRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ActuatorControlTargetResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ActuatorControlTargetResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ActuatorControlTargetResponse, _impl_._has_bits_);
};

ActuatorControlTargetResponse::ActuatorControlTargetResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControlTargetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ActuatorControlTargetResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ActuatorControlTargetResponse::ActuatorControlTargetResponse(
    ::google::protobuf::Arena* arena,
    const ActuatorControlTargetResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActuatorControlTargetResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.actuator_control_target_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::ActuatorControlTarget>(
                              arena, *from._impl_.actuator_control_target_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControlTargetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ActuatorControlTargetResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.actuator_control_target_ = {};
}
ActuatorControlTargetResponse::~ActuatorControlTargetResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
  SharedDtor(*this);
}
inline void ActuatorControlTargetResponse::SharedDtor(MessageLite& self) {
  ActuatorControlTargetResponse& this_ = static_cast<ActuatorControlTargetResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.actuator_control_target_;
  this_._impl_.~Impl_();
}

inline void* ActuatorControlTargetResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActuatorControlTargetResponse(arena);
}
constexpr auto ActuatorControlTargetResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ActuatorControlTargetResponse),
                                            alignof(ActuatorControlTargetResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ActuatorControlTargetResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ActuatorControlTargetResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ActuatorControlTargetResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ActuatorControlTargetResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ActuatorControlTargetResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ActuatorControlTargetResponse>(), &ActuatorControlTargetResponse::ByteSizeLong,
            &ActuatorControlTargetResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ActuatorControlTargetResponse, _impl_._cached_size_),
        false,
    },
    &ActuatorControlTargetResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ActuatorControlTargetResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ActuatorControlTargetResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ActuatorControlTargetResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ActuatorControlTargetResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.ActuatorControlTarget actuator_control_target = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ActuatorControlTargetResponse, _impl_.actuator_control_target_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.ActuatorControlTarget actuator_control_target = 1;
    {PROTOBUF_FIELD_OFFSET(ActuatorControlTargetResponse, _impl_.actuator_control_target_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ActuatorControlTarget>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ActuatorControlTargetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.actuator_control_target_ != nullptr);
    _impl_.actuator_control_target_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActuatorControlTargetResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActuatorControlTargetResponse& this_ = static_cast<const ActuatorControlTargetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActuatorControlTargetResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActuatorControlTargetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.ActuatorControlTarget actuator_control_target = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.actuator_control_target_, this_._impl_.actuator_control_target_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActuatorControlTargetResponse::ByteSizeLong(const MessageLite& base) {
          const ActuatorControlTargetResponse& this_ = static_cast<const ActuatorControlTargetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActuatorControlTargetResponse::ByteSizeLong() const {
          const ActuatorControlTargetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.ActuatorControlTarget actuator_control_target = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actuator_control_target_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActuatorControlTargetResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActuatorControlTargetResponse*>(&to_msg);
  auto& from = static_cast<const ActuatorControlTargetResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.actuator_control_target_ != nullptr);
    if (_this->_impl_.actuator_control_target_ == nullptr) {
      _this->_impl_.actuator_control_target_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::ActuatorControlTarget>(arena, *from._impl_.actuator_control_target_);
    } else {
      _this->_impl_.actuator_control_target_->MergeFrom(*from._impl_.actuator_control_target_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActuatorControlTargetResponse::CopyFrom(const ActuatorControlTargetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ActuatorControlTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActuatorControlTargetResponse::InternalSwap(ActuatorControlTargetResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.actuator_control_target_, other->_impl_.actuator_control_target_);
}

::google::protobuf::Metadata ActuatorControlTargetResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeActuatorOutputStatusRequest::_Internal {
 public:
};

SubscribeActuatorOutputStatusRequest::SubscribeActuatorOutputStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeActuatorOutputStatusRequest)
}
SubscribeActuatorOutputStatusRequest::SubscribeActuatorOutputStatusRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeActuatorOutputStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeActuatorOutputStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeActuatorOutputStatusRequest)
}

inline void* SubscribeActuatorOutputStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeActuatorOutputStatusRequest(arena);
}
constexpr auto SubscribeActuatorOutputStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeActuatorOutputStatusRequest),
                                            alignof(SubscribeActuatorOutputStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeActuatorOutputStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeActuatorOutputStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeActuatorOutputStatusRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeActuatorOutputStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeActuatorOutputStatusRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeActuatorOutputStatusRequest>(), &SubscribeActuatorOutputStatusRequest::ByteSizeLong,
            &SubscribeActuatorOutputStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeActuatorOutputStatusRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeActuatorOutputStatusRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeActuatorOutputStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeActuatorOutputStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeActuatorOutputStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeActuatorOutputStatusRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ActuatorOutputStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ActuatorOutputStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ActuatorOutputStatusResponse, _impl_._has_bits_);
};

ActuatorOutputStatusResponse::ActuatorOutputStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorOutputStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ActuatorOutputStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ActuatorOutputStatusResponse::ActuatorOutputStatusResponse(
    ::google::protobuf::Arena* arena,
    const ActuatorOutputStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActuatorOutputStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.actuator_output_status_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::ActuatorOutputStatus>(
                              arena, *from._impl_.actuator_output_status_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorOutputStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ActuatorOutputStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.actuator_output_status_ = {};
}
ActuatorOutputStatusResponse::~ActuatorOutputStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
  SharedDtor(*this);
}
inline void ActuatorOutputStatusResponse::SharedDtor(MessageLite& self) {
  ActuatorOutputStatusResponse& this_ = static_cast<ActuatorOutputStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.actuator_output_status_;
  this_._impl_.~Impl_();
}

inline void* ActuatorOutputStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActuatorOutputStatusResponse(arena);
}
constexpr auto ActuatorOutputStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ActuatorOutputStatusResponse),
                                            alignof(ActuatorOutputStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ActuatorOutputStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ActuatorOutputStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ActuatorOutputStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ActuatorOutputStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ActuatorOutputStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ActuatorOutputStatusResponse>(), &ActuatorOutputStatusResponse::ByteSizeLong,
            &ActuatorOutputStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ActuatorOutputStatusResponse, _impl_._cached_size_),
        false,
    },
    &ActuatorOutputStatusResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ActuatorOutputStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ActuatorOutputStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ActuatorOutputStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ActuatorOutputStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.ActuatorOutputStatus actuator_output_status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ActuatorOutputStatusResponse, _impl_.actuator_output_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.ActuatorOutputStatus actuator_output_status = 1;
    {PROTOBUF_FIELD_OFFSET(ActuatorOutputStatusResponse, _impl_.actuator_output_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ActuatorOutputStatus>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ActuatorOutputStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.actuator_output_status_ != nullptr);
    _impl_.actuator_output_status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActuatorOutputStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActuatorOutputStatusResponse& this_ = static_cast<const ActuatorOutputStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActuatorOutputStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActuatorOutputStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.ActuatorOutputStatus actuator_output_status = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.actuator_output_status_, this_._impl_.actuator_output_status_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActuatorOutputStatusResponse::ByteSizeLong(const MessageLite& base) {
          const ActuatorOutputStatusResponse& this_ = static_cast<const ActuatorOutputStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActuatorOutputStatusResponse::ByteSizeLong() const {
          const ActuatorOutputStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.ActuatorOutputStatus actuator_output_status = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actuator_output_status_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActuatorOutputStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActuatorOutputStatusResponse*>(&to_msg);
  auto& from = static_cast<const ActuatorOutputStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.actuator_output_status_ != nullptr);
    if (_this->_impl_.actuator_output_status_ == nullptr) {
      _this->_impl_.actuator_output_status_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::ActuatorOutputStatus>(arena, *from._impl_.actuator_output_status_);
    } else {
      _this->_impl_.actuator_output_status_->MergeFrom(*from._impl_.actuator_output_status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActuatorOutputStatusResponse::CopyFrom(const ActuatorOutputStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ActuatorOutputStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActuatorOutputStatusResponse::InternalSwap(ActuatorOutputStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.actuator_output_status_, other->_impl_.actuator_output_status_);
}

::google::protobuf::Metadata ActuatorOutputStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeOdometryRequest::_Internal {
 public:
};

SubscribeOdometryRequest::SubscribeOdometryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeOdometryRequest)
}
SubscribeOdometryRequest::SubscribeOdometryRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeOdometryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeOdometryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeOdometryRequest)
}

inline void* SubscribeOdometryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeOdometryRequest(arena);
}
constexpr auto SubscribeOdometryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeOdometryRequest),
                                            alignof(SubscribeOdometryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeOdometryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeOdometryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeOdometryRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeOdometryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeOdometryRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeOdometryRequest>(), &SubscribeOdometryRequest::ByteSizeLong,
            &SubscribeOdometryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeOdometryRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeOdometryRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeOdometryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeOdometryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeOdometryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeOdometryRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OdometryResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OdometryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OdometryResponse, _impl_._has_bits_);
};

OdometryResponse::OdometryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.OdometryResponse)
}
inline PROTOBUF_NDEBUG_INLINE OdometryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::OdometryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

OdometryResponse::OdometryResponse(
    ::google::protobuf::Arena* arena,
    const OdometryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OdometryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.odometry_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Odometry>(
                              arena, *from._impl_.odometry_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.OdometryResponse)
}
inline PROTOBUF_NDEBUG_INLINE OdometryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OdometryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.odometry_ = {};
}
OdometryResponse::~OdometryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.OdometryResponse)
  SharedDtor(*this);
}
inline void OdometryResponse::SharedDtor(MessageLite& self) {
  OdometryResponse& this_ = static_cast<OdometryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.odometry_;
  this_._impl_.~Impl_();
}

inline void* OdometryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OdometryResponse(arena);
}
constexpr auto OdometryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OdometryResponse),
                                            alignof(OdometryResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OdometryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OdometryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OdometryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OdometryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OdometryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OdometryResponse>(), &OdometryResponse::ByteSizeLong,
            &OdometryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OdometryResponse, _impl_._cached_size_),
        false,
    },
    &OdometryResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OdometryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OdometryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OdometryResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::OdometryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Odometry odometry = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OdometryResponse, _impl_.odometry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Odometry odometry = 1;
    {PROTOBUF_FIELD_OFFSET(OdometryResponse, _impl_.odometry_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Odometry>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OdometryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.OdometryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.odometry_ != nullptr);
    _impl_.odometry_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OdometryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OdometryResponse& this_ = static_cast<const OdometryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OdometryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OdometryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.OdometryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Odometry odometry = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.odometry_, this_._impl_.odometry_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.OdometryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OdometryResponse::ByteSizeLong(const MessageLite& base) {
          const OdometryResponse& this_ = static_cast<const OdometryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OdometryResponse::ByteSizeLong() const {
          const OdometryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.OdometryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Odometry odometry = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.odometry_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OdometryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OdometryResponse*>(&to_msg);
  auto& from = static_cast<const OdometryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.OdometryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.odometry_ != nullptr);
    if (_this->_impl_.odometry_ == nullptr) {
      _this->_impl_.odometry_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Odometry>(arena, *from._impl_.odometry_);
    } else {
      _this->_impl_.odometry_->MergeFrom(*from._impl_.odometry_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OdometryResponse::CopyFrom(const OdometryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.OdometryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OdometryResponse::InternalSwap(OdometryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.odometry_, other->_impl_.odometry_);
}

::google::protobuf::Metadata OdometryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribePositionVelocityNedRequest::_Internal {
 public:
};

SubscribePositionVelocityNedRequest::SubscribePositionVelocityNedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribePositionVelocityNedRequest)
}
SubscribePositionVelocityNedRequest::SubscribePositionVelocityNedRequest(
    ::google::protobuf::Arena* arena,
    const SubscribePositionVelocityNedRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribePositionVelocityNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribePositionVelocityNedRequest)
}

inline void* SubscribePositionVelocityNedRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribePositionVelocityNedRequest(arena);
}
constexpr auto SubscribePositionVelocityNedRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribePositionVelocityNedRequest),
                                            alignof(SubscribePositionVelocityNedRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribePositionVelocityNedRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribePositionVelocityNedRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribePositionVelocityNedRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribePositionVelocityNedRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribePositionVelocityNedRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribePositionVelocityNedRequest>(), &SubscribePositionVelocityNedRequest::ByteSizeLong,
            &SubscribePositionVelocityNedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribePositionVelocityNedRequest, _impl_._cached_size_),
        false,
    },
    &SubscribePositionVelocityNedRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribePositionVelocityNedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribePositionVelocityNedRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribePositionVelocityNedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribePositionVelocityNedRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionVelocityNedResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PositionVelocityNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionVelocityNedResponse, _impl_._has_bits_);
};

PositionVelocityNedResponse::PositionVelocityNedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::PositionVelocityNedResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PositionVelocityNedResponse::PositionVelocityNedResponse(
    ::google::protobuf::Arena* arena,
    const PositionVelocityNedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionVelocityNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_velocity_ned_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::PositionVelocityNed>(
                              arena, *from._impl_.position_velocity_ned_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionVelocityNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_velocity_ned_ = {};
}
PositionVelocityNedResponse::~PositionVelocityNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
  SharedDtor(*this);
}
inline void PositionVelocityNedResponse::SharedDtor(MessageLite& self) {
  PositionVelocityNedResponse& this_ = static_cast<PositionVelocityNedResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_velocity_ned_;
  this_._impl_.~Impl_();
}

inline void* PositionVelocityNedResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionVelocityNedResponse(arena);
}
constexpr auto PositionVelocityNedResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionVelocityNedResponse),
                                            alignof(PositionVelocityNedResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionVelocityNedResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionVelocityNedResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionVelocityNedResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionVelocityNedResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionVelocityNedResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionVelocityNedResponse>(), &PositionVelocityNedResponse::ByteSizeLong,
            &PositionVelocityNedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionVelocityNedResponse, _impl_._cached_size_),
        false,
    },
    &PositionVelocityNedResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionVelocityNedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PositionVelocityNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionVelocityNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionVelocityNedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.PositionVelocityNed position_velocity_ned = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionVelocityNedResponse, _impl_.position_velocity_ned_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.PositionVelocityNed position_velocity_ned = 1;
    {PROTOBUF_FIELD_OFFSET(PositionVelocityNedResponse, _impl_.position_velocity_ned_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionVelocityNed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PositionVelocityNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_velocity_ned_ != nullptr);
    _impl_.position_velocity_ned_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionVelocityNedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionVelocityNedResponse& this_ = static_cast<const PositionVelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionVelocityNedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionVelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.PositionVelocityNed position_velocity_ned = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.position_velocity_ned_, this_._impl_.position_velocity_ned_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionVelocityNedResponse::ByteSizeLong(const MessageLite& base) {
          const PositionVelocityNedResponse& this_ = static_cast<const PositionVelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionVelocityNedResponse::ByteSizeLong() const {
          const PositionVelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.PositionVelocityNed position_velocity_ned = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_velocity_ned_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionVelocityNedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionVelocityNedResponse*>(&to_msg);
  auto& from = static_cast<const PositionVelocityNedResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.position_velocity_ned_ != nullptr);
    if (_this->_impl_.position_velocity_ned_ == nullptr) {
      _this->_impl_.position_velocity_ned_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::PositionVelocityNed>(arena, *from._impl_.position_velocity_ned_);
    } else {
      _this->_impl_.position_velocity_ned_->MergeFrom(*from._impl_.position_velocity_ned_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionVelocityNedResponse::CopyFrom(const PositionVelocityNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.PositionVelocityNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionVelocityNedResponse::InternalSwap(PositionVelocityNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.position_velocity_ned_, other->_impl_.position_velocity_ned_);
}

::google::protobuf::Metadata PositionVelocityNedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeGroundTruthRequest::_Internal {
 public:
};

SubscribeGroundTruthRequest::SubscribeGroundTruthRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeGroundTruthRequest)
}
SubscribeGroundTruthRequest::SubscribeGroundTruthRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeGroundTruthRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeGroundTruthRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeGroundTruthRequest)
}

inline void* SubscribeGroundTruthRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeGroundTruthRequest(arena);
}
constexpr auto SubscribeGroundTruthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeGroundTruthRequest),
                                            alignof(SubscribeGroundTruthRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeGroundTruthRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeGroundTruthRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeGroundTruthRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeGroundTruthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeGroundTruthRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeGroundTruthRequest>(), &SubscribeGroundTruthRequest::ByteSizeLong,
            &SubscribeGroundTruthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeGroundTruthRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeGroundTruthRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeGroundTruthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeGroundTruthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeGroundTruthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeGroundTruthRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GroundTruthResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GroundTruthResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GroundTruthResponse, _impl_._has_bits_);
};

GroundTruthResponse::GroundTruthResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GroundTruthResponse)
}
inline PROTOBUF_NDEBUG_INLINE GroundTruthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::GroundTruthResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GroundTruthResponse::GroundTruthResponse(
    ::google::protobuf::Arena* arena,
    const GroundTruthResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GroundTruthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ground_truth_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::GroundTruth>(
                              arena, *from._impl_.ground_truth_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.GroundTruthResponse)
}
inline PROTOBUF_NDEBUG_INLINE GroundTruthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GroundTruthResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ground_truth_ = {};
}
GroundTruthResponse::~GroundTruthResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.GroundTruthResponse)
  SharedDtor(*this);
}
inline void GroundTruthResponse::SharedDtor(MessageLite& self) {
  GroundTruthResponse& this_ = static_cast<GroundTruthResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ground_truth_;
  this_._impl_.~Impl_();
}

inline void* GroundTruthResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GroundTruthResponse(arena);
}
constexpr auto GroundTruthResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GroundTruthResponse),
                                            alignof(GroundTruthResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GroundTruthResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GroundTruthResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GroundTruthResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GroundTruthResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GroundTruthResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GroundTruthResponse>(), &GroundTruthResponse::ByteSizeLong,
            &GroundTruthResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GroundTruthResponse, _impl_._cached_size_),
        false,
    },
    &GroundTruthResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GroundTruthResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GroundTruthResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroundTruthResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GroundTruthResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.GroundTruth ground_truth = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroundTruthResponse, _impl_.ground_truth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.GroundTruth ground_truth = 1;
    {PROTOBUF_FIELD_OFFSET(GroundTruthResponse, _impl_.ground_truth_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GroundTruth>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GroundTruthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.GroundTruthResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ground_truth_ != nullptr);
    _impl_.ground_truth_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GroundTruthResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GroundTruthResponse& this_ = static_cast<const GroundTruthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GroundTruthResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GroundTruthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.GroundTruthResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.GroundTruth ground_truth = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.ground_truth_, this_._impl_.ground_truth_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.GroundTruthResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GroundTruthResponse::ByteSizeLong(const MessageLite& base) {
          const GroundTruthResponse& this_ = static_cast<const GroundTruthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GroundTruthResponse::ByteSizeLong() const {
          const GroundTruthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.GroundTruthResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.GroundTruth ground_truth = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ground_truth_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GroundTruthResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GroundTruthResponse*>(&to_msg);
  auto& from = static_cast<const GroundTruthResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.GroundTruthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ground_truth_ != nullptr);
    if (_this->_impl_.ground_truth_ == nullptr) {
      _this->_impl_.ground_truth_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::GroundTruth>(arena, *from._impl_.ground_truth_);
    } else {
      _this->_impl_.ground_truth_->MergeFrom(*from._impl_.ground_truth_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroundTruthResponse::CopyFrom(const GroundTruthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.GroundTruthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GroundTruthResponse::InternalSwap(GroundTruthResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ground_truth_, other->_impl_.ground_truth_);
}

::google::protobuf::Metadata GroundTruthResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeFixedwingMetricsRequest::_Internal {
 public:
};

SubscribeFixedwingMetricsRequest::SubscribeFixedwingMetricsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeFixedwingMetricsRequest)
}
SubscribeFixedwingMetricsRequest::SubscribeFixedwingMetricsRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeFixedwingMetricsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeFixedwingMetricsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeFixedwingMetricsRequest)
}

inline void* SubscribeFixedwingMetricsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeFixedwingMetricsRequest(arena);
}
constexpr auto SubscribeFixedwingMetricsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeFixedwingMetricsRequest),
                                            alignof(SubscribeFixedwingMetricsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeFixedwingMetricsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeFixedwingMetricsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeFixedwingMetricsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeFixedwingMetricsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeFixedwingMetricsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeFixedwingMetricsRequest>(), &SubscribeFixedwingMetricsRequest::ByteSizeLong,
            &SubscribeFixedwingMetricsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeFixedwingMetricsRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeFixedwingMetricsRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeFixedwingMetricsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeFixedwingMetricsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeFixedwingMetricsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeFixedwingMetricsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FixedwingMetricsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FixedwingMetricsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FixedwingMetricsResponse, _impl_._has_bits_);
};

FixedwingMetricsResponse::FixedwingMetricsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
}
inline PROTOBUF_NDEBUG_INLINE FixedwingMetricsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::FixedwingMetricsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FixedwingMetricsResponse::FixedwingMetricsResponse(
    ::google::protobuf::Arena* arena,
    const FixedwingMetricsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FixedwingMetricsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fixedwing_metrics_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::FixedwingMetrics>(
                              arena, *from._impl_.fixedwing_metrics_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
}
inline PROTOBUF_NDEBUG_INLINE FixedwingMetricsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FixedwingMetricsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.fixedwing_metrics_ = {};
}
FixedwingMetricsResponse::~FixedwingMetricsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
  SharedDtor(*this);
}
inline void FixedwingMetricsResponse::SharedDtor(MessageLite& self) {
  FixedwingMetricsResponse& this_ = static_cast<FixedwingMetricsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.fixedwing_metrics_;
  this_._impl_.~Impl_();
}

inline void* FixedwingMetricsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FixedwingMetricsResponse(arena);
}
constexpr auto FixedwingMetricsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FixedwingMetricsResponse),
                                            alignof(FixedwingMetricsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FixedwingMetricsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FixedwingMetricsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FixedwingMetricsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FixedwingMetricsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FixedwingMetricsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FixedwingMetricsResponse>(), &FixedwingMetricsResponse::ByteSizeLong,
            &FixedwingMetricsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FixedwingMetricsResponse, _impl_._cached_size_),
        false,
    },
    &FixedwingMetricsResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FixedwingMetricsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FixedwingMetricsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FixedwingMetricsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::FixedwingMetricsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.FixedwingMetrics fixedwing_metrics = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetricsResponse, _impl_.fixedwing_metrics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.FixedwingMetrics fixedwing_metrics = 1;
    {PROTOBUF_FIELD_OFFSET(FixedwingMetricsResponse, _impl_.fixedwing_metrics_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::FixedwingMetrics>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FixedwingMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.fixedwing_metrics_ != nullptr);
    _impl_.fixedwing_metrics_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FixedwingMetricsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FixedwingMetricsResponse& this_ = static_cast<const FixedwingMetricsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FixedwingMetricsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FixedwingMetricsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.FixedwingMetrics fixedwing_metrics = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.fixedwing_metrics_, this_._impl_.fixedwing_metrics_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FixedwingMetricsResponse::ByteSizeLong(const MessageLite& base) {
          const FixedwingMetricsResponse& this_ = static_cast<const FixedwingMetricsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FixedwingMetricsResponse::ByteSizeLong() const {
          const FixedwingMetricsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.FixedwingMetrics fixedwing_metrics = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fixedwing_metrics_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FixedwingMetricsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FixedwingMetricsResponse*>(&to_msg);
  auto& from = static_cast<const FixedwingMetricsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.fixedwing_metrics_ != nullptr);
    if (_this->_impl_.fixedwing_metrics_ == nullptr) {
      _this->_impl_.fixedwing_metrics_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::FixedwingMetrics>(arena, *from._impl_.fixedwing_metrics_);
    } else {
      _this->_impl_.fixedwing_metrics_->MergeFrom(*from._impl_.fixedwing_metrics_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FixedwingMetricsResponse::CopyFrom(const FixedwingMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.FixedwingMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FixedwingMetricsResponse::InternalSwap(FixedwingMetricsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.fixedwing_metrics_, other->_impl_.fixedwing_metrics_);
}

::google::protobuf::Metadata FixedwingMetricsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeImuRequest::_Internal {
 public:
};

SubscribeImuRequest::SubscribeImuRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeImuRequest)
}
SubscribeImuRequest::SubscribeImuRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeImuRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeImuRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeImuRequest)
}

inline void* SubscribeImuRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeImuRequest(arena);
}
constexpr auto SubscribeImuRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeImuRequest),
                                            alignof(SubscribeImuRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeImuRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeImuRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeImuRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeImuRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeImuRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeImuRequest>(), &SubscribeImuRequest::ByteSizeLong,
            &SubscribeImuRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeImuRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeImuRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeImuRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeImuRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeImuRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeImuRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImuResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ImuResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImuResponse, _impl_._has_bits_);
};

ImuResponse::ImuResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE ImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ImuResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImuResponse::ImuResponse(
    ::google::protobuf::Arena* arena,
    const ImuResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImuResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.imu_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Imu>(
                              arena, *from._impl_.imu_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE ImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ImuResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.imu_ = {};
}
ImuResponse::~ImuResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ImuResponse)
  SharedDtor(*this);
}
inline void ImuResponse::SharedDtor(MessageLite& self) {
  ImuResponse& this_ = static_cast<ImuResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.imu_;
  this_._impl_.~Impl_();
}

inline void* ImuResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ImuResponse(arena);
}
constexpr auto ImuResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ImuResponse),
                                            alignof(ImuResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ImuResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ImuResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ImuResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ImuResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ImuResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ImuResponse>(), &ImuResponse::ByteSizeLong,
            &ImuResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ImuResponse, _impl_._cached_size_),
        false,
    },
    &ImuResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ImuResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ImuResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImuResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ImuResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Imu imu = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImuResponse, _impl_.imu_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Imu imu = 1;
    {PROTOBUF_FIELD_OFFSET(ImuResponse, _impl_.imu_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Imu>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ImuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ImuResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.imu_ != nullptr);
    _impl_.imu_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ImuResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ImuResponse& this_ = static_cast<const ImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ImuResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ImuResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Imu imu = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.imu_, this_._impl_.imu_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ImuResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ImuResponse::ByteSizeLong(const MessageLite& base) {
          const ImuResponse& this_ = static_cast<const ImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ImuResponse::ByteSizeLong() const {
          const ImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ImuResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Imu imu = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.imu_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ImuResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImuResponse*>(&to_msg);
  auto& from = static_cast<const ImuResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ImuResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.imu_ != nullptr);
    if (_this->_impl_.imu_ == nullptr) {
      _this->_impl_.imu_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Imu>(arena, *from._impl_.imu_);
    } else {
      _this->_impl_.imu_->MergeFrom(*from._impl_.imu_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImuResponse::CopyFrom(const ImuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ImuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImuResponse::InternalSwap(ImuResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.imu_, other->_impl_.imu_);
}

::google::protobuf::Metadata ImuResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeScaledImuRequest::_Internal {
 public:
};

SubscribeScaledImuRequest::SubscribeScaledImuRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeScaledImuRequest)
}
SubscribeScaledImuRequest::SubscribeScaledImuRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeScaledImuRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeScaledImuRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeScaledImuRequest)
}

inline void* SubscribeScaledImuRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeScaledImuRequest(arena);
}
constexpr auto SubscribeScaledImuRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeScaledImuRequest),
                                            alignof(SubscribeScaledImuRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeScaledImuRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeScaledImuRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeScaledImuRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeScaledImuRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeScaledImuRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeScaledImuRequest>(), &SubscribeScaledImuRequest::ByteSizeLong,
            &SubscribeScaledImuRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeScaledImuRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeScaledImuRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeScaledImuRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeScaledImuRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeScaledImuRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeScaledImuRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScaledImuResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScaledImuResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScaledImuResponse, _impl_._has_bits_);
};

ScaledImuResponse::ScaledImuResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ScaledImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScaledImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ScaledImuResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ScaledImuResponse::ScaledImuResponse(
    ::google::protobuf::Arena* arena,
    const ScaledImuResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScaledImuResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.imu_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Imu>(
                              arena, *from._impl_.imu_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ScaledImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScaledImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScaledImuResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.imu_ = {};
}
ScaledImuResponse::~ScaledImuResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ScaledImuResponse)
  SharedDtor(*this);
}
inline void ScaledImuResponse::SharedDtor(MessageLite& self) {
  ScaledImuResponse& this_ = static_cast<ScaledImuResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.imu_;
  this_._impl_.~Impl_();
}

inline void* ScaledImuResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScaledImuResponse(arena);
}
constexpr auto ScaledImuResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScaledImuResponse),
                                            alignof(ScaledImuResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScaledImuResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScaledImuResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScaledImuResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScaledImuResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScaledImuResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScaledImuResponse>(), &ScaledImuResponse::ByteSizeLong,
            &ScaledImuResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScaledImuResponse, _impl_._cached_size_),
        false,
    },
    &ScaledImuResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScaledImuResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ScaledImuResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScaledImuResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ScaledImuResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Imu imu = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ScaledImuResponse, _impl_.imu_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Imu imu = 1;
    {PROTOBUF_FIELD_OFFSET(ScaledImuResponse, _impl_.imu_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Imu>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ScaledImuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ScaledImuResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.imu_ != nullptr);
    _impl_.imu_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScaledImuResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScaledImuResponse& this_ = static_cast<const ScaledImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScaledImuResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScaledImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ScaledImuResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Imu imu = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.imu_, this_._impl_.imu_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ScaledImuResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScaledImuResponse::ByteSizeLong(const MessageLite& base) {
          const ScaledImuResponse& this_ = static_cast<const ScaledImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScaledImuResponse::ByteSizeLong() const {
          const ScaledImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ScaledImuResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Imu imu = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.imu_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScaledImuResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScaledImuResponse*>(&to_msg);
  auto& from = static_cast<const ScaledImuResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ScaledImuResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.imu_ != nullptr);
    if (_this->_impl_.imu_ == nullptr) {
      _this->_impl_.imu_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Imu>(arena, *from._impl_.imu_);
    } else {
      _this->_impl_.imu_->MergeFrom(*from._impl_.imu_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScaledImuResponse::CopyFrom(const ScaledImuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ScaledImuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScaledImuResponse::InternalSwap(ScaledImuResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.imu_, other->_impl_.imu_);
}

::google::protobuf::Metadata ScaledImuResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRawImuRequest::_Internal {
 public:
};

SubscribeRawImuRequest::SubscribeRawImuRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeRawImuRequest)
}
SubscribeRawImuRequest::SubscribeRawImuRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeRawImuRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRawImuRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeRawImuRequest)
}

inline void* SubscribeRawImuRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeRawImuRequest(arena);
}
constexpr auto SubscribeRawImuRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRawImuRequest),
                                            alignof(SubscribeRawImuRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeRawImuRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeRawImuRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeRawImuRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeRawImuRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeRawImuRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeRawImuRequest>(), &SubscribeRawImuRequest::ByteSizeLong,
            &SubscribeRawImuRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeRawImuRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeRawImuRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeRawImuRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeRawImuRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeRawImuRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeRawImuRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RawImuResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RawImuResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RawImuResponse, _impl_._has_bits_);
};

RawImuResponse::RawImuResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.RawImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE RawImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::RawImuResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RawImuResponse::RawImuResponse(
    ::google::protobuf::Arena* arena,
    const RawImuResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RawImuResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.imu_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Imu>(
                              arena, *from._impl_.imu_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.RawImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE RawImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RawImuResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.imu_ = {};
}
RawImuResponse::~RawImuResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.RawImuResponse)
  SharedDtor(*this);
}
inline void RawImuResponse::SharedDtor(MessageLite& self) {
  RawImuResponse& this_ = static_cast<RawImuResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.imu_;
  this_._impl_.~Impl_();
}

inline void* RawImuResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RawImuResponse(arena);
}
constexpr auto RawImuResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RawImuResponse),
                                            alignof(RawImuResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RawImuResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RawImuResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RawImuResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RawImuResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RawImuResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RawImuResponse>(), &RawImuResponse::ByteSizeLong,
            &RawImuResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RawImuResponse, _impl_._cached_size_),
        false,
    },
    &RawImuResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RawImuResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RawImuResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RawImuResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RawImuResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Imu imu = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RawImuResponse, _impl_.imu_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Imu imu = 1;
    {PROTOBUF_FIELD_OFFSET(RawImuResponse, _impl_.imu_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Imu>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RawImuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.RawImuResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.imu_ != nullptr);
    _impl_.imu_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RawImuResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RawImuResponse& this_ = static_cast<const RawImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RawImuResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RawImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.RawImuResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Imu imu = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.imu_, this_._impl_.imu_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.RawImuResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RawImuResponse::ByteSizeLong(const MessageLite& base) {
          const RawImuResponse& this_ = static_cast<const RawImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RawImuResponse::ByteSizeLong() const {
          const RawImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.RawImuResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Imu imu = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.imu_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RawImuResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RawImuResponse*>(&to_msg);
  auto& from = static_cast<const RawImuResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.RawImuResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.imu_ != nullptr);
    if (_this->_impl_.imu_ == nullptr) {
      _this->_impl_.imu_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Imu>(arena, *from._impl_.imu_);
    } else {
      _this->_impl_.imu_->MergeFrom(*from._impl_.imu_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RawImuResponse::CopyFrom(const RawImuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.RawImuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RawImuResponse::InternalSwap(RawImuResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.imu_, other->_impl_.imu_);
}

::google::protobuf::Metadata RawImuResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeHealthAllOkRequest::_Internal {
 public:
};

SubscribeHealthAllOkRequest::SubscribeHealthAllOkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeHealthAllOkRequest)
}
SubscribeHealthAllOkRequest::SubscribeHealthAllOkRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeHealthAllOkRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeHealthAllOkRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeHealthAllOkRequest)
}

inline void* SubscribeHealthAllOkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeHealthAllOkRequest(arena);
}
constexpr auto SubscribeHealthAllOkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeHealthAllOkRequest),
                                            alignof(SubscribeHealthAllOkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeHealthAllOkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeHealthAllOkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeHealthAllOkRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeHealthAllOkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeHealthAllOkRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeHealthAllOkRequest>(), &SubscribeHealthAllOkRequest::ByteSizeLong,
            &SubscribeHealthAllOkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeHealthAllOkRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeHealthAllOkRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeHealthAllOkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeHealthAllOkRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeHealthAllOkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeHealthAllOkRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HealthAllOkResponse::_Internal {
 public:
};

HealthAllOkResponse::HealthAllOkResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.HealthAllOkResponse)
}
HealthAllOkResponse::HealthAllOkResponse(
    ::google::protobuf::Arena* arena, const HealthAllOkResponse& from)
    : HealthAllOkResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HealthAllOkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HealthAllOkResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_health_all_ok_ = {};
}
HealthAllOkResponse::~HealthAllOkResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.HealthAllOkResponse)
  SharedDtor(*this);
}
inline void HealthAllOkResponse::SharedDtor(MessageLite& self) {
  HealthAllOkResponse& this_ = static_cast<HealthAllOkResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HealthAllOkResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HealthAllOkResponse(arena);
}
constexpr auto HealthAllOkResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HealthAllOkResponse),
                                            alignof(HealthAllOkResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HealthAllOkResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HealthAllOkResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HealthAllOkResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HealthAllOkResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HealthAllOkResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HealthAllOkResponse>(), &HealthAllOkResponse::ByteSizeLong,
            &HealthAllOkResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HealthAllOkResponse, _impl_._cached_size_),
        false,
    },
    &HealthAllOkResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HealthAllOkResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HealthAllOkResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::HealthAllOkResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_health_all_ok = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HealthAllOkResponse, _impl_.is_health_all_ok_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HealthAllOkResponse, _impl_.is_health_all_ok_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_health_all_ok = 1;
    {PROTOBUF_FIELD_OFFSET(HealthAllOkResponse, _impl_.is_health_all_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HealthAllOkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.HealthAllOkResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_health_all_ok_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HealthAllOkResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HealthAllOkResponse& this_ = static_cast<const HealthAllOkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HealthAllOkResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HealthAllOkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.HealthAllOkResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_health_all_ok = 1;
          if (this_._internal_is_health_all_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_health_all_ok(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.HealthAllOkResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HealthAllOkResponse::ByteSizeLong(const MessageLite& base) {
          const HealthAllOkResponse& this_ = static_cast<const HealthAllOkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HealthAllOkResponse::ByteSizeLong() const {
          const HealthAllOkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.HealthAllOkResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool is_health_all_ok = 1;
            if (this_._internal_is_health_all_ok() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HealthAllOkResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HealthAllOkResponse*>(&to_msg);
  auto& from = static_cast<const HealthAllOkResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.HealthAllOkResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_health_all_ok() != 0) {
    _this->_impl_.is_health_all_ok_ = from._impl_.is_health_all_ok_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthAllOkResponse::CopyFrom(const HealthAllOkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.HealthAllOkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HealthAllOkResponse::InternalSwap(HealthAllOkResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.is_health_all_ok_, other->_impl_.is_health_all_ok_);
}

::google::protobuf::Metadata HealthAllOkResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUnixEpochTimeRequest::_Internal {
 public:
};

SubscribeUnixEpochTimeRequest::SubscribeUnixEpochTimeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeUnixEpochTimeRequest)
}
SubscribeUnixEpochTimeRequest::SubscribeUnixEpochTimeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeUnixEpochTimeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUnixEpochTimeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeUnixEpochTimeRequest)
}

inline void* SubscribeUnixEpochTimeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeUnixEpochTimeRequest(arena);
}
constexpr auto SubscribeUnixEpochTimeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeUnixEpochTimeRequest),
                                            alignof(SubscribeUnixEpochTimeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeUnixEpochTimeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeUnixEpochTimeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeUnixEpochTimeRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeUnixEpochTimeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeUnixEpochTimeRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeUnixEpochTimeRequest>(), &SubscribeUnixEpochTimeRequest::ByteSizeLong,
            &SubscribeUnixEpochTimeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeUnixEpochTimeRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeUnixEpochTimeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeUnixEpochTimeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeUnixEpochTimeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeUnixEpochTimeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeUnixEpochTimeRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnixEpochTimeResponse::_Internal {
 public:
};

UnixEpochTimeResponse::UnixEpochTimeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
}
UnixEpochTimeResponse::UnixEpochTimeResponse(
    ::google::protobuf::Arena* arena, const UnixEpochTimeResponse& from)
    : UnixEpochTimeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UnixEpochTimeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UnixEpochTimeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_us_ = {};
}
UnixEpochTimeResponse::~UnixEpochTimeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
  SharedDtor(*this);
}
inline void UnixEpochTimeResponse::SharedDtor(MessageLite& self) {
  UnixEpochTimeResponse& this_ = static_cast<UnixEpochTimeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UnixEpochTimeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnixEpochTimeResponse(arena);
}
constexpr auto UnixEpochTimeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UnixEpochTimeResponse),
                                            alignof(UnixEpochTimeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnixEpochTimeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnixEpochTimeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnixEpochTimeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnixEpochTimeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnixEpochTimeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnixEpochTimeResponse>(), &UnixEpochTimeResponse::ByteSizeLong,
            &UnixEpochTimeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnixEpochTimeResponse, _impl_._cached_size_),
        false,
    },
    &UnixEpochTimeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnixEpochTimeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> UnixEpochTimeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::UnixEpochTimeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 time_us = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UnixEpochTimeResponse, _impl_.time_us_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnixEpochTimeResponse, _impl_.time_us_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 time_us = 1;
    {PROTOBUF_FIELD_OFFSET(UnixEpochTimeResponse, _impl_.time_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UnixEpochTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.time_us_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnixEpochTimeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnixEpochTimeResponse& this_ = static_cast<const UnixEpochTimeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnixEpochTimeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnixEpochTimeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 time_us = 1;
          if (this_._internal_time_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_time_us(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnixEpochTimeResponse::ByteSizeLong(const MessageLite& base) {
          const UnixEpochTimeResponse& this_ = static_cast<const UnixEpochTimeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnixEpochTimeResponse::ByteSizeLong() const {
          const UnixEpochTimeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 time_us = 1;
            if (this_._internal_time_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_time_us());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnixEpochTimeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnixEpochTimeResponse*>(&to_msg);
  auto& from = static_cast<const UnixEpochTimeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_time_us() != 0) {
    _this->_impl_.time_us_ = from._impl_.time_us_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnixEpochTimeResponse::CopyFrom(const UnixEpochTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.UnixEpochTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnixEpochTimeResponse::InternalSwap(UnixEpochTimeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.time_us_, other->_impl_.time_us_);
}

::google::protobuf::Metadata UnixEpochTimeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeDistanceSensorRequest::_Internal {
 public:
};

SubscribeDistanceSensorRequest::SubscribeDistanceSensorRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeDistanceSensorRequest)
}
SubscribeDistanceSensorRequest::SubscribeDistanceSensorRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeDistanceSensorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeDistanceSensorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeDistanceSensorRequest)
}

inline void* SubscribeDistanceSensorRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeDistanceSensorRequest(arena);
}
constexpr auto SubscribeDistanceSensorRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeDistanceSensorRequest),
                                            alignof(SubscribeDistanceSensorRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeDistanceSensorRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeDistanceSensorRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeDistanceSensorRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeDistanceSensorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeDistanceSensorRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeDistanceSensorRequest>(), &SubscribeDistanceSensorRequest::ByteSizeLong,
            &SubscribeDistanceSensorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeDistanceSensorRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeDistanceSensorRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeDistanceSensorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeDistanceSensorRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeDistanceSensorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeDistanceSensorRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DistanceSensorResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DistanceSensorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DistanceSensorResponse, _impl_._has_bits_);
};

DistanceSensorResponse::DistanceSensorResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.DistanceSensorResponse)
}
inline PROTOBUF_NDEBUG_INLINE DistanceSensorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::DistanceSensorResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DistanceSensorResponse::DistanceSensorResponse(
    ::google::protobuf::Arena* arena,
    const DistanceSensorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DistanceSensorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.distance_sensor_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::DistanceSensor>(
                              arena, *from._impl_.distance_sensor_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.DistanceSensorResponse)
}
inline PROTOBUF_NDEBUG_INLINE DistanceSensorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DistanceSensorResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.distance_sensor_ = {};
}
DistanceSensorResponse::~DistanceSensorResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.DistanceSensorResponse)
  SharedDtor(*this);
}
inline void DistanceSensorResponse::SharedDtor(MessageLite& self) {
  DistanceSensorResponse& this_ = static_cast<DistanceSensorResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.distance_sensor_;
  this_._impl_.~Impl_();
}

inline void* DistanceSensorResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DistanceSensorResponse(arena);
}
constexpr auto DistanceSensorResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DistanceSensorResponse),
                                            alignof(DistanceSensorResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DistanceSensorResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DistanceSensorResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DistanceSensorResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DistanceSensorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DistanceSensorResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DistanceSensorResponse>(), &DistanceSensorResponse::ByteSizeLong,
            &DistanceSensorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DistanceSensorResponse, _impl_._cached_size_),
        false,
    },
    &DistanceSensorResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DistanceSensorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DistanceSensorResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DistanceSensorResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::DistanceSensorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.DistanceSensor distance_sensor = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DistanceSensorResponse, _impl_.distance_sensor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.DistanceSensor distance_sensor = 1;
    {PROTOBUF_FIELD_OFFSET(DistanceSensorResponse, _impl_.distance_sensor_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::DistanceSensor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DistanceSensorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.DistanceSensorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.distance_sensor_ != nullptr);
    _impl_.distance_sensor_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DistanceSensorResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DistanceSensorResponse& this_ = static_cast<const DistanceSensorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DistanceSensorResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DistanceSensorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.DistanceSensorResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.DistanceSensor distance_sensor = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.distance_sensor_, this_._impl_.distance_sensor_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.DistanceSensorResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DistanceSensorResponse::ByteSizeLong(const MessageLite& base) {
          const DistanceSensorResponse& this_ = static_cast<const DistanceSensorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DistanceSensorResponse::ByteSizeLong() const {
          const DistanceSensorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.DistanceSensorResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.DistanceSensor distance_sensor = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.distance_sensor_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DistanceSensorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DistanceSensorResponse*>(&to_msg);
  auto& from = static_cast<const DistanceSensorResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.DistanceSensorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.distance_sensor_ != nullptr);
    if (_this->_impl_.distance_sensor_ == nullptr) {
      _this->_impl_.distance_sensor_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::DistanceSensor>(arena, *from._impl_.distance_sensor_);
    } else {
      _this->_impl_.distance_sensor_->MergeFrom(*from._impl_.distance_sensor_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistanceSensorResponse::CopyFrom(const DistanceSensorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.DistanceSensorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DistanceSensorResponse::InternalSwap(DistanceSensorResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.distance_sensor_, other->_impl_.distance_sensor_);
}

::google::protobuf::Metadata DistanceSensorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeScaledPressureRequest::_Internal {
 public:
};

SubscribeScaledPressureRequest::SubscribeScaledPressureRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeScaledPressureRequest)
}
SubscribeScaledPressureRequest::SubscribeScaledPressureRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeScaledPressureRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeScaledPressureRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeScaledPressureRequest)
}

inline void* SubscribeScaledPressureRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeScaledPressureRequest(arena);
}
constexpr auto SubscribeScaledPressureRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeScaledPressureRequest),
                                            alignof(SubscribeScaledPressureRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeScaledPressureRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeScaledPressureRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeScaledPressureRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeScaledPressureRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeScaledPressureRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeScaledPressureRequest>(), &SubscribeScaledPressureRequest::ByteSizeLong,
            &SubscribeScaledPressureRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeScaledPressureRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeScaledPressureRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeScaledPressureRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeScaledPressureRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeScaledPressureRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeScaledPressureRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScaledPressureResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScaledPressureResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScaledPressureResponse, _impl_._has_bits_);
};

ScaledPressureResponse::ScaledPressureResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ScaledPressureResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScaledPressureResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ScaledPressureResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ScaledPressureResponse::ScaledPressureResponse(
    ::google::protobuf::Arena* arena,
    const ScaledPressureResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScaledPressureResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.scaled_pressure_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::ScaledPressure>(
                              arena, *from._impl_.scaled_pressure_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ScaledPressureResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScaledPressureResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScaledPressureResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.scaled_pressure_ = {};
}
ScaledPressureResponse::~ScaledPressureResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ScaledPressureResponse)
  SharedDtor(*this);
}
inline void ScaledPressureResponse::SharedDtor(MessageLite& self) {
  ScaledPressureResponse& this_ = static_cast<ScaledPressureResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.scaled_pressure_;
  this_._impl_.~Impl_();
}

inline void* ScaledPressureResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScaledPressureResponse(arena);
}
constexpr auto ScaledPressureResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScaledPressureResponse),
                                            alignof(ScaledPressureResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScaledPressureResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScaledPressureResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScaledPressureResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScaledPressureResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScaledPressureResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScaledPressureResponse>(), &ScaledPressureResponse::ByteSizeLong,
            &ScaledPressureResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScaledPressureResponse, _impl_._cached_size_),
        false,
    },
    &ScaledPressureResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScaledPressureResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ScaledPressureResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScaledPressureResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ScaledPressureResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.ScaledPressure scaled_pressure = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ScaledPressureResponse, _impl_.scaled_pressure_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.ScaledPressure scaled_pressure = 1;
    {PROTOBUF_FIELD_OFFSET(ScaledPressureResponse, _impl_.scaled_pressure_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ScaledPressure>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ScaledPressureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ScaledPressureResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.scaled_pressure_ != nullptr);
    _impl_.scaled_pressure_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScaledPressureResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScaledPressureResponse& this_ = static_cast<const ScaledPressureResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScaledPressureResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScaledPressureResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ScaledPressureResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.ScaledPressure scaled_pressure = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.scaled_pressure_, this_._impl_.scaled_pressure_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ScaledPressureResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScaledPressureResponse::ByteSizeLong(const MessageLite& base) {
          const ScaledPressureResponse& this_ = static_cast<const ScaledPressureResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScaledPressureResponse::ByteSizeLong() const {
          const ScaledPressureResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ScaledPressureResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.ScaledPressure scaled_pressure = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scaled_pressure_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScaledPressureResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScaledPressureResponse*>(&to_msg);
  auto& from = static_cast<const ScaledPressureResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ScaledPressureResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.scaled_pressure_ != nullptr);
    if (_this->_impl_.scaled_pressure_ == nullptr) {
      _this->_impl_.scaled_pressure_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::ScaledPressure>(arena, *from._impl_.scaled_pressure_);
    } else {
      _this->_impl_.scaled_pressure_->MergeFrom(*from._impl_.scaled_pressure_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScaledPressureResponse::CopyFrom(const ScaledPressureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ScaledPressureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScaledPressureResponse::InternalSwap(ScaledPressureResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.scaled_pressure_, other->_impl_.scaled_pressure_);
}

::google::protobuf::Metadata ScaledPressureResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeHeadingRequest::_Internal {
 public:
};

SubscribeHeadingRequest::SubscribeHeadingRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeHeadingRequest)
}
SubscribeHeadingRequest::SubscribeHeadingRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeHeadingRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeHeadingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeHeadingRequest)
}

inline void* SubscribeHeadingRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeHeadingRequest(arena);
}
constexpr auto SubscribeHeadingRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeHeadingRequest),
                                            alignof(SubscribeHeadingRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeHeadingRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeHeadingRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeHeadingRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeHeadingRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeHeadingRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeHeadingRequest>(), &SubscribeHeadingRequest::ByteSizeLong,
            &SubscribeHeadingRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeHeadingRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeHeadingRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeHeadingRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeHeadingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeHeadingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeHeadingRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeadingResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HeadingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeadingResponse, _impl_._has_bits_);
};

HeadingResponse::HeadingResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.HeadingResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeadingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::HeadingResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HeadingResponse::HeadingResponse(
    ::google::protobuf::Arena* arena,
    const HeadingResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeadingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.heading_deg_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Heading>(
                              arena, *from._impl_.heading_deg_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.HeadingResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeadingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HeadingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.heading_deg_ = {};
}
HeadingResponse::~HeadingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.HeadingResponse)
  SharedDtor(*this);
}
inline void HeadingResponse::SharedDtor(MessageLite& self) {
  HeadingResponse& this_ = static_cast<HeadingResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.heading_deg_;
  this_._impl_.~Impl_();
}

inline void* HeadingResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeadingResponse(arena);
}
constexpr auto HeadingResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeadingResponse),
                                            alignof(HeadingResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeadingResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeadingResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeadingResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeadingResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeadingResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeadingResponse>(), &HeadingResponse::ByteSizeLong,
            &HeadingResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeadingResponse, _impl_._cached_size_),
        false,
    },
    &HeadingResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeadingResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HeadingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeadingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::HeadingResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Heading heading_deg = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeadingResponse, _impl_.heading_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Heading heading_deg = 1;
    {PROTOBUF_FIELD_OFFSET(HeadingResponse, _impl_.heading_deg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Heading>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HeadingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.HeadingResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.heading_deg_ != nullptr);
    _impl_.heading_deg_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeadingResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeadingResponse& this_ = static_cast<const HeadingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeadingResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeadingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.HeadingResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Heading heading_deg = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.heading_deg_, this_._impl_.heading_deg_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.HeadingResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeadingResponse::ByteSizeLong(const MessageLite& base) {
          const HeadingResponse& this_ = static_cast<const HeadingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeadingResponse::ByteSizeLong() const {
          const HeadingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.HeadingResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Heading heading_deg = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.heading_deg_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeadingResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeadingResponse*>(&to_msg);
  auto& from = static_cast<const HeadingResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.HeadingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.heading_deg_ != nullptr);
    if (_this->_impl_.heading_deg_ == nullptr) {
      _this->_impl_.heading_deg_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Heading>(arena, *from._impl_.heading_deg_);
    } else {
      _this->_impl_.heading_deg_->MergeFrom(*from._impl_.heading_deg_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeadingResponse::CopyFrom(const HeadingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.HeadingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeadingResponse::InternalSwap(HeadingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.heading_deg_, other->_impl_.heading_deg_);
}

::google::protobuf::Metadata HeadingResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeAltitudeRequest::_Internal {
 public:
};

SubscribeAltitudeRequest::SubscribeAltitudeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeAltitudeRequest)
}
SubscribeAltitudeRequest::SubscribeAltitudeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeAltitudeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeAltitudeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeAltitudeRequest)
}

inline void* SubscribeAltitudeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeAltitudeRequest(arena);
}
constexpr auto SubscribeAltitudeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeAltitudeRequest),
                                            alignof(SubscribeAltitudeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeAltitudeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeAltitudeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeAltitudeRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeAltitudeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeAltitudeRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeAltitudeRequest>(), &SubscribeAltitudeRequest::ByteSizeLong,
            &SubscribeAltitudeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeAltitudeRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeAltitudeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeAltitudeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeAltitudeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeAltitudeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeAltitudeRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AltitudeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AltitudeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AltitudeResponse, _impl_._has_bits_);
};

AltitudeResponse::AltitudeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AltitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE AltitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::AltitudeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AltitudeResponse::AltitudeResponse(
    ::google::protobuf::Arena* arena,
    const AltitudeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AltitudeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.altitude_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Altitude>(
                              arena, *from._impl_.altitude_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.AltitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE AltitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AltitudeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.altitude_ = {};
}
AltitudeResponse::~AltitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AltitudeResponse)
  SharedDtor(*this);
}
inline void AltitudeResponse::SharedDtor(MessageLite& self) {
  AltitudeResponse& this_ = static_cast<AltitudeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.altitude_;
  this_._impl_.~Impl_();
}

inline void* AltitudeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AltitudeResponse(arena);
}
constexpr auto AltitudeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AltitudeResponse),
                                            alignof(AltitudeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AltitudeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AltitudeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AltitudeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AltitudeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AltitudeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AltitudeResponse>(), &AltitudeResponse::ByteSizeLong,
            &AltitudeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AltitudeResponse, _impl_._cached_size_),
        false,
    },
    &AltitudeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AltitudeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AltitudeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AltitudeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AltitudeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Altitude altitude = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AltitudeResponse, _impl_.altitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Altitude altitude = 1;
    {PROTOBUF_FIELD_OFFSET(AltitudeResponse, _impl_.altitude_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Altitude>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AltitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AltitudeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.altitude_ != nullptr);
    _impl_.altitude_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AltitudeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AltitudeResponse& this_ = static_cast<const AltitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AltitudeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AltitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AltitudeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Altitude altitude = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.altitude_, this_._impl_.altitude_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AltitudeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AltitudeResponse::ByteSizeLong(const MessageLite& base) {
          const AltitudeResponse& this_ = static_cast<const AltitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AltitudeResponse::ByteSizeLong() const {
          const AltitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AltitudeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Altitude altitude = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.altitude_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AltitudeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AltitudeResponse*>(&to_msg);
  auto& from = static_cast<const AltitudeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AltitudeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.altitude_ != nullptr);
    if (_this->_impl_.altitude_ == nullptr) {
      _this->_impl_.altitude_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Altitude>(arena, *from._impl_.altitude_);
    } else {
      _this->_impl_.altitude_->MergeFrom(*from._impl_.altitude_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AltitudeResponse::CopyFrom(const AltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AltitudeResponse::InternalSwap(AltitudeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.altitude_, other->_impl_.altitude_);
}

::google::protobuf::Metadata AltitudeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeWindRequest::_Internal {
 public:
};

SubscribeWindRequest::SubscribeWindRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SubscribeWindRequest)
}
SubscribeWindRequest::SubscribeWindRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeWindRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeWindRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SubscribeWindRequest)
}

inline void* SubscribeWindRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeWindRequest(arena);
}
constexpr auto SubscribeWindRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeWindRequest),
                                            alignof(SubscribeWindRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeWindRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeWindRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeWindRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeWindRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeWindRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeWindRequest>(), &SubscribeWindRequest::ByteSizeLong,
            &SubscribeWindRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeWindRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeWindRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeWindRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SubscribeWindRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SubscribeWindRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SubscribeWindRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WindResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WindResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WindResponse, _impl_._has_bits_);
};

WindResponse::WindResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.WindResponse)
}
inline PROTOBUF_NDEBUG_INLINE WindResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::WindResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WindResponse::WindResponse(
    ::google::protobuf::Arena* arena,
    const WindResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WindResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.wind_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Wind>(
                              arena, *from._impl_.wind_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.WindResponse)
}
inline PROTOBUF_NDEBUG_INLINE WindResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WindResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.wind_ = {};
}
WindResponse::~WindResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.WindResponse)
  SharedDtor(*this);
}
inline void WindResponse::SharedDtor(MessageLite& self) {
  WindResponse& this_ = static_cast<WindResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.wind_;
  this_._impl_.~Impl_();
}

inline void* WindResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WindResponse(arena);
}
constexpr auto WindResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WindResponse),
                                            alignof(WindResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WindResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WindResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WindResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WindResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WindResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WindResponse>(), &WindResponse::ByteSizeLong,
            &WindResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WindResponse, _impl_._cached_size_),
        false,
    },
    &WindResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WindResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WindResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WindResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::WindResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.Wind wind = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WindResponse, _impl_.wind_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.Wind wind = 1;
    {PROTOBUF_FIELD_OFFSET(WindResponse, _impl_.wind_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Wind>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WindResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.WindResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.wind_ != nullptr);
    _impl_.wind_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WindResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WindResponse& this_ = static_cast<const WindResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WindResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WindResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.WindResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.Wind wind = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.wind_, this_._impl_.wind_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.WindResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WindResponse::ByteSizeLong(const MessageLite& base) {
          const WindResponse& this_ = static_cast<const WindResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WindResponse::ByteSizeLong() const {
          const WindResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.WindResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.Wind wind = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.wind_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WindResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WindResponse*>(&to_msg);
  auto& from = static_cast<const WindResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.WindResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.wind_ != nullptr);
    if (_this->_impl_.wind_ == nullptr) {
      _this->_impl_.wind_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Wind>(arena, *from._impl_.wind_);
    } else {
      _this->_impl_.wind_->MergeFrom(*from._impl_.wind_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WindResponse::CopyFrom(const WindResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.WindResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WindResponse::InternalSwap(WindResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.wind_, other->_impl_.wind_);
}

::google::protobuf::Metadata WindResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRatePositionRequest::_Internal {
 public:
};

SetRatePositionRequest::SetRatePositionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRatePositionRequest)
}
SetRatePositionRequest::SetRatePositionRequest(
    ::google::protobuf::Arena* arena, const SetRatePositionRequest& from)
    : SetRatePositionRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRatePositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRatePositionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRatePositionRequest::~SetRatePositionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRatePositionRequest)
  SharedDtor(*this);
}
inline void SetRatePositionRequest::SharedDtor(MessageLite& self) {
  SetRatePositionRequest& this_ = static_cast<SetRatePositionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRatePositionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRatePositionRequest(arena);
}
constexpr auto SetRatePositionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRatePositionRequest),
                                            alignof(SetRatePositionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRatePositionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRatePositionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRatePositionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRatePositionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRatePositionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRatePositionRequest>(), &SetRatePositionRequest::ByteSizeLong,
            &SetRatePositionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRatePositionRequest, _impl_._cached_size_),
        false,
    },
    &SetRatePositionRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRatePositionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRatePositionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRatePositionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRatePositionRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRatePositionRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRatePositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRatePositionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRatePositionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRatePositionRequest& this_ = static_cast<const SetRatePositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRatePositionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRatePositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRatePositionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRatePositionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRatePositionRequest::ByteSizeLong(const MessageLite& base) {
          const SetRatePositionRequest& this_ = static_cast<const SetRatePositionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRatePositionRequest::ByteSizeLong() const {
          const SetRatePositionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRatePositionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRatePositionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRatePositionRequest*>(&to_msg);
  auto& from = static_cast<const SetRatePositionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRatePositionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRatePositionRequest::CopyFrom(const SetRatePositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRatePositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRatePositionRequest::InternalSwap(SetRatePositionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRatePositionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRatePositionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRatePositionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRatePositionResponse, _impl_._has_bits_);
};

SetRatePositionResponse::SetRatePositionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRatePositionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRatePositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRatePositionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRatePositionResponse::SetRatePositionResponse(
    ::google::protobuf::Arena* arena,
    const SetRatePositionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRatePositionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRatePositionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRatePositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRatePositionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRatePositionResponse::~SetRatePositionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRatePositionResponse)
  SharedDtor(*this);
}
inline void SetRatePositionResponse::SharedDtor(MessageLite& self) {
  SetRatePositionResponse& this_ = static_cast<SetRatePositionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRatePositionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRatePositionResponse(arena);
}
constexpr auto SetRatePositionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRatePositionResponse),
                                            alignof(SetRatePositionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRatePositionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRatePositionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRatePositionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRatePositionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRatePositionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRatePositionResponse>(), &SetRatePositionResponse::ByteSizeLong,
            &SetRatePositionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRatePositionResponse, _impl_._cached_size_),
        false,
    },
    &SetRatePositionResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRatePositionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRatePositionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRatePositionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRatePositionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRatePositionResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRatePositionResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRatePositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRatePositionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRatePositionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRatePositionResponse& this_ = static_cast<const SetRatePositionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRatePositionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRatePositionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRatePositionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRatePositionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRatePositionResponse::ByteSizeLong(const MessageLite& base) {
          const SetRatePositionResponse& this_ = static_cast<const SetRatePositionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRatePositionResponse::ByteSizeLong() const {
          const SetRatePositionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRatePositionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRatePositionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRatePositionResponse*>(&to_msg);
  auto& from = static_cast<const SetRatePositionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRatePositionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRatePositionResponse::CopyFrom(const SetRatePositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRatePositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRatePositionResponse::InternalSwap(SetRatePositionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRatePositionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateHomeRequest::_Internal {
 public:
};

SetRateHomeRequest::SetRateHomeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateHomeRequest)
}
SetRateHomeRequest::SetRateHomeRequest(
    ::google::protobuf::Arena* arena, const SetRateHomeRequest& from)
    : SetRateHomeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateHomeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateHomeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateHomeRequest::~SetRateHomeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateHomeRequest)
  SharedDtor(*this);
}
inline void SetRateHomeRequest::SharedDtor(MessageLite& self) {
  SetRateHomeRequest& this_ = static_cast<SetRateHomeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateHomeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateHomeRequest(arena);
}
constexpr auto SetRateHomeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateHomeRequest),
                                            alignof(SetRateHomeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateHomeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateHomeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateHomeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateHomeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateHomeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateHomeRequest>(), &SetRateHomeRequest::ByteSizeLong,
            &SetRateHomeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateHomeRequest, _impl_._cached_size_),
        false,
    },
    &SetRateHomeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateHomeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateHomeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateHomeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateHomeRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateHomeRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateHomeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateHomeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateHomeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateHomeRequest& this_ = static_cast<const SetRateHomeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateHomeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateHomeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateHomeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateHomeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateHomeRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateHomeRequest& this_ = static_cast<const SetRateHomeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateHomeRequest::ByteSizeLong() const {
          const SetRateHomeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateHomeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateHomeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateHomeRequest*>(&to_msg);
  auto& from = static_cast<const SetRateHomeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateHomeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateHomeRequest::CopyFrom(const SetRateHomeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateHomeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateHomeRequest::InternalSwap(SetRateHomeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateHomeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateHomeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateHomeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateHomeResponse, _impl_._has_bits_);
};

SetRateHomeResponse::SetRateHomeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateHomeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateHomeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateHomeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateHomeResponse::SetRateHomeResponse(
    ::google::protobuf::Arena* arena,
    const SetRateHomeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateHomeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateHomeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateHomeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateHomeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateHomeResponse::~SetRateHomeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateHomeResponse)
  SharedDtor(*this);
}
inline void SetRateHomeResponse::SharedDtor(MessageLite& self) {
  SetRateHomeResponse& this_ = static_cast<SetRateHomeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateHomeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateHomeResponse(arena);
}
constexpr auto SetRateHomeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateHomeResponse),
                                            alignof(SetRateHomeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateHomeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateHomeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateHomeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateHomeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateHomeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateHomeResponse>(), &SetRateHomeResponse::ByteSizeLong,
            &SetRateHomeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateHomeResponse, _impl_._cached_size_),
        false,
    },
    &SetRateHomeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateHomeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateHomeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateHomeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateHomeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateHomeResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateHomeResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateHomeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateHomeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateHomeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateHomeResponse& this_ = static_cast<const SetRateHomeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateHomeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateHomeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateHomeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateHomeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateHomeResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateHomeResponse& this_ = static_cast<const SetRateHomeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateHomeResponse::ByteSizeLong() const {
          const SetRateHomeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateHomeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateHomeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateHomeResponse*>(&to_msg);
  auto& from = static_cast<const SetRateHomeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateHomeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateHomeResponse::CopyFrom(const SetRateHomeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateHomeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateHomeResponse::InternalSwap(SetRateHomeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateHomeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateInAirRequest::_Internal {
 public:
};

SetRateInAirRequest::SetRateInAirRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateInAirRequest)
}
SetRateInAirRequest::SetRateInAirRequest(
    ::google::protobuf::Arena* arena, const SetRateInAirRequest& from)
    : SetRateInAirRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateInAirRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateInAirRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateInAirRequest::~SetRateInAirRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateInAirRequest)
  SharedDtor(*this);
}
inline void SetRateInAirRequest::SharedDtor(MessageLite& self) {
  SetRateInAirRequest& this_ = static_cast<SetRateInAirRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateInAirRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateInAirRequest(arena);
}
constexpr auto SetRateInAirRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateInAirRequest),
                                            alignof(SetRateInAirRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateInAirRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateInAirRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateInAirRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateInAirRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateInAirRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateInAirRequest>(), &SetRateInAirRequest::ByteSizeLong,
            &SetRateInAirRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateInAirRequest, _impl_._cached_size_),
        false,
    },
    &SetRateInAirRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateInAirRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateInAirRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateInAirRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateInAirRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateInAirRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateInAirRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateInAirRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateInAirRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateInAirRequest& this_ = static_cast<const SetRateInAirRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateInAirRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateInAirRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateInAirRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateInAirRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateInAirRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateInAirRequest& this_ = static_cast<const SetRateInAirRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateInAirRequest::ByteSizeLong() const {
          const SetRateInAirRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateInAirRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateInAirRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateInAirRequest*>(&to_msg);
  auto& from = static_cast<const SetRateInAirRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateInAirRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateInAirRequest::CopyFrom(const SetRateInAirRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateInAirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateInAirRequest::InternalSwap(SetRateInAirRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateInAirRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateInAirResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateInAirResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateInAirResponse, _impl_._has_bits_);
};

SetRateInAirResponse::SetRateInAirResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateInAirResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateInAirResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateInAirResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateInAirResponse::SetRateInAirResponse(
    ::google::protobuf::Arena* arena,
    const SetRateInAirResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateInAirResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateInAirResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateInAirResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateInAirResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateInAirResponse::~SetRateInAirResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateInAirResponse)
  SharedDtor(*this);
}
inline void SetRateInAirResponse::SharedDtor(MessageLite& self) {
  SetRateInAirResponse& this_ = static_cast<SetRateInAirResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateInAirResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateInAirResponse(arena);
}
constexpr auto SetRateInAirResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateInAirResponse),
                                            alignof(SetRateInAirResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateInAirResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateInAirResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateInAirResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateInAirResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateInAirResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateInAirResponse>(), &SetRateInAirResponse::ByteSizeLong,
            &SetRateInAirResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateInAirResponse, _impl_._cached_size_),
        false,
    },
    &SetRateInAirResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateInAirResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateInAirResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateInAirResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateInAirResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateInAirResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateInAirResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateInAirResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateInAirResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateInAirResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateInAirResponse& this_ = static_cast<const SetRateInAirResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateInAirResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateInAirResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateInAirResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateInAirResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateInAirResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateInAirResponse& this_ = static_cast<const SetRateInAirResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateInAirResponse::ByteSizeLong() const {
          const SetRateInAirResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateInAirResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateInAirResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateInAirResponse*>(&to_msg);
  auto& from = static_cast<const SetRateInAirResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateInAirResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateInAirResponse::CopyFrom(const SetRateInAirResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateInAirResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateInAirResponse::InternalSwap(SetRateInAirResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateInAirResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateLandedStateRequest::_Internal {
 public:
};

SetRateLandedStateRequest::SetRateLandedStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
}
SetRateLandedStateRequest::SetRateLandedStateRequest(
    ::google::protobuf::Arena* arena, const SetRateLandedStateRequest& from)
    : SetRateLandedStateRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateLandedStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateLandedStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateLandedStateRequest::~SetRateLandedStateRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
  SharedDtor(*this);
}
inline void SetRateLandedStateRequest::SharedDtor(MessageLite& self) {
  SetRateLandedStateRequest& this_ = static_cast<SetRateLandedStateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateLandedStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateLandedStateRequest(arena);
}
constexpr auto SetRateLandedStateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateLandedStateRequest),
                                            alignof(SetRateLandedStateRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateLandedStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateLandedStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateLandedStateRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateLandedStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateLandedStateRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateLandedStateRequest>(), &SetRateLandedStateRequest::ByteSizeLong,
            &SetRateLandedStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateLandedStateRequest, _impl_._cached_size_),
        false,
    },
    &SetRateLandedStateRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateLandedStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateLandedStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateLandedStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateLandedStateRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateLandedStateRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateLandedStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateLandedStateRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateLandedStateRequest& this_ = static_cast<const SetRateLandedStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateLandedStateRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateLandedStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateLandedStateRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateLandedStateRequest& this_ = static_cast<const SetRateLandedStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateLandedStateRequest::ByteSizeLong() const {
          const SetRateLandedStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateLandedStateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateLandedStateRequest*>(&to_msg);
  auto& from = static_cast<const SetRateLandedStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateLandedStateRequest::CopyFrom(const SetRateLandedStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateLandedStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateLandedStateRequest::InternalSwap(SetRateLandedStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateLandedStateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateLandedStateResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateLandedStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateLandedStateResponse, _impl_._has_bits_);
};

SetRateLandedStateResponse::SetRateLandedStateResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateLandedStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateLandedStateResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateLandedStateResponse::SetRateLandedStateResponse(
    ::google::protobuf::Arena* arena,
    const SetRateLandedStateResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateLandedStateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateLandedStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateLandedStateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateLandedStateResponse::~SetRateLandedStateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
  SharedDtor(*this);
}
inline void SetRateLandedStateResponse::SharedDtor(MessageLite& self) {
  SetRateLandedStateResponse& this_ = static_cast<SetRateLandedStateResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateLandedStateResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateLandedStateResponse(arena);
}
constexpr auto SetRateLandedStateResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateLandedStateResponse),
                                            alignof(SetRateLandedStateResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateLandedStateResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateLandedStateResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateLandedStateResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateLandedStateResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateLandedStateResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateLandedStateResponse>(), &SetRateLandedStateResponse::ByteSizeLong,
            &SetRateLandedStateResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateLandedStateResponse, _impl_._cached_size_),
        false,
    },
    &SetRateLandedStateResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateLandedStateResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateLandedStateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateLandedStateResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateLandedStateResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateLandedStateResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateLandedStateResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateLandedStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateLandedStateResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateLandedStateResponse& this_ = static_cast<const SetRateLandedStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateLandedStateResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateLandedStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateLandedStateResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateLandedStateResponse& this_ = static_cast<const SetRateLandedStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateLandedStateResponse::ByteSizeLong() const {
          const SetRateLandedStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateLandedStateResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateLandedStateResponse*>(&to_msg);
  auto& from = static_cast<const SetRateLandedStateResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateLandedStateResponse::CopyFrom(const SetRateLandedStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateLandedStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateLandedStateResponse::InternalSwap(SetRateLandedStateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateLandedStateResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateVtolStateRequest::_Internal {
 public:
};

SetRateVtolStateRequest::SetRateVtolStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
}
SetRateVtolStateRequest::SetRateVtolStateRequest(
    ::google::protobuf::Arena* arena, const SetRateVtolStateRequest& from)
    : SetRateVtolStateRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateVtolStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateVtolStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateVtolStateRequest::~SetRateVtolStateRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
  SharedDtor(*this);
}
inline void SetRateVtolStateRequest::SharedDtor(MessageLite& self) {
  SetRateVtolStateRequest& this_ = static_cast<SetRateVtolStateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateVtolStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateVtolStateRequest(arena);
}
constexpr auto SetRateVtolStateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateVtolStateRequest),
                                            alignof(SetRateVtolStateRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateVtolStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateVtolStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateVtolStateRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateVtolStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateVtolStateRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateVtolStateRequest>(), &SetRateVtolStateRequest::ByteSizeLong,
            &SetRateVtolStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateVtolStateRequest, _impl_._cached_size_),
        false,
    },
    &SetRateVtolStateRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateVtolStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateVtolStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateVtolStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateVtolStateRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateVtolStateRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateVtolStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateVtolStateRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateVtolStateRequest& this_ = static_cast<const SetRateVtolStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateVtolStateRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateVtolStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateVtolStateRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateVtolStateRequest& this_ = static_cast<const SetRateVtolStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateVtolStateRequest::ByteSizeLong() const {
          const SetRateVtolStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateVtolStateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateVtolStateRequest*>(&to_msg);
  auto& from = static_cast<const SetRateVtolStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateVtolStateRequest::CopyFrom(const SetRateVtolStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateVtolStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateVtolStateRequest::InternalSwap(SetRateVtolStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateVtolStateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateVtolStateResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateVtolStateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateVtolStateResponse, _impl_._has_bits_);
};

SetRateVtolStateResponse::SetRateVtolStateResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateVtolStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateVtolStateResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateVtolStateResponse::SetRateVtolStateResponse(
    ::google::protobuf::Arena* arena,
    const SetRateVtolStateResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateVtolStateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateVtolStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateVtolStateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateVtolStateResponse::~SetRateVtolStateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
  SharedDtor(*this);
}
inline void SetRateVtolStateResponse::SharedDtor(MessageLite& self) {
  SetRateVtolStateResponse& this_ = static_cast<SetRateVtolStateResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateVtolStateResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateVtolStateResponse(arena);
}
constexpr auto SetRateVtolStateResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateVtolStateResponse),
                                            alignof(SetRateVtolStateResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateVtolStateResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateVtolStateResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateVtolStateResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateVtolStateResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateVtolStateResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateVtolStateResponse>(), &SetRateVtolStateResponse::ByteSizeLong,
            &SetRateVtolStateResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateVtolStateResponse, _impl_._cached_size_),
        false,
    },
    &SetRateVtolStateResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateVtolStateResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateVtolStateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateVtolStateResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateVtolStateResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateVtolStateResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateVtolStateResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateVtolStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateVtolStateResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateVtolStateResponse& this_ = static_cast<const SetRateVtolStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateVtolStateResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateVtolStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateVtolStateResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateVtolStateResponse& this_ = static_cast<const SetRateVtolStateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateVtolStateResponse::ByteSizeLong() const {
          const SetRateVtolStateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateVtolStateResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateVtolStateResponse*>(&to_msg);
  auto& from = static_cast<const SetRateVtolStateResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateVtolStateResponse::CopyFrom(const SetRateVtolStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateVtolStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateVtolStateResponse::InternalSwap(SetRateVtolStateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateVtolStateResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAttitudeEulerRequest::_Internal {
 public:
};

SetRateAttitudeEulerRequest::SetRateAttitudeEulerRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
}
SetRateAttitudeEulerRequest::SetRateAttitudeEulerRequest(
    ::google::protobuf::Arena* arena, const SetRateAttitudeEulerRequest& from)
    : SetRateAttitudeEulerRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeEulerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAttitudeEulerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateAttitudeEulerRequest::~SetRateAttitudeEulerRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
  SharedDtor(*this);
}
inline void SetRateAttitudeEulerRequest::SharedDtor(MessageLite& self) {
  SetRateAttitudeEulerRequest& this_ = static_cast<SetRateAttitudeEulerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateAttitudeEulerRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAttitudeEulerRequest(arena);
}
constexpr auto SetRateAttitudeEulerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAttitudeEulerRequest),
                                            alignof(SetRateAttitudeEulerRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAttitudeEulerRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAttitudeEulerRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAttitudeEulerRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAttitudeEulerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAttitudeEulerRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAttitudeEulerRequest>(), &SetRateAttitudeEulerRequest::ByteSizeLong,
            &SetRateAttitudeEulerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerRequest, _impl_._cached_size_),
        false,
    },
    &SetRateAttitudeEulerRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAttitudeEulerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateAttitudeEulerRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAttitudeEulerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateAttitudeEulerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAttitudeEulerRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAttitudeEulerRequest& this_ = static_cast<const SetRateAttitudeEulerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAttitudeEulerRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAttitudeEulerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAttitudeEulerRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateAttitudeEulerRequest& this_ = static_cast<const SetRateAttitudeEulerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAttitudeEulerRequest::ByteSizeLong() const {
          const SetRateAttitudeEulerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAttitudeEulerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAttitudeEulerRequest*>(&to_msg);
  auto& from = static_cast<const SetRateAttitudeEulerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAttitudeEulerRequest::CopyFrom(const SetRateAttitudeEulerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAttitudeEulerRequest::InternalSwap(SetRateAttitudeEulerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateAttitudeEulerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAttitudeEulerResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateAttitudeEulerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerResponse, _impl_._has_bits_);
};

SetRateAttitudeEulerResponse::SetRateAttitudeEulerResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeEulerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateAttitudeEulerResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateAttitudeEulerResponse::SetRateAttitudeEulerResponse(
    ::google::protobuf::Arena* arena,
    const SetRateAttitudeEulerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateAttitudeEulerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeEulerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAttitudeEulerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateAttitudeEulerResponse::~SetRateAttitudeEulerResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
  SharedDtor(*this);
}
inline void SetRateAttitudeEulerResponse::SharedDtor(MessageLite& self) {
  SetRateAttitudeEulerResponse& this_ = static_cast<SetRateAttitudeEulerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateAttitudeEulerResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAttitudeEulerResponse(arena);
}
constexpr auto SetRateAttitudeEulerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAttitudeEulerResponse),
                                            alignof(SetRateAttitudeEulerResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAttitudeEulerResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAttitudeEulerResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAttitudeEulerResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAttitudeEulerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAttitudeEulerResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAttitudeEulerResponse>(), &SetRateAttitudeEulerResponse::ByteSizeLong,
            &SetRateAttitudeEulerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerResponse, _impl_._cached_size_),
        false,
    },
    &SetRateAttitudeEulerResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAttitudeEulerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateAttitudeEulerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAttitudeEulerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAttitudeEulerResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateAttitudeEulerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAttitudeEulerResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAttitudeEulerResponse& this_ = static_cast<const SetRateAttitudeEulerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAttitudeEulerResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAttitudeEulerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAttitudeEulerResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateAttitudeEulerResponse& this_ = static_cast<const SetRateAttitudeEulerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAttitudeEulerResponse::ByteSizeLong() const {
          const SetRateAttitudeEulerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAttitudeEulerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAttitudeEulerResponse*>(&to_msg);
  auto& from = static_cast<const SetRateAttitudeEulerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAttitudeEulerResponse::CopyFrom(const SetRateAttitudeEulerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAttitudeEulerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAttitudeEulerResponse::InternalSwap(SetRateAttitudeEulerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateAttitudeEulerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAttitudeQuaternionRequest::_Internal {
 public:
};

SetRateAttitudeQuaternionRequest::SetRateAttitudeQuaternionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
}
SetRateAttitudeQuaternionRequest::SetRateAttitudeQuaternionRequest(
    ::google::protobuf::Arena* arena, const SetRateAttitudeQuaternionRequest& from)
    : SetRateAttitudeQuaternionRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeQuaternionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAttitudeQuaternionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateAttitudeQuaternionRequest::~SetRateAttitudeQuaternionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
  SharedDtor(*this);
}
inline void SetRateAttitudeQuaternionRequest::SharedDtor(MessageLite& self) {
  SetRateAttitudeQuaternionRequest& this_ = static_cast<SetRateAttitudeQuaternionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateAttitudeQuaternionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAttitudeQuaternionRequest(arena);
}
constexpr auto SetRateAttitudeQuaternionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAttitudeQuaternionRequest),
                                            alignof(SetRateAttitudeQuaternionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAttitudeQuaternionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAttitudeQuaternionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAttitudeQuaternionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAttitudeQuaternionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAttitudeQuaternionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAttitudeQuaternionRequest>(), &SetRateAttitudeQuaternionRequest::ByteSizeLong,
            &SetRateAttitudeQuaternionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionRequest, _impl_._cached_size_),
        false,
    },
    &SetRateAttitudeQuaternionRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAttitudeQuaternionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateAttitudeQuaternionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateAttitudeQuaternionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAttitudeQuaternionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAttitudeQuaternionRequest& this_ = static_cast<const SetRateAttitudeQuaternionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAttitudeQuaternionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAttitudeQuaternionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAttitudeQuaternionRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateAttitudeQuaternionRequest& this_ = static_cast<const SetRateAttitudeQuaternionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAttitudeQuaternionRequest::ByteSizeLong() const {
          const SetRateAttitudeQuaternionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAttitudeQuaternionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAttitudeQuaternionRequest*>(&to_msg);
  auto& from = static_cast<const SetRateAttitudeQuaternionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAttitudeQuaternionRequest::CopyFrom(const SetRateAttitudeQuaternionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAttitudeQuaternionRequest::InternalSwap(SetRateAttitudeQuaternionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateAttitudeQuaternionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAttitudeQuaternionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateAttitudeQuaternionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionResponse, _impl_._has_bits_);
};

SetRateAttitudeQuaternionResponse::SetRateAttitudeQuaternionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeQuaternionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateAttitudeQuaternionResponse::SetRateAttitudeQuaternionResponse(
    ::google::protobuf::Arena* arena,
    const SetRateAttitudeQuaternionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateAttitudeQuaternionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeQuaternionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAttitudeQuaternionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateAttitudeQuaternionResponse::~SetRateAttitudeQuaternionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
  SharedDtor(*this);
}
inline void SetRateAttitudeQuaternionResponse::SharedDtor(MessageLite& self) {
  SetRateAttitudeQuaternionResponse& this_ = static_cast<SetRateAttitudeQuaternionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateAttitudeQuaternionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAttitudeQuaternionResponse(arena);
}
constexpr auto SetRateAttitudeQuaternionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAttitudeQuaternionResponse),
                                            alignof(SetRateAttitudeQuaternionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAttitudeQuaternionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAttitudeQuaternionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAttitudeQuaternionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAttitudeQuaternionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAttitudeQuaternionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAttitudeQuaternionResponse>(), &SetRateAttitudeQuaternionResponse::ByteSizeLong,
            &SetRateAttitudeQuaternionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionResponse, _impl_._cached_size_),
        false,
    },
    &SetRateAttitudeQuaternionResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAttitudeQuaternionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateAttitudeQuaternionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAttitudeQuaternionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAttitudeQuaternionResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateAttitudeQuaternionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAttitudeQuaternionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAttitudeQuaternionResponse& this_ = static_cast<const SetRateAttitudeQuaternionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAttitudeQuaternionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAttitudeQuaternionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAttitudeQuaternionResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateAttitudeQuaternionResponse& this_ = static_cast<const SetRateAttitudeQuaternionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAttitudeQuaternionResponse::ByteSizeLong() const {
          const SetRateAttitudeQuaternionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAttitudeQuaternionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAttitudeQuaternionResponse*>(&to_msg);
  auto& from = static_cast<const SetRateAttitudeQuaternionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAttitudeQuaternionResponse::CopyFrom(const SetRateAttitudeQuaternionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAttitudeQuaternionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAttitudeQuaternionResponse::InternalSwap(SetRateAttitudeQuaternionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateAttitudeQuaternionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAttitudeAngularVelocityBodyRequest::_Internal {
 public:
};

SetRateAttitudeAngularVelocityBodyRequest::SetRateAttitudeAngularVelocityBodyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
}
SetRateAttitudeAngularVelocityBodyRequest::SetRateAttitudeAngularVelocityBodyRequest(
    ::google::protobuf::Arena* arena, const SetRateAttitudeAngularVelocityBodyRequest& from)
    : SetRateAttitudeAngularVelocityBodyRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeAngularVelocityBodyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAttitudeAngularVelocityBodyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateAttitudeAngularVelocityBodyRequest::~SetRateAttitudeAngularVelocityBodyRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
  SharedDtor(*this);
}
inline void SetRateAttitudeAngularVelocityBodyRequest::SharedDtor(MessageLite& self) {
  SetRateAttitudeAngularVelocityBodyRequest& this_ = static_cast<SetRateAttitudeAngularVelocityBodyRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateAttitudeAngularVelocityBodyRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAttitudeAngularVelocityBodyRequest(arena);
}
constexpr auto SetRateAttitudeAngularVelocityBodyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAttitudeAngularVelocityBodyRequest),
                                            alignof(SetRateAttitudeAngularVelocityBodyRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAttitudeAngularVelocityBodyRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAttitudeAngularVelocityBodyRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAttitudeAngularVelocityBodyRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAttitudeAngularVelocityBodyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAttitudeAngularVelocityBodyRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAttitudeAngularVelocityBodyRequest>(), &SetRateAttitudeAngularVelocityBodyRequest::ByteSizeLong,
            &SetRateAttitudeAngularVelocityBodyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyRequest, _impl_._cached_size_),
        false,
    },
    &SetRateAttitudeAngularVelocityBodyRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAttitudeAngularVelocityBodyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateAttitudeAngularVelocityBodyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateAttitudeAngularVelocityBodyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAttitudeAngularVelocityBodyRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAttitudeAngularVelocityBodyRequest& this_ = static_cast<const SetRateAttitudeAngularVelocityBodyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAttitudeAngularVelocityBodyRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAttitudeAngularVelocityBodyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAttitudeAngularVelocityBodyRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateAttitudeAngularVelocityBodyRequest& this_ = static_cast<const SetRateAttitudeAngularVelocityBodyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAttitudeAngularVelocityBodyRequest::ByteSizeLong() const {
          const SetRateAttitudeAngularVelocityBodyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAttitudeAngularVelocityBodyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAttitudeAngularVelocityBodyRequest*>(&to_msg);
  auto& from = static_cast<const SetRateAttitudeAngularVelocityBodyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAttitudeAngularVelocityBodyRequest::CopyFrom(const SetRateAttitudeAngularVelocityBodyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAttitudeAngularVelocityBodyRequest::InternalSwap(SetRateAttitudeAngularVelocityBodyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateAttitudeAngularVelocityBodyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAttitudeAngularVelocityBodyResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateAttitudeAngularVelocityBodyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyResponse, _impl_._has_bits_);
};

SetRateAttitudeAngularVelocityBodyResponse::SetRateAttitudeAngularVelocityBodyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeAngularVelocityBodyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateAttitudeAngularVelocityBodyResponse::SetRateAttitudeAngularVelocityBodyResponse(
    ::google::protobuf::Arena* arena,
    const SetRateAttitudeAngularVelocityBodyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateAttitudeAngularVelocityBodyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAttitudeAngularVelocityBodyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAttitudeAngularVelocityBodyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateAttitudeAngularVelocityBodyResponse::~SetRateAttitudeAngularVelocityBodyResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
  SharedDtor(*this);
}
inline void SetRateAttitudeAngularVelocityBodyResponse::SharedDtor(MessageLite& self) {
  SetRateAttitudeAngularVelocityBodyResponse& this_ = static_cast<SetRateAttitudeAngularVelocityBodyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateAttitudeAngularVelocityBodyResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAttitudeAngularVelocityBodyResponse(arena);
}
constexpr auto SetRateAttitudeAngularVelocityBodyResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAttitudeAngularVelocityBodyResponse),
                                            alignof(SetRateAttitudeAngularVelocityBodyResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAttitudeAngularVelocityBodyResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAttitudeAngularVelocityBodyResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAttitudeAngularVelocityBodyResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAttitudeAngularVelocityBodyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAttitudeAngularVelocityBodyResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAttitudeAngularVelocityBodyResponse>(), &SetRateAttitudeAngularVelocityBodyResponse::ByteSizeLong,
            &SetRateAttitudeAngularVelocityBodyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyResponse, _impl_._cached_size_),
        false,
    },
    &SetRateAttitudeAngularVelocityBodyResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAttitudeAngularVelocityBodyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateAttitudeAngularVelocityBodyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAttitudeAngularVelocityBodyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAttitudeAngularVelocityBodyResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateAttitudeAngularVelocityBodyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAttitudeAngularVelocityBodyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAttitudeAngularVelocityBodyResponse& this_ = static_cast<const SetRateAttitudeAngularVelocityBodyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAttitudeAngularVelocityBodyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAttitudeAngularVelocityBodyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAttitudeAngularVelocityBodyResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateAttitudeAngularVelocityBodyResponse& this_ = static_cast<const SetRateAttitudeAngularVelocityBodyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAttitudeAngularVelocityBodyResponse::ByteSizeLong() const {
          const SetRateAttitudeAngularVelocityBodyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAttitudeAngularVelocityBodyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAttitudeAngularVelocityBodyResponse*>(&to_msg);
  auto& from = static_cast<const SetRateAttitudeAngularVelocityBodyResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAttitudeAngularVelocityBodyResponse::CopyFrom(const SetRateAttitudeAngularVelocityBodyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAttitudeAngularVelocityBodyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAttitudeAngularVelocityBodyResponse::InternalSwap(SetRateAttitudeAngularVelocityBodyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateAttitudeAngularVelocityBodyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateVelocityNedRequest::_Internal {
 public:
};

SetRateVelocityNedRequest::SetRateVelocityNedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
}
SetRateVelocityNedRequest::SetRateVelocityNedRequest(
    ::google::protobuf::Arena* arena, const SetRateVelocityNedRequest& from)
    : SetRateVelocityNedRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateVelocityNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateVelocityNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateVelocityNedRequest::~SetRateVelocityNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
  SharedDtor(*this);
}
inline void SetRateVelocityNedRequest::SharedDtor(MessageLite& self) {
  SetRateVelocityNedRequest& this_ = static_cast<SetRateVelocityNedRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateVelocityNedRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateVelocityNedRequest(arena);
}
constexpr auto SetRateVelocityNedRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateVelocityNedRequest),
                                            alignof(SetRateVelocityNedRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateVelocityNedRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateVelocityNedRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateVelocityNedRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateVelocityNedRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateVelocityNedRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateVelocityNedRequest>(), &SetRateVelocityNedRequest::ByteSizeLong,
            &SetRateVelocityNedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateVelocityNedRequest, _impl_._cached_size_),
        false,
    },
    &SetRateVelocityNedRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateVelocityNedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateVelocityNedRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateVelocityNedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateVelocityNedRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateVelocityNedRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateVelocityNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateVelocityNedRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateVelocityNedRequest& this_ = static_cast<const SetRateVelocityNedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateVelocityNedRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateVelocityNedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateVelocityNedRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateVelocityNedRequest& this_ = static_cast<const SetRateVelocityNedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateVelocityNedRequest::ByteSizeLong() const {
          const SetRateVelocityNedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateVelocityNedRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateVelocityNedRequest*>(&to_msg);
  auto& from = static_cast<const SetRateVelocityNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateVelocityNedRequest::CopyFrom(const SetRateVelocityNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateVelocityNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateVelocityNedRequest::InternalSwap(SetRateVelocityNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateVelocityNedRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateVelocityNedResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateVelocityNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateVelocityNedResponse, _impl_._has_bits_);
};

SetRateVelocityNedResponse::SetRateVelocityNedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateVelocityNedResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateVelocityNedResponse::SetRateVelocityNedResponse(
    ::google::protobuf::Arena* arena,
    const SetRateVelocityNedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateVelocityNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateVelocityNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateVelocityNedResponse::~SetRateVelocityNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
  SharedDtor(*this);
}
inline void SetRateVelocityNedResponse::SharedDtor(MessageLite& self) {
  SetRateVelocityNedResponse& this_ = static_cast<SetRateVelocityNedResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateVelocityNedResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateVelocityNedResponse(arena);
}
constexpr auto SetRateVelocityNedResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateVelocityNedResponse),
                                            alignof(SetRateVelocityNedResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateVelocityNedResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateVelocityNedResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateVelocityNedResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateVelocityNedResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateVelocityNedResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateVelocityNedResponse>(), &SetRateVelocityNedResponse::ByteSizeLong,
            &SetRateVelocityNedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateVelocityNedResponse, _impl_._cached_size_),
        false,
    },
    &SetRateVelocityNedResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateVelocityNedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateVelocityNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateVelocityNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateVelocityNedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateVelocityNedResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateVelocityNedResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateVelocityNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateVelocityNedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateVelocityNedResponse& this_ = static_cast<const SetRateVelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateVelocityNedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateVelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateVelocityNedResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateVelocityNedResponse& this_ = static_cast<const SetRateVelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateVelocityNedResponse::ByteSizeLong() const {
          const SetRateVelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateVelocityNedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateVelocityNedResponse*>(&to_msg);
  auto& from = static_cast<const SetRateVelocityNedResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateVelocityNedResponse::CopyFrom(const SetRateVelocityNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateVelocityNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateVelocityNedResponse::InternalSwap(SetRateVelocityNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateVelocityNedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateGpsInfoRequest::_Internal {
 public:
};

SetRateGpsInfoRequest::SetRateGpsInfoRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
}
SetRateGpsInfoRequest::SetRateGpsInfoRequest(
    ::google::protobuf::Arena* arena, const SetRateGpsInfoRequest& from)
    : SetRateGpsInfoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateGpsInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateGpsInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateGpsInfoRequest::~SetRateGpsInfoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
  SharedDtor(*this);
}
inline void SetRateGpsInfoRequest::SharedDtor(MessageLite& self) {
  SetRateGpsInfoRequest& this_ = static_cast<SetRateGpsInfoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateGpsInfoRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateGpsInfoRequest(arena);
}
constexpr auto SetRateGpsInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateGpsInfoRequest),
                                            alignof(SetRateGpsInfoRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateGpsInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateGpsInfoRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateGpsInfoRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateGpsInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateGpsInfoRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateGpsInfoRequest>(), &SetRateGpsInfoRequest::ByteSizeLong,
            &SetRateGpsInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateGpsInfoRequest, _impl_._cached_size_),
        false,
    },
    &SetRateGpsInfoRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateGpsInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateGpsInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateGpsInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateGpsInfoRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateGpsInfoRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateGpsInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateGpsInfoRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateGpsInfoRequest& this_ = static_cast<const SetRateGpsInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateGpsInfoRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateGpsInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateGpsInfoRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateGpsInfoRequest& this_ = static_cast<const SetRateGpsInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateGpsInfoRequest::ByteSizeLong() const {
          const SetRateGpsInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateGpsInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateGpsInfoRequest*>(&to_msg);
  auto& from = static_cast<const SetRateGpsInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateGpsInfoRequest::CopyFrom(const SetRateGpsInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateGpsInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateGpsInfoRequest::InternalSwap(SetRateGpsInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateGpsInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateGpsInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateGpsInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateGpsInfoResponse, _impl_._has_bits_);
};

SetRateGpsInfoResponse::SetRateGpsInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateGpsInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateGpsInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateGpsInfoResponse::SetRateGpsInfoResponse(
    ::google::protobuf::Arena* arena,
    const SetRateGpsInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateGpsInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateGpsInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateGpsInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateGpsInfoResponse::~SetRateGpsInfoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
  SharedDtor(*this);
}
inline void SetRateGpsInfoResponse::SharedDtor(MessageLite& self) {
  SetRateGpsInfoResponse& this_ = static_cast<SetRateGpsInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateGpsInfoResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateGpsInfoResponse(arena);
}
constexpr auto SetRateGpsInfoResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateGpsInfoResponse),
                                            alignof(SetRateGpsInfoResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateGpsInfoResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateGpsInfoResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateGpsInfoResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateGpsInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateGpsInfoResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateGpsInfoResponse>(), &SetRateGpsInfoResponse::ByteSizeLong,
            &SetRateGpsInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateGpsInfoResponse, _impl_._cached_size_),
        false,
    },
    &SetRateGpsInfoResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateGpsInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateGpsInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateGpsInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateGpsInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateGpsInfoResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateGpsInfoResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateGpsInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateGpsInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateGpsInfoResponse& this_ = static_cast<const SetRateGpsInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateGpsInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateGpsInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateGpsInfoResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateGpsInfoResponse& this_ = static_cast<const SetRateGpsInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateGpsInfoResponse::ByteSizeLong() const {
          const SetRateGpsInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateGpsInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateGpsInfoResponse*>(&to_msg);
  auto& from = static_cast<const SetRateGpsInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateGpsInfoResponse::CopyFrom(const SetRateGpsInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateGpsInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateGpsInfoResponse::InternalSwap(SetRateGpsInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateGpsInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateRawGpsRequest::_Internal {
 public:
};

SetRateRawGpsRequest::SetRateRawGpsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
}
SetRateRawGpsRequest::SetRateRawGpsRequest(
    ::google::protobuf::Arena* arena, const SetRateRawGpsRequest& from)
    : SetRateRawGpsRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateRawGpsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateRawGpsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateRawGpsRequest::~SetRateRawGpsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
  SharedDtor(*this);
}
inline void SetRateRawGpsRequest::SharedDtor(MessageLite& self) {
  SetRateRawGpsRequest& this_ = static_cast<SetRateRawGpsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateRawGpsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateRawGpsRequest(arena);
}
constexpr auto SetRateRawGpsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateRawGpsRequest),
                                            alignof(SetRateRawGpsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateRawGpsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateRawGpsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateRawGpsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateRawGpsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateRawGpsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateRawGpsRequest>(), &SetRateRawGpsRequest::ByteSizeLong,
            &SetRateRawGpsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateRawGpsRequest, _impl_._cached_size_),
        false,
    },
    &SetRateRawGpsRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateRawGpsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateRawGpsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateRawGpsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateRawGpsRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateRawGpsRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateRawGpsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateRawGpsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateRawGpsRequest& this_ = static_cast<const SetRateRawGpsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateRawGpsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateRawGpsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateRawGpsRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateRawGpsRequest& this_ = static_cast<const SetRateRawGpsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateRawGpsRequest::ByteSizeLong() const {
          const SetRateRawGpsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateRawGpsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateRawGpsRequest*>(&to_msg);
  auto& from = static_cast<const SetRateRawGpsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateRawGpsRequest::CopyFrom(const SetRateRawGpsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateRawGpsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateRawGpsRequest::InternalSwap(SetRateRawGpsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateRawGpsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateBatteryRequest::_Internal {
 public:
};

SetRateBatteryRequest::SetRateBatteryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateBatteryRequest)
}
SetRateBatteryRequest::SetRateBatteryRequest(
    ::google::protobuf::Arena* arena, const SetRateBatteryRequest& from)
    : SetRateBatteryRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateBatteryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateBatteryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateBatteryRequest::~SetRateBatteryRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateBatteryRequest)
  SharedDtor(*this);
}
inline void SetRateBatteryRequest::SharedDtor(MessageLite& self) {
  SetRateBatteryRequest& this_ = static_cast<SetRateBatteryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateBatteryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateBatteryRequest(arena);
}
constexpr auto SetRateBatteryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateBatteryRequest),
                                            alignof(SetRateBatteryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateBatteryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateBatteryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateBatteryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateBatteryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateBatteryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateBatteryRequest>(), &SetRateBatteryRequest::ByteSizeLong,
            &SetRateBatteryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateBatteryRequest, _impl_._cached_size_),
        false,
    },
    &SetRateBatteryRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateBatteryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateBatteryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateBatteryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateBatteryRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateBatteryRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateBatteryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateBatteryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateBatteryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateBatteryRequest& this_ = static_cast<const SetRateBatteryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateBatteryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateBatteryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateBatteryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateBatteryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateBatteryRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateBatteryRequest& this_ = static_cast<const SetRateBatteryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateBatteryRequest::ByteSizeLong() const {
          const SetRateBatteryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateBatteryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateBatteryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateBatteryRequest*>(&to_msg);
  auto& from = static_cast<const SetRateBatteryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateBatteryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateBatteryRequest::CopyFrom(const SetRateBatteryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateBatteryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateBatteryRequest::InternalSwap(SetRateBatteryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateBatteryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateBatteryResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateBatteryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateBatteryResponse, _impl_._has_bits_);
};

SetRateBatteryResponse::SetRateBatteryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateBatteryResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateBatteryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateBatteryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateBatteryResponse::SetRateBatteryResponse(
    ::google::protobuf::Arena* arena,
    const SetRateBatteryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateBatteryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateBatteryResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateBatteryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateBatteryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateBatteryResponse::~SetRateBatteryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateBatteryResponse)
  SharedDtor(*this);
}
inline void SetRateBatteryResponse::SharedDtor(MessageLite& self) {
  SetRateBatteryResponse& this_ = static_cast<SetRateBatteryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateBatteryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateBatteryResponse(arena);
}
constexpr auto SetRateBatteryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateBatteryResponse),
                                            alignof(SetRateBatteryResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateBatteryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateBatteryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateBatteryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateBatteryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateBatteryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateBatteryResponse>(), &SetRateBatteryResponse::ByteSizeLong,
            &SetRateBatteryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateBatteryResponse, _impl_._cached_size_),
        false,
    },
    &SetRateBatteryResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateBatteryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateBatteryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateBatteryResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateBatteryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateBatteryResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateBatteryResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateBatteryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateBatteryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateBatteryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateBatteryResponse& this_ = static_cast<const SetRateBatteryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateBatteryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateBatteryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateBatteryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateBatteryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateBatteryResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateBatteryResponse& this_ = static_cast<const SetRateBatteryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateBatteryResponse::ByteSizeLong() const {
          const SetRateBatteryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateBatteryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateBatteryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateBatteryResponse*>(&to_msg);
  auto& from = static_cast<const SetRateBatteryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateBatteryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateBatteryResponse::CopyFrom(const SetRateBatteryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateBatteryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateBatteryResponse::InternalSwap(SetRateBatteryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateBatteryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateRcStatusRequest::_Internal {
 public:
};

SetRateRcStatusRequest::SetRateRcStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
}
SetRateRcStatusRequest::SetRateRcStatusRequest(
    ::google::protobuf::Arena* arena, const SetRateRcStatusRequest& from)
    : SetRateRcStatusRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateRcStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateRcStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateRcStatusRequest::~SetRateRcStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
  SharedDtor(*this);
}
inline void SetRateRcStatusRequest::SharedDtor(MessageLite& self) {
  SetRateRcStatusRequest& this_ = static_cast<SetRateRcStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateRcStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateRcStatusRequest(arena);
}
constexpr auto SetRateRcStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateRcStatusRequest),
                                            alignof(SetRateRcStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateRcStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateRcStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateRcStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateRcStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateRcStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateRcStatusRequest>(), &SetRateRcStatusRequest::ByteSizeLong,
            &SetRateRcStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateRcStatusRequest, _impl_._cached_size_),
        false,
    },
    &SetRateRcStatusRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateRcStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateRcStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateRcStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateRcStatusRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateRcStatusRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateRcStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateRcStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateRcStatusRequest& this_ = static_cast<const SetRateRcStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateRcStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateRcStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateRcStatusRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateRcStatusRequest& this_ = static_cast<const SetRateRcStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateRcStatusRequest::ByteSizeLong() const {
          const SetRateRcStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateRcStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateRcStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetRateRcStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateRcStatusRequest::CopyFrom(const SetRateRcStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateRcStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateRcStatusRequest::InternalSwap(SetRateRcStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateRcStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateRcStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateRcStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateRcStatusResponse, _impl_._has_bits_);
};

SetRateRcStatusResponse::SetRateRcStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateRcStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateRcStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateRcStatusResponse::SetRateRcStatusResponse(
    ::google::protobuf::Arena* arena,
    const SetRateRcStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateRcStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateRcStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateRcStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateRcStatusResponse::~SetRateRcStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
  SharedDtor(*this);
}
inline void SetRateRcStatusResponse::SharedDtor(MessageLite& self) {
  SetRateRcStatusResponse& this_ = static_cast<SetRateRcStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateRcStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateRcStatusResponse(arena);
}
constexpr auto SetRateRcStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateRcStatusResponse),
                                            alignof(SetRateRcStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateRcStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateRcStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateRcStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateRcStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateRcStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateRcStatusResponse>(), &SetRateRcStatusResponse::ByteSizeLong,
            &SetRateRcStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateRcStatusResponse, _impl_._cached_size_),
        false,
    },
    &SetRateRcStatusResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateRcStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateRcStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateRcStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateRcStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateRcStatusResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateRcStatusResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateRcStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateRcStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateRcStatusResponse& this_ = static_cast<const SetRateRcStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateRcStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateRcStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateRcStatusResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateRcStatusResponse& this_ = static_cast<const SetRateRcStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateRcStatusResponse::ByteSizeLong() const {
          const SetRateRcStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateRcStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateRcStatusResponse*>(&to_msg);
  auto& from = static_cast<const SetRateRcStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateRcStatusResponse::CopyFrom(const SetRateRcStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateRcStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateRcStatusResponse::InternalSwap(SetRateRcStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateRcStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateActuatorControlTargetRequest::_Internal {
 public:
};

SetRateActuatorControlTargetRequest::SetRateActuatorControlTargetRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
}
SetRateActuatorControlTargetRequest::SetRateActuatorControlTargetRequest(
    ::google::protobuf::Arena* arena, const SetRateActuatorControlTargetRequest& from)
    : SetRateActuatorControlTargetRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateActuatorControlTargetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateActuatorControlTargetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateActuatorControlTargetRequest::~SetRateActuatorControlTargetRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
  SharedDtor(*this);
}
inline void SetRateActuatorControlTargetRequest::SharedDtor(MessageLite& self) {
  SetRateActuatorControlTargetRequest& this_ = static_cast<SetRateActuatorControlTargetRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateActuatorControlTargetRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateActuatorControlTargetRequest(arena);
}
constexpr auto SetRateActuatorControlTargetRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateActuatorControlTargetRequest),
                                            alignof(SetRateActuatorControlTargetRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateActuatorControlTargetRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateActuatorControlTargetRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateActuatorControlTargetRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateActuatorControlTargetRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateActuatorControlTargetRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateActuatorControlTargetRequest>(), &SetRateActuatorControlTargetRequest::ByteSizeLong,
            &SetRateActuatorControlTargetRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetRequest, _impl_._cached_size_),
        false,
    },
    &SetRateActuatorControlTargetRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateActuatorControlTargetRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateActuatorControlTargetRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateActuatorControlTargetRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateActuatorControlTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateActuatorControlTargetRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateActuatorControlTargetRequest& this_ = static_cast<const SetRateActuatorControlTargetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateActuatorControlTargetRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateActuatorControlTargetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateActuatorControlTargetRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateActuatorControlTargetRequest& this_ = static_cast<const SetRateActuatorControlTargetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateActuatorControlTargetRequest::ByteSizeLong() const {
          const SetRateActuatorControlTargetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateActuatorControlTargetRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateActuatorControlTargetRequest*>(&to_msg);
  auto& from = static_cast<const SetRateActuatorControlTargetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateActuatorControlTargetRequest::CopyFrom(const SetRateActuatorControlTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateActuatorControlTargetRequest::InternalSwap(SetRateActuatorControlTargetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateActuatorControlTargetRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateActuatorControlTargetResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateActuatorControlTargetResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetResponse, _impl_._has_bits_);
};

SetRateActuatorControlTargetResponse::SetRateActuatorControlTargetResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateActuatorControlTargetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateActuatorControlTargetResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateActuatorControlTargetResponse::SetRateActuatorControlTargetResponse(
    ::google::protobuf::Arena* arena,
    const SetRateActuatorControlTargetResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateActuatorControlTargetResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateActuatorControlTargetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateActuatorControlTargetResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateActuatorControlTargetResponse::~SetRateActuatorControlTargetResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
  SharedDtor(*this);
}
inline void SetRateActuatorControlTargetResponse::SharedDtor(MessageLite& self) {
  SetRateActuatorControlTargetResponse& this_ = static_cast<SetRateActuatorControlTargetResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateActuatorControlTargetResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateActuatorControlTargetResponse(arena);
}
constexpr auto SetRateActuatorControlTargetResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateActuatorControlTargetResponse),
                                            alignof(SetRateActuatorControlTargetResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateActuatorControlTargetResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateActuatorControlTargetResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateActuatorControlTargetResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateActuatorControlTargetResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateActuatorControlTargetResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateActuatorControlTargetResponse>(), &SetRateActuatorControlTargetResponse::ByteSizeLong,
            &SetRateActuatorControlTargetResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetResponse, _impl_._cached_size_),
        false,
    },
    &SetRateActuatorControlTargetResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateActuatorControlTargetResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateActuatorControlTargetResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateActuatorControlTargetResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateActuatorControlTargetResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateActuatorControlTargetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateActuatorControlTargetResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateActuatorControlTargetResponse& this_ = static_cast<const SetRateActuatorControlTargetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateActuatorControlTargetResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateActuatorControlTargetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateActuatorControlTargetResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateActuatorControlTargetResponse& this_ = static_cast<const SetRateActuatorControlTargetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateActuatorControlTargetResponse::ByteSizeLong() const {
          const SetRateActuatorControlTargetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateActuatorControlTargetResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateActuatorControlTargetResponse*>(&to_msg);
  auto& from = static_cast<const SetRateActuatorControlTargetResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateActuatorControlTargetResponse::CopyFrom(const SetRateActuatorControlTargetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateActuatorControlTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateActuatorControlTargetResponse::InternalSwap(SetRateActuatorControlTargetResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateActuatorControlTargetResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateActuatorOutputStatusRequest::_Internal {
 public:
};

SetRateActuatorOutputStatusRequest::SetRateActuatorOutputStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
}
SetRateActuatorOutputStatusRequest::SetRateActuatorOutputStatusRequest(
    ::google::protobuf::Arena* arena, const SetRateActuatorOutputStatusRequest& from)
    : SetRateActuatorOutputStatusRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateActuatorOutputStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateActuatorOutputStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateActuatorOutputStatusRequest::~SetRateActuatorOutputStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
  SharedDtor(*this);
}
inline void SetRateActuatorOutputStatusRequest::SharedDtor(MessageLite& self) {
  SetRateActuatorOutputStatusRequest& this_ = static_cast<SetRateActuatorOutputStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateActuatorOutputStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateActuatorOutputStatusRequest(arena);
}
constexpr auto SetRateActuatorOutputStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateActuatorOutputStatusRequest),
                                            alignof(SetRateActuatorOutputStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateActuatorOutputStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateActuatorOutputStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateActuatorOutputStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateActuatorOutputStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateActuatorOutputStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateActuatorOutputStatusRequest>(), &SetRateActuatorOutputStatusRequest::ByteSizeLong,
            &SetRateActuatorOutputStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusRequest, _impl_._cached_size_),
        false,
    },
    &SetRateActuatorOutputStatusRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateActuatorOutputStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateActuatorOutputStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateActuatorOutputStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateActuatorOutputStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateActuatorOutputStatusRequest& this_ = static_cast<const SetRateActuatorOutputStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateActuatorOutputStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateActuatorOutputStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateActuatorOutputStatusRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateActuatorOutputStatusRequest& this_ = static_cast<const SetRateActuatorOutputStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateActuatorOutputStatusRequest::ByteSizeLong() const {
          const SetRateActuatorOutputStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateActuatorOutputStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateActuatorOutputStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetRateActuatorOutputStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateActuatorOutputStatusRequest::CopyFrom(const SetRateActuatorOutputStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateActuatorOutputStatusRequest::InternalSwap(SetRateActuatorOutputStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateActuatorOutputStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateActuatorOutputStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateActuatorOutputStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusResponse, _impl_._has_bits_);
};

SetRateActuatorOutputStatusResponse::SetRateActuatorOutputStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateActuatorOutputStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateActuatorOutputStatusResponse::SetRateActuatorOutputStatusResponse(
    ::google::protobuf::Arena* arena,
    const SetRateActuatorOutputStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateActuatorOutputStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateActuatorOutputStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateActuatorOutputStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateActuatorOutputStatusResponse::~SetRateActuatorOutputStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
  SharedDtor(*this);
}
inline void SetRateActuatorOutputStatusResponse::SharedDtor(MessageLite& self) {
  SetRateActuatorOutputStatusResponse& this_ = static_cast<SetRateActuatorOutputStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateActuatorOutputStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateActuatorOutputStatusResponse(arena);
}
constexpr auto SetRateActuatorOutputStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateActuatorOutputStatusResponse),
                                            alignof(SetRateActuatorOutputStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateActuatorOutputStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateActuatorOutputStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateActuatorOutputStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateActuatorOutputStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateActuatorOutputStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateActuatorOutputStatusResponse>(), &SetRateActuatorOutputStatusResponse::ByteSizeLong,
            &SetRateActuatorOutputStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusResponse, _impl_._cached_size_),
        false,
    },
    &SetRateActuatorOutputStatusResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateActuatorOutputStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateActuatorOutputStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateActuatorOutputStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateActuatorOutputStatusResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateActuatorOutputStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateActuatorOutputStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateActuatorOutputStatusResponse& this_ = static_cast<const SetRateActuatorOutputStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateActuatorOutputStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateActuatorOutputStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateActuatorOutputStatusResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateActuatorOutputStatusResponse& this_ = static_cast<const SetRateActuatorOutputStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateActuatorOutputStatusResponse::ByteSizeLong() const {
          const SetRateActuatorOutputStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateActuatorOutputStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateActuatorOutputStatusResponse*>(&to_msg);
  auto& from = static_cast<const SetRateActuatorOutputStatusResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateActuatorOutputStatusResponse::CopyFrom(const SetRateActuatorOutputStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateActuatorOutputStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateActuatorOutputStatusResponse::InternalSwap(SetRateActuatorOutputStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateActuatorOutputStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateOdometryRequest::_Internal {
 public:
};

SetRateOdometryRequest::SetRateOdometryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateOdometryRequest)
}
SetRateOdometryRequest::SetRateOdometryRequest(
    ::google::protobuf::Arena* arena, const SetRateOdometryRequest& from)
    : SetRateOdometryRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateOdometryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateOdometryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateOdometryRequest::~SetRateOdometryRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateOdometryRequest)
  SharedDtor(*this);
}
inline void SetRateOdometryRequest::SharedDtor(MessageLite& self) {
  SetRateOdometryRequest& this_ = static_cast<SetRateOdometryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateOdometryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateOdometryRequest(arena);
}
constexpr auto SetRateOdometryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateOdometryRequest),
                                            alignof(SetRateOdometryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateOdometryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateOdometryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateOdometryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateOdometryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateOdometryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateOdometryRequest>(), &SetRateOdometryRequest::ByteSizeLong,
            &SetRateOdometryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateOdometryRequest, _impl_._cached_size_),
        false,
    },
    &SetRateOdometryRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateOdometryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateOdometryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateOdometryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateOdometryRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateOdometryRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateOdometryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateOdometryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateOdometryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateOdometryRequest& this_ = static_cast<const SetRateOdometryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateOdometryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateOdometryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateOdometryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateOdometryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateOdometryRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateOdometryRequest& this_ = static_cast<const SetRateOdometryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateOdometryRequest::ByteSizeLong() const {
          const SetRateOdometryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateOdometryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateOdometryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateOdometryRequest*>(&to_msg);
  auto& from = static_cast<const SetRateOdometryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateOdometryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateOdometryRequest::CopyFrom(const SetRateOdometryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateOdometryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateOdometryRequest::InternalSwap(SetRateOdometryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateOdometryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateOdometryResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateOdometryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateOdometryResponse, _impl_._has_bits_);
};

SetRateOdometryResponse::SetRateOdometryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateOdometryResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateOdometryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateOdometryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateOdometryResponse::SetRateOdometryResponse(
    ::google::protobuf::Arena* arena,
    const SetRateOdometryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateOdometryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateOdometryResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateOdometryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateOdometryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateOdometryResponse::~SetRateOdometryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateOdometryResponse)
  SharedDtor(*this);
}
inline void SetRateOdometryResponse::SharedDtor(MessageLite& self) {
  SetRateOdometryResponse& this_ = static_cast<SetRateOdometryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateOdometryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateOdometryResponse(arena);
}
constexpr auto SetRateOdometryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateOdometryResponse),
                                            alignof(SetRateOdometryResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateOdometryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateOdometryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateOdometryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateOdometryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateOdometryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateOdometryResponse>(), &SetRateOdometryResponse::ByteSizeLong,
            &SetRateOdometryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateOdometryResponse, _impl_._cached_size_),
        false,
    },
    &SetRateOdometryResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateOdometryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateOdometryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateOdometryResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateOdometryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateOdometryResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateOdometryResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateOdometryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateOdometryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateOdometryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateOdometryResponse& this_ = static_cast<const SetRateOdometryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateOdometryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateOdometryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateOdometryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateOdometryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateOdometryResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateOdometryResponse& this_ = static_cast<const SetRateOdometryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateOdometryResponse::ByteSizeLong() const {
          const SetRateOdometryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateOdometryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateOdometryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateOdometryResponse*>(&to_msg);
  auto& from = static_cast<const SetRateOdometryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateOdometryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateOdometryResponse::CopyFrom(const SetRateOdometryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateOdometryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateOdometryResponse::InternalSwap(SetRateOdometryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateOdometryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRatePositionVelocityNedRequest::_Internal {
 public:
};

SetRatePositionVelocityNedRequest::SetRatePositionVelocityNedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
}
SetRatePositionVelocityNedRequest::SetRatePositionVelocityNedRequest(
    ::google::protobuf::Arena* arena, const SetRatePositionVelocityNedRequest& from)
    : SetRatePositionVelocityNedRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRatePositionVelocityNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRatePositionVelocityNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRatePositionVelocityNedRequest::~SetRatePositionVelocityNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
  SharedDtor(*this);
}
inline void SetRatePositionVelocityNedRequest::SharedDtor(MessageLite& self) {
  SetRatePositionVelocityNedRequest& this_ = static_cast<SetRatePositionVelocityNedRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRatePositionVelocityNedRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRatePositionVelocityNedRequest(arena);
}
constexpr auto SetRatePositionVelocityNedRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRatePositionVelocityNedRequest),
                                            alignof(SetRatePositionVelocityNedRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRatePositionVelocityNedRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRatePositionVelocityNedRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRatePositionVelocityNedRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRatePositionVelocityNedRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRatePositionVelocityNedRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRatePositionVelocityNedRequest>(), &SetRatePositionVelocityNedRequest::ByteSizeLong,
            &SetRatePositionVelocityNedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedRequest, _impl_._cached_size_),
        false,
    },
    &SetRatePositionVelocityNedRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRatePositionVelocityNedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRatePositionVelocityNedRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRatePositionVelocityNedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRatePositionVelocityNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRatePositionVelocityNedRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRatePositionVelocityNedRequest& this_ = static_cast<const SetRatePositionVelocityNedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRatePositionVelocityNedRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRatePositionVelocityNedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRatePositionVelocityNedRequest::ByteSizeLong(const MessageLite& base) {
          const SetRatePositionVelocityNedRequest& this_ = static_cast<const SetRatePositionVelocityNedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRatePositionVelocityNedRequest::ByteSizeLong() const {
          const SetRatePositionVelocityNedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRatePositionVelocityNedRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRatePositionVelocityNedRequest*>(&to_msg);
  auto& from = static_cast<const SetRatePositionVelocityNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRatePositionVelocityNedRequest::CopyFrom(const SetRatePositionVelocityNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRatePositionVelocityNedRequest::InternalSwap(SetRatePositionVelocityNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRatePositionVelocityNedRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRatePositionVelocityNedResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRatePositionVelocityNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedResponse, _impl_._has_bits_);
};

SetRatePositionVelocityNedResponse::SetRatePositionVelocityNedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRatePositionVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRatePositionVelocityNedResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRatePositionVelocityNedResponse::SetRatePositionVelocityNedResponse(
    ::google::protobuf::Arena* arena,
    const SetRatePositionVelocityNedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRatePositionVelocityNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRatePositionVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRatePositionVelocityNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRatePositionVelocityNedResponse::~SetRatePositionVelocityNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
  SharedDtor(*this);
}
inline void SetRatePositionVelocityNedResponse::SharedDtor(MessageLite& self) {
  SetRatePositionVelocityNedResponse& this_ = static_cast<SetRatePositionVelocityNedResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRatePositionVelocityNedResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRatePositionVelocityNedResponse(arena);
}
constexpr auto SetRatePositionVelocityNedResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRatePositionVelocityNedResponse),
                                            alignof(SetRatePositionVelocityNedResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRatePositionVelocityNedResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRatePositionVelocityNedResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRatePositionVelocityNedResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRatePositionVelocityNedResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRatePositionVelocityNedResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRatePositionVelocityNedResponse>(), &SetRatePositionVelocityNedResponse::ByteSizeLong,
            &SetRatePositionVelocityNedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedResponse, _impl_._cached_size_),
        false,
    },
    &SetRatePositionVelocityNedResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRatePositionVelocityNedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRatePositionVelocityNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRatePositionVelocityNedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRatePositionVelocityNedResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRatePositionVelocityNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRatePositionVelocityNedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRatePositionVelocityNedResponse& this_ = static_cast<const SetRatePositionVelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRatePositionVelocityNedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRatePositionVelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRatePositionVelocityNedResponse::ByteSizeLong(const MessageLite& base) {
          const SetRatePositionVelocityNedResponse& this_ = static_cast<const SetRatePositionVelocityNedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRatePositionVelocityNedResponse::ByteSizeLong() const {
          const SetRatePositionVelocityNedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRatePositionVelocityNedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRatePositionVelocityNedResponse*>(&to_msg);
  auto& from = static_cast<const SetRatePositionVelocityNedResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRatePositionVelocityNedResponse::CopyFrom(const SetRatePositionVelocityNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRatePositionVelocityNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRatePositionVelocityNedResponse::InternalSwap(SetRatePositionVelocityNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRatePositionVelocityNedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateGroundTruthRequest::_Internal {
 public:
};

SetRateGroundTruthRequest::SetRateGroundTruthRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
}
SetRateGroundTruthRequest::SetRateGroundTruthRequest(
    ::google::protobuf::Arena* arena, const SetRateGroundTruthRequest& from)
    : SetRateGroundTruthRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateGroundTruthRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateGroundTruthRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateGroundTruthRequest::~SetRateGroundTruthRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
  SharedDtor(*this);
}
inline void SetRateGroundTruthRequest::SharedDtor(MessageLite& self) {
  SetRateGroundTruthRequest& this_ = static_cast<SetRateGroundTruthRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateGroundTruthRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateGroundTruthRequest(arena);
}
constexpr auto SetRateGroundTruthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateGroundTruthRequest),
                                            alignof(SetRateGroundTruthRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateGroundTruthRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateGroundTruthRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateGroundTruthRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateGroundTruthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateGroundTruthRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateGroundTruthRequest>(), &SetRateGroundTruthRequest::ByteSizeLong,
            &SetRateGroundTruthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateGroundTruthRequest, _impl_._cached_size_),
        false,
    },
    &SetRateGroundTruthRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateGroundTruthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateGroundTruthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateGroundTruthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateGroundTruthRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateGroundTruthRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateGroundTruthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateGroundTruthRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateGroundTruthRequest& this_ = static_cast<const SetRateGroundTruthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateGroundTruthRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateGroundTruthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateGroundTruthRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateGroundTruthRequest& this_ = static_cast<const SetRateGroundTruthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateGroundTruthRequest::ByteSizeLong() const {
          const SetRateGroundTruthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateGroundTruthRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateGroundTruthRequest*>(&to_msg);
  auto& from = static_cast<const SetRateGroundTruthRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateGroundTruthRequest::CopyFrom(const SetRateGroundTruthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateGroundTruthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateGroundTruthRequest::InternalSwap(SetRateGroundTruthRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateGroundTruthRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateGroundTruthResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateGroundTruthResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateGroundTruthResponse, _impl_._has_bits_);
};

SetRateGroundTruthResponse::SetRateGroundTruthResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateGroundTruthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateGroundTruthResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateGroundTruthResponse::SetRateGroundTruthResponse(
    ::google::protobuf::Arena* arena,
    const SetRateGroundTruthResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateGroundTruthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateGroundTruthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateGroundTruthResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateGroundTruthResponse::~SetRateGroundTruthResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
  SharedDtor(*this);
}
inline void SetRateGroundTruthResponse::SharedDtor(MessageLite& self) {
  SetRateGroundTruthResponse& this_ = static_cast<SetRateGroundTruthResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateGroundTruthResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateGroundTruthResponse(arena);
}
constexpr auto SetRateGroundTruthResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateGroundTruthResponse),
                                            alignof(SetRateGroundTruthResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateGroundTruthResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateGroundTruthResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateGroundTruthResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateGroundTruthResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateGroundTruthResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateGroundTruthResponse>(), &SetRateGroundTruthResponse::ByteSizeLong,
            &SetRateGroundTruthResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateGroundTruthResponse, _impl_._cached_size_),
        false,
    },
    &SetRateGroundTruthResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateGroundTruthResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateGroundTruthResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateGroundTruthResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateGroundTruthResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateGroundTruthResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateGroundTruthResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateGroundTruthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateGroundTruthResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateGroundTruthResponse& this_ = static_cast<const SetRateGroundTruthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateGroundTruthResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateGroundTruthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateGroundTruthResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateGroundTruthResponse& this_ = static_cast<const SetRateGroundTruthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateGroundTruthResponse::ByteSizeLong() const {
          const SetRateGroundTruthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateGroundTruthResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateGroundTruthResponse*>(&to_msg);
  auto& from = static_cast<const SetRateGroundTruthResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateGroundTruthResponse::CopyFrom(const SetRateGroundTruthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateGroundTruthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateGroundTruthResponse::InternalSwap(SetRateGroundTruthResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateGroundTruthResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateFixedwingMetricsRequest::_Internal {
 public:
};

SetRateFixedwingMetricsRequest::SetRateFixedwingMetricsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
}
SetRateFixedwingMetricsRequest::SetRateFixedwingMetricsRequest(
    ::google::protobuf::Arena* arena, const SetRateFixedwingMetricsRequest& from)
    : SetRateFixedwingMetricsRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateFixedwingMetricsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateFixedwingMetricsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateFixedwingMetricsRequest::~SetRateFixedwingMetricsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
  SharedDtor(*this);
}
inline void SetRateFixedwingMetricsRequest::SharedDtor(MessageLite& self) {
  SetRateFixedwingMetricsRequest& this_ = static_cast<SetRateFixedwingMetricsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateFixedwingMetricsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateFixedwingMetricsRequest(arena);
}
constexpr auto SetRateFixedwingMetricsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateFixedwingMetricsRequest),
                                            alignof(SetRateFixedwingMetricsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateFixedwingMetricsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateFixedwingMetricsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateFixedwingMetricsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateFixedwingMetricsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateFixedwingMetricsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateFixedwingMetricsRequest>(), &SetRateFixedwingMetricsRequest::ByteSizeLong,
            &SetRateFixedwingMetricsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsRequest, _impl_._cached_size_),
        false,
    },
    &SetRateFixedwingMetricsRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateFixedwingMetricsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateFixedwingMetricsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateFixedwingMetricsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateFixedwingMetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateFixedwingMetricsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateFixedwingMetricsRequest& this_ = static_cast<const SetRateFixedwingMetricsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateFixedwingMetricsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateFixedwingMetricsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateFixedwingMetricsRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateFixedwingMetricsRequest& this_ = static_cast<const SetRateFixedwingMetricsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateFixedwingMetricsRequest::ByteSizeLong() const {
          const SetRateFixedwingMetricsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateFixedwingMetricsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateFixedwingMetricsRequest*>(&to_msg);
  auto& from = static_cast<const SetRateFixedwingMetricsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateFixedwingMetricsRequest::CopyFrom(const SetRateFixedwingMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateFixedwingMetricsRequest::InternalSwap(SetRateFixedwingMetricsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateFixedwingMetricsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateFixedwingMetricsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateFixedwingMetricsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsResponse, _impl_._has_bits_);
};

SetRateFixedwingMetricsResponse::SetRateFixedwingMetricsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateFixedwingMetricsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateFixedwingMetricsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateFixedwingMetricsResponse::SetRateFixedwingMetricsResponse(
    ::google::protobuf::Arena* arena,
    const SetRateFixedwingMetricsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateFixedwingMetricsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateFixedwingMetricsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateFixedwingMetricsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateFixedwingMetricsResponse::~SetRateFixedwingMetricsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
  SharedDtor(*this);
}
inline void SetRateFixedwingMetricsResponse::SharedDtor(MessageLite& self) {
  SetRateFixedwingMetricsResponse& this_ = static_cast<SetRateFixedwingMetricsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateFixedwingMetricsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateFixedwingMetricsResponse(arena);
}
constexpr auto SetRateFixedwingMetricsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateFixedwingMetricsResponse),
                                            alignof(SetRateFixedwingMetricsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateFixedwingMetricsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateFixedwingMetricsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateFixedwingMetricsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateFixedwingMetricsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateFixedwingMetricsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateFixedwingMetricsResponse>(), &SetRateFixedwingMetricsResponse::ByteSizeLong,
            &SetRateFixedwingMetricsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsResponse, _impl_._cached_size_),
        false,
    },
    &SetRateFixedwingMetricsResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateFixedwingMetricsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateFixedwingMetricsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateFixedwingMetricsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateFixedwingMetricsResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateFixedwingMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateFixedwingMetricsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateFixedwingMetricsResponse& this_ = static_cast<const SetRateFixedwingMetricsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateFixedwingMetricsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateFixedwingMetricsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateFixedwingMetricsResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateFixedwingMetricsResponse& this_ = static_cast<const SetRateFixedwingMetricsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateFixedwingMetricsResponse::ByteSizeLong() const {
          const SetRateFixedwingMetricsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateFixedwingMetricsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateFixedwingMetricsResponse*>(&to_msg);
  auto& from = static_cast<const SetRateFixedwingMetricsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateFixedwingMetricsResponse::CopyFrom(const SetRateFixedwingMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateFixedwingMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateFixedwingMetricsResponse::InternalSwap(SetRateFixedwingMetricsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateFixedwingMetricsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateImuRequest::_Internal {
 public:
};

SetRateImuRequest::SetRateImuRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateImuRequest)
}
SetRateImuRequest::SetRateImuRequest(
    ::google::protobuf::Arena* arena, const SetRateImuRequest& from)
    : SetRateImuRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateImuRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateImuRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateImuRequest::~SetRateImuRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateImuRequest)
  SharedDtor(*this);
}
inline void SetRateImuRequest::SharedDtor(MessageLite& self) {
  SetRateImuRequest& this_ = static_cast<SetRateImuRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateImuRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateImuRequest(arena);
}
constexpr auto SetRateImuRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateImuRequest),
                                            alignof(SetRateImuRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateImuRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateImuRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateImuRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateImuRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateImuRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateImuRequest>(), &SetRateImuRequest::ByteSizeLong,
            &SetRateImuRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateImuRequest, _impl_._cached_size_),
        false,
    },
    &SetRateImuRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateImuRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateImuRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateImuRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateImuRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateImuRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateImuRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateImuRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateImuRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateImuRequest& this_ = static_cast<const SetRateImuRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateImuRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateImuRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateImuRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateImuRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateImuRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateImuRequest& this_ = static_cast<const SetRateImuRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateImuRequest::ByteSizeLong() const {
          const SetRateImuRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateImuRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateImuRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateImuRequest*>(&to_msg);
  auto& from = static_cast<const SetRateImuRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateImuRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateImuRequest::CopyFrom(const SetRateImuRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateImuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateImuRequest::InternalSwap(SetRateImuRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateImuRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateImuResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateImuResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateImuResponse, _impl_._has_bits_);
};

SetRateImuResponse::SetRateImuResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateImuResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateImuResponse::SetRateImuResponse(
    ::google::protobuf::Arena* arena,
    const SetRateImuResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateImuResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateImuResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateImuResponse::~SetRateImuResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateImuResponse)
  SharedDtor(*this);
}
inline void SetRateImuResponse::SharedDtor(MessageLite& self) {
  SetRateImuResponse& this_ = static_cast<SetRateImuResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateImuResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateImuResponse(arena);
}
constexpr auto SetRateImuResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateImuResponse),
                                            alignof(SetRateImuResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateImuResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateImuResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateImuResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateImuResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateImuResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateImuResponse>(), &SetRateImuResponse::ByteSizeLong,
            &SetRateImuResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateImuResponse, _impl_._cached_size_),
        false,
    },
    &SetRateImuResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateImuResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateImuResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateImuResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateImuResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateImuResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateImuResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateImuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateImuResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateImuResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateImuResponse& this_ = static_cast<const SetRateImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateImuResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateImuResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateImuResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateImuResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateImuResponse& this_ = static_cast<const SetRateImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateImuResponse::ByteSizeLong() const {
          const SetRateImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateImuResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateImuResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateImuResponse*>(&to_msg);
  auto& from = static_cast<const SetRateImuResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateImuResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateImuResponse::CopyFrom(const SetRateImuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateImuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateImuResponse::InternalSwap(SetRateImuResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateImuResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateScaledImuRequest::_Internal {
 public:
};

SetRateScaledImuRequest::SetRateScaledImuRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
}
SetRateScaledImuRequest::SetRateScaledImuRequest(
    ::google::protobuf::Arena* arena, const SetRateScaledImuRequest& from)
    : SetRateScaledImuRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateScaledImuRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateScaledImuRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateScaledImuRequest::~SetRateScaledImuRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
  SharedDtor(*this);
}
inline void SetRateScaledImuRequest::SharedDtor(MessageLite& self) {
  SetRateScaledImuRequest& this_ = static_cast<SetRateScaledImuRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateScaledImuRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateScaledImuRequest(arena);
}
constexpr auto SetRateScaledImuRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateScaledImuRequest),
                                            alignof(SetRateScaledImuRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateScaledImuRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateScaledImuRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateScaledImuRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateScaledImuRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateScaledImuRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateScaledImuRequest>(), &SetRateScaledImuRequest::ByteSizeLong,
            &SetRateScaledImuRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateScaledImuRequest, _impl_._cached_size_),
        false,
    },
    &SetRateScaledImuRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateScaledImuRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateScaledImuRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateScaledImuRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateScaledImuRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateScaledImuRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateScaledImuRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateScaledImuRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateScaledImuRequest& this_ = static_cast<const SetRateScaledImuRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateScaledImuRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateScaledImuRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateScaledImuRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateScaledImuRequest& this_ = static_cast<const SetRateScaledImuRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateScaledImuRequest::ByteSizeLong() const {
          const SetRateScaledImuRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateScaledImuRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateScaledImuRequest*>(&to_msg);
  auto& from = static_cast<const SetRateScaledImuRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateScaledImuRequest::CopyFrom(const SetRateScaledImuRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateScaledImuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateScaledImuRequest::InternalSwap(SetRateScaledImuRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateScaledImuRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateScaledImuResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateScaledImuResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateScaledImuResponse, _impl_._has_bits_);
};

SetRateScaledImuResponse::SetRateScaledImuResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateScaledImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateScaledImuResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateScaledImuResponse::SetRateScaledImuResponse(
    ::google::protobuf::Arena* arena,
    const SetRateScaledImuResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateScaledImuResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateScaledImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateScaledImuResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateScaledImuResponse::~SetRateScaledImuResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
  SharedDtor(*this);
}
inline void SetRateScaledImuResponse::SharedDtor(MessageLite& self) {
  SetRateScaledImuResponse& this_ = static_cast<SetRateScaledImuResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateScaledImuResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateScaledImuResponse(arena);
}
constexpr auto SetRateScaledImuResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateScaledImuResponse),
                                            alignof(SetRateScaledImuResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateScaledImuResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateScaledImuResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateScaledImuResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateScaledImuResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateScaledImuResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateScaledImuResponse>(), &SetRateScaledImuResponse::ByteSizeLong,
            &SetRateScaledImuResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateScaledImuResponse, _impl_._cached_size_),
        false,
    },
    &SetRateScaledImuResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateScaledImuResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateScaledImuResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateScaledImuResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateScaledImuResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateScaledImuResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateScaledImuResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateScaledImuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateScaledImuResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateScaledImuResponse& this_ = static_cast<const SetRateScaledImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateScaledImuResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateScaledImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateScaledImuResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateScaledImuResponse& this_ = static_cast<const SetRateScaledImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateScaledImuResponse::ByteSizeLong() const {
          const SetRateScaledImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateScaledImuResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateScaledImuResponse*>(&to_msg);
  auto& from = static_cast<const SetRateScaledImuResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateScaledImuResponse::CopyFrom(const SetRateScaledImuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateScaledImuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateScaledImuResponse::InternalSwap(SetRateScaledImuResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateScaledImuResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateRawImuRequest::_Internal {
 public:
};

SetRateRawImuRequest::SetRateRawImuRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateRawImuRequest)
}
SetRateRawImuRequest::SetRateRawImuRequest(
    ::google::protobuf::Arena* arena, const SetRateRawImuRequest& from)
    : SetRateRawImuRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateRawImuRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateRawImuRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateRawImuRequest::~SetRateRawImuRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateRawImuRequest)
  SharedDtor(*this);
}
inline void SetRateRawImuRequest::SharedDtor(MessageLite& self) {
  SetRateRawImuRequest& this_ = static_cast<SetRateRawImuRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateRawImuRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateRawImuRequest(arena);
}
constexpr auto SetRateRawImuRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateRawImuRequest),
                                            alignof(SetRateRawImuRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateRawImuRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateRawImuRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateRawImuRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateRawImuRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateRawImuRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateRawImuRequest>(), &SetRateRawImuRequest::ByteSizeLong,
            &SetRateRawImuRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateRawImuRequest, _impl_._cached_size_),
        false,
    },
    &SetRateRawImuRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateRawImuRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateRawImuRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateRawImuRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateRawImuRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateRawImuRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateRawImuRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateRawImuRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateRawImuRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateRawImuRequest& this_ = static_cast<const SetRateRawImuRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateRawImuRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateRawImuRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateRawImuRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateRawImuRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateRawImuRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateRawImuRequest& this_ = static_cast<const SetRateRawImuRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateRawImuRequest::ByteSizeLong() const {
          const SetRateRawImuRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateRawImuRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateRawImuRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateRawImuRequest*>(&to_msg);
  auto& from = static_cast<const SetRateRawImuRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateRawImuRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateRawImuRequest::CopyFrom(const SetRateRawImuRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateRawImuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateRawImuRequest::InternalSwap(SetRateRawImuRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateRawImuRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateRawImuResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateRawImuResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateRawImuResponse, _impl_._has_bits_);
};

SetRateRawImuResponse::SetRateRawImuResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateRawImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateRawImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateRawImuResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateRawImuResponse::SetRateRawImuResponse(
    ::google::protobuf::Arena* arena,
    const SetRateRawImuResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateRawImuResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateRawImuResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateRawImuResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateRawImuResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateRawImuResponse::~SetRateRawImuResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateRawImuResponse)
  SharedDtor(*this);
}
inline void SetRateRawImuResponse::SharedDtor(MessageLite& self) {
  SetRateRawImuResponse& this_ = static_cast<SetRateRawImuResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateRawImuResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateRawImuResponse(arena);
}
constexpr auto SetRateRawImuResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateRawImuResponse),
                                            alignof(SetRateRawImuResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateRawImuResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateRawImuResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateRawImuResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateRawImuResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateRawImuResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateRawImuResponse>(), &SetRateRawImuResponse::ByteSizeLong,
            &SetRateRawImuResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateRawImuResponse, _impl_._cached_size_),
        false,
    },
    &SetRateRawImuResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateRawImuResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateRawImuResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateRawImuResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateRawImuResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateRawImuResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateRawImuResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateRawImuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateRawImuResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateRawImuResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateRawImuResponse& this_ = static_cast<const SetRateRawImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateRawImuResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateRawImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateRawImuResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateRawImuResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateRawImuResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateRawImuResponse& this_ = static_cast<const SetRateRawImuResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateRawImuResponse::ByteSizeLong() const {
          const SetRateRawImuResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateRawImuResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateRawImuResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateRawImuResponse*>(&to_msg);
  auto& from = static_cast<const SetRateRawImuResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateRawImuResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateRawImuResponse::CopyFrom(const SetRateRawImuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateRawImuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateRawImuResponse::InternalSwap(SetRateRawImuResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateRawImuResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateUnixEpochTimeRequest::_Internal {
 public:
};

SetRateUnixEpochTimeRequest::SetRateUnixEpochTimeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
}
SetRateUnixEpochTimeRequest::SetRateUnixEpochTimeRequest(
    ::google::protobuf::Arena* arena, const SetRateUnixEpochTimeRequest& from)
    : SetRateUnixEpochTimeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateUnixEpochTimeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateUnixEpochTimeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateUnixEpochTimeRequest::~SetRateUnixEpochTimeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
  SharedDtor(*this);
}
inline void SetRateUnixEpochTimeRequest::SharedDtor(MessageLite& self) {
  SetRateUnixEpochTimeRequest& this_ = static_cast<SetRateUnixEpochTimeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateUnixEpochTimeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateUnixEpochTimeRequest(arena);
}
constexpr auto SetRateUnixEpochTimeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateUnixEpochTimeRequest),
                                            alignof(SetRateUnixEpochTimeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateUnixEpochTimeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateUnixEpochTimeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateUnixEpochTimeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateUnixEpochTimeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateUnixEpochTimeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateUnixEpochTimeRequest>(), &SetRateUnixEpochTimeRequest::ByteSizeLong,
            &SetRateUnixEpochTimeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeRequest, _impl_._cached_size_),
        false,
    },
    &SetRateUnixEpochTimeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateUnixEpochTimeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateUnixEpochTimeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateUnixEpochTimeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateUnixEpochTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateUnixEpochTimeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateUnixEpochTimeRequest& this_ = static_cast<const SetRateUnixEpochTimeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateUnixEpochTimeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateUnixEpochTimeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateUnixEpochTimeRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateUnixEpochTimeRequest& this_ = static_cast<const SetRateUnixEpochTimeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateUnixEpochTimeRequest::ByteSizeLong() const {
          const SetRateUnixEpochTimeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateUnixEpochTimeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateUnixEpochTimeRequest*>(&to_msg);
  auto& from = static_cast<const SetRateUnixEpochTimeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateUnixEpochTimeRequest::CopyFrom(const SetRateUnixEpochTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateUnixEpochTimeRequest::InternalSwap(SetRateUnixEpochTimeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateUnixEpochTimeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateUnixEpochTimeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateUnixEpochTimeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeResponse, _impl_._has_bits_);
};

SetRateUnixEpochTimeResponse::SetRateUnixEpochTimeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateUnixEpochTimeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateUnixEpochTimeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateUnixEpochTimeResponse::SetRateUnixEpochTimeResponse(
    ::google::protobuf::Arena* arena,
    const SetRateUnixEpochTimeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateUnixEpochTimeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateUnixEpochTimeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateUnixEpochTimeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateUnixEpochTimeResponse::~SetRateUnixEpochTimeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
  SharedDtor(*this);
}
inline void SetRateUnixEpochTimeResponse::SharedDtor(MessageLite& self) {
  SetRateUnixEpochTimeResponse& this_ = static_cast<SetRateUnixEpochTimeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateUnixEpochTimeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateUnixEpochTimeResponse(arena);
}
constexpr auto SetRateUnixEpochTimeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateUnixEpochTimeResponse),
                                            alignof(SetRateUnixEpochTimeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateUnixEpochTimeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateUnixEpochTimeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateUnixEpochTimeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateUnixEpochTimeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateUnixEpochTimeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateUnixEpochTimeResponse>(), &SetRateUnixEpochTimeResponse::ByteSizeLong,
            &SetRateUnixEpochTimeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeResponse, _impl_._cached_size_),
        false,
    },
    &SetRateUnixEpochTimeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateUnixEpochTimeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateUnixEpochTimeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateUnixEpochTimeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateUnixEpochTimeResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateUnixEpochTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateUnixEpochTimeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateUnixEpochTimeResponse& this_ = static_cast<const SetRateUnixEpochTimeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateUnixEpochTimeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateUnixEpochTimeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateUnixEpochTimeResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateUnixEpochTimeResponse& this_ = static_cast<const SetRateUnixEpochTimeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateUnixEpochTimeResponse::ByteSizeLong() const {
          const SetRateUnixEpochTimeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateUnixEpochTimeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateUnixEpochTimeResponse*>(&to_msg);
  auto& from = static_cast<const SetRateUnixEpochTimeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateUnixEpochTimeResponse::CopyFrom(const SetRateUnixEpochTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateUnixEpochTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateUnixEpochTimeResponse::InternalSwap(SetRateUnixEpochTimeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateUnixEpochTimeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateDistanceSensorRequest::_Internal {
 public:
};

SetRateDistanceSensorRequest::SetRateDistanceSensorRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
}
SetRateDistanceSensorRequest::SetRateDistanceSensorRequest(
    ::google::protobuf::Arena* arena, const SetRateDistanceSensorRequest& from)
    : SetRateDistanceSensorRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateDistanceSensorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateDistanceSensorRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateDistanceSensorRequest::~SetRateDistanceSensorRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
  SharedDtor(*this);
}
inline void SetRateDistanceSensorRequest::SharedDtor(MessageLite& self) {
  SetRateDistanceSensorRequest& this_ = static_cast<SetRateDistanceSensorRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateDistanceSensorRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateDistanceSensorRequest(arena);
}
constexpr auto SetRateDistanceSensorRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateDistanceSensorRequest),
                                            alignof(SetRateDistanceSensorRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateDistanceSensorRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateDistanceSensorRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateDistanceSensorRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateDistanceSensorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateDistanceSensorRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateDistanceSensorRequest>(), &SetRateDistanceSensorRequest::ByteSizeLong,
            &SetRateDistanceSensorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorRequest, _impl_._cached_size_),
        false,
    },
    &SetRateDistanceSensorRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateDistanceSensorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateDistanceSensorRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateDistanceSensorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateDistanceSensorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateDistanceSensorRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateDistanceSensorRequest& this_ = static_cast<const SetRateDistanceSensorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateDistanceSensorRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateDistanceSensorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateDistanceSensorRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateDistanceSensorRequest& this_ = static_cast<const SetRateDistanceSensorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateDistanceSensorRequest::ByteSizeLong() const {
          const SetRateDistanceSensorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateDistanceSensorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateDistanceSensorRequest*>(&to_msg);
  auto& from = static_cast<const SetRateDistanceSensorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateDistanceSensorRequest::CopyFrom(const SetRateDistanceSensorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateDistanceSensorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateDistanceSensorRequest::InternalSwap(SetRateDistanceSensorRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateDistanceSensorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateDistanceSensorResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateDistanceSensorResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorResponse, _impl_._has_bits_);
};

SetRateDistanceSensorResponse::SetRateDistanceSensorResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateDistanceSensorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateDistanceSensorResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateDistanceSensorResponse::SetRateDistanceSensorResponse(
    ::google::protobuf::Arena* arena,
    const SetRateDistanceSensorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateDistanceSensorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateDistanceSensorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateDistanceSensorResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateDistanceSensorResponse::~SetRateDistanceSensorResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
  SharedDtor(*this);
}
inline void SetRateDistanceSensorResponse::SharedDtor(MessageLite& self) {
  SetRateDistanceSensorResponse& this_ = static_cast<SetRateDistanceSensorResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateDistanceSensorResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateDistanceSensorResponse(arena);
}
constexpr auto SetRateDistanceSensorResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateDistanceSensorResponse),
                                            alignof(SetRateDistanceSensorResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateDistanceSensorResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateDistanceSensorResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateDistanceSensorResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateDistanceSensorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateDistanceSensorResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateDistanceSensorResponse>(), &SetRateDistanceSensorResponse::ByteSizeLong,
            &SetRateDistanceSensorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorResponse, _impl_._cached_size_),
        false,
    },
    &SetRateDistanceSensorResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateDistanceSensorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateDistanceSensorResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateDistanceSensorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateDistanceSensorResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateDistanceSensorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateDistanceSensorResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateDistanceSensorResponse& this_ = static_cast<const SetRateDistanceSensorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateDistanceSensorResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateDistanceSensorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateDistanceSensorResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateDistanceSensorResponse& this_ = static_cast<const SetRateDistanceSensorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateDistanceSensorResponse::ByteSizeLong() const {
          const SetRateDistanceSensorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateDistanceSensorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateDistanceSensorResponse*>(&to_msg);
  auto& from = static_cast<const SetRateDistanceSensorResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateDistanceSensorResponse::CopyFrom(const SetRateDistanceSensorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateDistanceSensorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateDistanceSensorResponse::InternalSwap(SetRateDistanceSensorResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateDistanceSensorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetGpsGlobalOriginRequest::_Internal {
 public:
};

GetGpsGlobalOriginRequest::GetGpsGlobalOriginRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GetGpsGlobalOriginRequest)
}
GetGpsGlobalOriginRequest::GetGpsGlobalOriginRequest(
    ::google::protobuf::Arena* arena,
    const GetGpsGlobalOriginRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetGpsGlobalOriginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.GetGpsGlobalOriginRequest)
}

inline void* GetGpsGlobalOriginRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetGpsGlobalOriginRequest(arena);
}
constexpr auto GetGpsGlobalOriginRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetGpsGlobalOriginRequest),
                                            alignof(GetGpsGlobalOriginRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetGpsGlobalOriginRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetGpsGlobalOriginRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetGpsGlobalOriginRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<GetGpsGlobalOriginRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetGpsGlobalOriginRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<GetGpsGlobalOriginRequest>(), &GetGpsGlobalOriginRequest::ByteSizeLong,
            &GetGpsGlobalOriginRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginRequest, _impl_._cached_size_),
        false,
    },
    &GetGpsGlobalOriginRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetGpsGlobalOriginRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GetGpsGlobalOriginRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GetGpsGlobalOriginRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata GetGpsGlobalOriginRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetGpsGlobalOriginResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetGpsGlobalOriginResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_._has_bits_);
};

GetGpsGlobalOriginResponse::GetGpsGlobalOriginResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetGpsGlobalOriginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetGpsGlobalOriginResponse::GetGpsGlobalOriginResponse(
    ::google::protobuf::Arena* arena,
    const GetGpsGlobalOriginResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetGpsGlobalOriginResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;
  _impl_.gps_global_origin_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::GpsGlobalOrigin>(
                              arena, *from._impl_.gps_global_origin_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetGpsGlobalOriginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetGpsGlobalOriginResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, telemetry_result_),
           0,
           offsetof(Impl_, gps_global_origin_) -
               offsetof(Impl_, telemetry_result_) +
               sizeof(Impl_::gps_global_origin_));
}
GetGpsGlobalOriginResponse::~GetGpsGlobalOriginResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
  SharedDtor(*this);
}
inline void GetGpsGlobalOriginResponse::SharedDtor(MessageLite& self) {
  GetGpsGlobalOriginResponse& this_ = static_cast<GetGpsGlobalOriginResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  delete this_._impl_.gps_global_origin_;
  this_._impl_.~Impl_();
}

inline void* GetGpsGlobalOriginResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetGpsGlobalOriginResponse(arena);
}
constexpr auto GetGpsGlobalOriginResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetGpsGlobalOriginResponse),
                                            alignof(GetGpsGlobalOriginResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetGpsGlobalOriginResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetGpsGlobalOriginResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetGpsGlobalOriginResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetGpsGlobalOriginResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetGpsGlobalOriginResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetGpsGlobalOriginResponse>(), &GetGpsGlobalOriginResponse::ByteSizeLong,
            &GetGpsGlobalOriginResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_._cached_size_),
        false,
    },
    &GetGpsGlobalOriginResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetGpsGlobalOriginResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetGpsGlobalOriginResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GetGpsGlobalOriginResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.GpsGlobalOrigin gps_global_origin = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_.gps_global_origin_)}},
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.GpsGlobalOrigin gps_global_origin = 2;
    {PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_.gps_global_origin_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GpsGlobalOrigin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetGpsGlobalOriginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
      _impl_.telemetry_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.gps_global_origin_ != nullptr);
      _impl_.gps_global_origin_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetGpsGlobalOriginResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetGpsGlobalOriginResponse& this_ = static_cast<const GetGpsGlobalOriginResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetGpsGlobalOriginResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetGpsGlobalOriginResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.GpsGlobalOrigin gps_global_origin = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.gps_global_origin_, this_._impl_.gps_global_origin_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetGpsGlobalOriginResponse::ByteSizeLong(const MessageLite& base) {
          const GetGpsGlobalOriginResponse& this_ = static_cast<const GetGpsGlobalOriginResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetGpsGlobalOriginResponse::ByteSizeLong() const {
          const GetGpsGlobalOriginResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
            // .mavsdk.rpc.telemetry.GpsGlobalOrigin gps_global_origin = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gps_global_origin_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetGpsGlobalOriginResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetGpsGlobalOriginResponse*>(&to_msg);
  auto& from = static_cast<const GetGpsGlobalOriginResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
      if (_this->_impl_.telemetry_result_ == nullptr) {
        _this->_impl_.telemetry_result_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
      } else {
        _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.gps_global_origin_ != nullptr);
      if (_this->_impl_.gps_global_origin_ == nullptr) {
        _this->_impl_.gps_global_origin_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::GpsGlobalOrigin>(arena, *from._impl_.gps_global_origin_);
      } else {
        _this->_impl_.gps_global_origin_->MergeFrom(*from._impl_.gps_global_origin_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetGpsGlobalOriginResponse::CopyFrom(const GetGpsGlobalOriginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.GetGpsGlobalOriginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetGpsGlobalOriginResponse::InternalSwap(GetGpsGlobalOriginResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_.gps_global_origin_)
      + sizeof(GetGpsGlobalOriginResponse::_impl_.gps_global_origin_)
      - PROTOBUF_FIELD_OFFSET(GetGpsGlobalOriginResponse, _impl_.telemetry_result_)>(
          reinterpret_cast<char*>(&_impl_.telemetry_result_),
          reinterpret_cast<char*>(&other->_impl_.telemetry_result_));
}

::google::protobuf::Metadata GetGpsGlobalOriginResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAltitudeRequest::_Internal {
 public:
};

SetRateAltitudeRequest::SetRateAltitudeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
}
SetRateAltitudeRequest::SetRateAltitudeRequest(
    ::google::protobuf::Arena* arena, const SetRateAltitudeRequest& from)
    : SetRateAltitudeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateAltitudeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAltitudeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateAltitudeRequest::~SetRateAltitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
  SharedDtor(*this);
}
inline void SetRateAltitudeRequest::SharedDtor(MessageLite& self) {
  SetRateAltitudeRequest& this_ = static_cast<SetRateAltitudeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateAltitudeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAltitudeRequest(arena);
}
constexpr auto SetRateAltitudeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAltitudeRequest),
                                            alignof(SetRateAltitudeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAltitudeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAltitudeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAltitudeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAltitudeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAltitudeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAltitudeRequest>(), &SetRateAltitudeRequest::ByteSizeLong,
            &SetRateAltitudeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAltitudeRequest, _impl_._cached_size_),
        false,
    },
    &SetRateAltitudeRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAltitudeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateAltitudeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAltitudeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateAltitudeRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAltitudeRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateAltitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAltitudeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAltitudeRequest& this_ = static_cast<const SetRateAltitudeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAltitudeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAltitudeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAltitudeRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateAltitudeRequest& this_ = static_cast<const SetRateAltitudeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAltitudeRequest::ByteSizeLong() const {
          const SetRateAltitudeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAltitudeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAltitudeRequest*>(&to_msg);
  auto& from = static_cast<const SetRateAltitudeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAltitudeRequest::CopyFrom(const SetRateAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAltitudeRequest::InternalSwap(SetRateAltitudeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateAltitudeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateAltitudeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateAltitudeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateAltitudeResponse, _impl_._has_bits_);
};

SetRateAltitudeResponse::SetRateAltitudeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAltitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateAltitudeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateAltitudeResponse::SetRateAltitudeResponse(
    ::google::protobuf::Arena* arena,
    const SetRateAltitudeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateAltitudeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateAltitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateAltitudeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateAltitudeResponse::~SetRateAltitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
  SharedDtor(*this);
}
inline void SetRateAltitudeResponse::SharedDtor(MessageLite& self) {
  SetRateAltitudeResponse& this_ = static_cast<SetRateAltitudeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateAltitudeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateAltitudeResponse(arena);
}
constexpr auto SetRateAltitudeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateAltitudeResponse),
                                            alignof(SetRateAltitudeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateAltitudeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateAltitudeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateAltitudeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateAltitudeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateAltitudeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateAltitudeResponse>(), &SetRateAltitudeResponse::ByteSizeLong,
            &SetRateAltitudeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateAltitudeResponse, _impl_._cached_size_),
        false,
    },
    &SetRateAltitudeResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateAltitudeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateAltitudeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateAltitudeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateAltitudeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateAltitudeResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateAltitudeResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateAltitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateAltitudeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateAltitudeResponse& this_ = static_cast<const SetRateAltitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateAltitudeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateAltitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateAltitudeResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateAltitudeResponse& this_ = static_cast<const SetRateAltitudeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateAltitudeResponse::ByteSizeLong() const {
          const SetRateAltitudeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateAltitudeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateAltitudeResponse*>(&to_msg);
  auto& from = static_cast<const SetRateAltitudeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateAltitudeResponse::CopyFrom(const SetRateAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateAltitudeResponse::InternalSwap(SetRateAltitudeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateAltitudeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateHealthRequest::_Internal {
 public:
};

SetRateHealthRequest::SetRateHealthRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateHealthRequest)
}
SetRateHealthRequest::SetRateHealthRequest(
    ::google::protobuf::Arena* arena, const SetRateHealthRequest& from)
    : SetRateHealthRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetRateHealthRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateHealthRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rate_hz_ = {};
}
SetRateHealthRequest::~SetRateHealthRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateHealthRequest)
  SharedDtor(*this);
}
inline void SetRateHealthRequest::SharedDtor(MessageLite& self) {
  SetRateHealthRequest& this_ = static_cast<SetRateHealthRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SetRateHealthRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateHealthRequest(arena);
}
constexpr auto SetRateHealthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateHealthRequest),
                                            alignof(SetRateHealthRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateHealthRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateHealthRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateHealthRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateHealthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateHealthRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateHealthRequest>(), &SetRateHealthRequest::ByteSizeLong,
            &SetRateHealthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateHealthRequest, _impl_._cached_size_),
        false,
    },
    &SetRateHealthRequest::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateHealthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetRateHealthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateHealthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double rate_hz = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SetRateHealthRequest, _impl_.rate_hz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateHealthRequest, _impl_.rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SetRateHealthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateHealthRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_hz_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateHealthRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateHealthRequest& this_ = static_cast<const SetRateHealthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateHealthRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateHealthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateHealthRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double rate_hz = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_rate_hz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateHealthRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateHealthRequest::ByteSizeLong(const MessageLite& base) {
          const SetRateHealthRequest& this_ = static_cast<const SetRateHealthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateHealthRequest::ByteSizeLong() const {
          const SetRateHealthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateHealthRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double rate_hz = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rate_hz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateHealthRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateHealthRequest*>(&to_msg);
  auto& from = static_cast<const SetRateHealthRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateHealthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_rate_hz()) != 0) {
    _this->_impl_.rate_hz_ = from._impl_.rate_hz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateHealthRequest::CopyFrom(const SetRateHealthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateHealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateHealthRequest::InternalSwap(SetRateHealthRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rate_hz_, other->_impl_.rate_hz_);
}

::google::protobuf::Metadata SetRateHealthRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetRateHealthResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SetRateHealthResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetRateHealthResponse, _impl_._has_bits_);
};

SetRateHealthResponse::SetRateHealthResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.SetRateHealthResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateHealthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::SetRateHealthResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetRateHealthResponse::SetRateHealthResponse(
    ::google::protobuf::Arena* arena,
    const SetRateHealthResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetRateHealthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.telemetry_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(
                              arena, *from._impl_.telemetry_result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.SetRateHealthResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetRateHealthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetRateHealthResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.telemetry_result_ = {};
}
SetRateHealthResponse::~SetRateHealthResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.SetRateHealthResponse)
  SharedDtor(*this);
}
inline void SetRateHealthResponse::SharedDtor(MessageLite& self) {
  SetRateHealthResponse& this_ = static_cast<SetRateHealthResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.telemetry_result_;
  this_._impl_.~Impl_();
}

inline void* SetRateHealthResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetRateHealthResponse(arena);
}
constexpr auto SetRateHealthResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetRateHealthResponse),
                                            alignof(SetRateHealthResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetRateHealthResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetRateHealthResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetRateHealthResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetRateHealthResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetRateHealthResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetRateHealthResponse>(), &SetRateHealthResponse::ByteSizeLong,
            &SetRateHealthResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetRateHealthResponse, _impl_._cached_size_),
        false,
    },
    &SetRateHealthResponse::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetRateHealthResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetRateHealthResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetRateHealthResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::SetRateHealthResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetRateHealthResponse, _impl_.telemetry_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetRateHealthResponse, _impl_.telemetry_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SetRateHealthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.SetRateHealthResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.telemetry_result_ != nullptr);
    _impl_.telemetry_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetRateHealthResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetRateHealthResponse& this_ = static_cast<const SetRateHealthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetRateHealthResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetRateHealthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.SetRateHealthResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.telemetry_result_, this_._impl_.telemetry_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.SetRateHealthResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetRateHealthResponse::ByteSizeLong(const MessageLite& base) {
          const SetRateHealthResponse& this_ = static_cast<const SetRateHealthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetRateHealthResponse::ByteSizeLong() const {
          const SetRateHealthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.SetRateHealthResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .mavsdk.rpc.telemetry.TelemetryResult telemetry_result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.telemetry_result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetRateHealthResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetRateHealthResponse*>(&to_msg);
  auto& from = static_cast<const SetRateHealthResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.SetRateHealthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.telemetry_result_ != nullptr);
    if (_this->_impl_.telemetry_result_ == nullptr) {
      _this->_impl_.telemetry_result_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::TelemetryResult>(arena, *from._impl_.telemetry_result_);
    } else {
      _this->_impl_.telemetry_result_->MergeFrom(*from._impl_.telemetry_result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetRateHealthResponse::CopyFrom(const SetRateHealthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.SetRateHealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetRateHealthResponse::InternalSwap(SetRateHealthResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.telemetry_result_, other->_impl_.telemetry_result_);
}

::google::protobuf::Metadata SetRateHealthResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Position::_Internal {
 public:
};

Position::Position(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Position)
}
Position::Position(
    ::google::protobuf::Arena* arena, const Position& from)
    : Position(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, relative_altitude_m_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::relative_altitude_m_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Position)
  SharedDtor(*this);
}
inline void Position::SharedDtor(MessageLite& self) {
  Position& this_ = static_cast<Position&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Position::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Position(arena);
}
constexpr auto Position::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Position),
                                            alignof(Position));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Position::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Position_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Position::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Position>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Position::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Position>(), &Position::ByteSizeLong,
            &Position::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Position, _impl_._cached_size_),
        false,
    },
    &Position::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Position::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Position::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Position>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float relative_altitude_m = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)}},
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)}},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_deg_)}},
    // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.absolute_altitude_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.absolute_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float relative_altitude_m = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.relative_altitude_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.relative_altitude_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Position::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Position& this_ = static_cast<const Position&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Position::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Position& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Position)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_latitude_deg(), target);
          }

          // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_longitude_deg(), target);
          }

          // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_absolute_altitude_m(), target);
          }

          // float relative_altitude_m = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_relative_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_relative_altitude_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Position)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Position::ByteSizeLong(const MessageLite& base) {
          const Position& this_ = static_cast<const Position&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Position::ByteSizeLong() const {
          const Position& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Position)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
              total_size += 9;
            }
            // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
              total_size += 9;
            }
            // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
              total_size += 5;
            }
            // float relative_altitude_m = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_relative_altitude_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Position::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_latitude_deg()) != 0) {
    _this->_impl_.latitude_deg_ = from._impl_.latitude_deg_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude_deg()) != 0) {
    _this->_impl_.longitude_deg_ = from._impl_.longitude_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_absolute_altitude_m()) != 0) {
    _this->_impl_.absolute_altitude_m_ = from._impl_.absolute_altitude_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_relative_altitude_m()) != 0) {
    _this->_impl_.relative_altitude_m_ = from._impl_.relative_altitude_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)
      + sizeof(Position::_impl_.relative_altitude_m_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Heading::_Internal {
 public:
};

Heading::Heading(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Heading)
}
Heading::Heading(
    ::google::protobuf::Arena* arena, const Heading& from)
    : Heading(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Heading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Heading::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.heading_deg_ = {};
}
Heading::~Heading() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Heading)
  SharedDtor(*this);
}
inline void Heading::SharedDtor(MessageLite& self) {
  Heading& this_ = static_cast<Heading&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Heading::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Heading(arena);
}
constexpr auto Heading::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Heading),
                                            alignof(Heading));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Heading::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Heading_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Heading::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Heading>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Heading::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Heading>(), &Heading::ByteSizeLong,
            &Heading::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Heading, _impl_._cached_size_),
        false,
    },
    &Heading::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Heading::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Heading::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Heading>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double heading_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Heading, _impl_.heading_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double heading_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Heading, _impl_.heading_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Heading::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Heading)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.heading_deg_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Heading::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Heading& this_ = static_cast<const Heading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Heading::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Heading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Heading)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double heading_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_heading_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_heading_deg(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Heading)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Heading::ByteSizeLong(const MessageLite& base) {
          const Heading& this_ = static_cast<const Heading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Heading::ByteSizeLong() const {
          const Heading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Heading)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double heading_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_heading_deg()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Heading::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Heading*>(&to_msg);
  auto& from = static_cast<const Heading&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Heading)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_heading_deg()) != 0) {
    _this->_impl_.heading_deg_ = from._impl_.heading_deg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heading::CopyFrom(const Heading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Heading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Heading::InternalSwap(Heading* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.heading_deg_, other->_impl_.heading_deg_);
}

::google::protobuf::Metadata Heading::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Quaternion::_Internal {
 public:
};

Quaternion::Quaternion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* arena, const Quaternion& from)
    : Quaternion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quaternion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, w_),
           0,
           offsetof(Impl_, timestamp_us_) -
               offsetof(Impl_, w_) +
               sizeof(Impl_::timestamp_us_));
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Quaternion)
  SharedDtor(*this);
}
inline void Quaternion::SharedDtor(MessageLite& self) {
  Quaternion& this_ = static_cast<Quaternion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Quaternion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Quaternion(arena);
}
constexpr auto Quaternion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Quaternion),
                                            alignof(Quaternion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Quaternion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Quaternion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Quaternion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Quaternion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Quaternion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Quaternion>(), &Quaternion::ByteSizeLong,
            &Quaternion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._cached_size_),
        false,
    },
    &Quaternion::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Quaternion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Quaternion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Quaternion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)}},
    // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)}},
    // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_)}},
    // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)}},
    // uint64 timestamp_us = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Quaternion, _impl_.timestamp_us_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.timestamp_us_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint64 timestamp_us = 5;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.timestamp_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Quaternion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.w_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_us_) -
      reinterpret_cast<char*>(&_impl_.w_)) + sizeof(_impl_.timestamp_us_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Quaternion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Quaternion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Quaternion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_w()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_w(), target);
          }

          // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_x(), target);
          }

          // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_y(), target);
          }

          // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_z(), target);
          }

          // uint64 timestamp_us = 5;
          if (this_._internal_timestamp_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_timestamp_us(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Quaternion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Quaternion::ByteSizeLong(const MessageLite& base) {
          const Quaternion& this_ = static_cast<const Quaternion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Quaternion::ByteSizeLong() const {
          const Quaternion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Quaternion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float w = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_w()) != 0) {
              total_size += 5;
            }
            // float x = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
            // uint64 timestamp_us = 5;
            if (this_._internal_timestamp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_us());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Quaternion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_w()) != 0) {
    _this->_impl_.w_ = from._impl_.w_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  if (from._internal_timestamp_us() != 0) {
    _this->_impl_.timestamp_us_ = from._impl_.timestamp_us_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.timestamp_us_)
      + sizeof(Quaternion::_impl_.timestamp_us_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)>(
          reinterpret_cast<char*>(&_impl_.w_),
          reinterpret_cast<char*>(&other->_impl_.w_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EulerAngle::_Internal {
 public:
};

EulerAngle::EulerAngle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.EulerAngle)
}
EulerAngle::EulerAngle(
    ::google::protobuf::Arena* arena, const EulerAngle& from)
    : EulerAngle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EulerAngle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EulerAngle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_deg_),
           0,
           offsetof(Impl_, yaw_deg_) -
               offsetof(Impl_, roll_deg_) +
               sizeof(Impl_::yaw_deg_));
}
EulerAngle::~EulerAngle() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.EulerAngle)
  SharedDtor(*this);
}
inline void EulerAngle::SharedDtor(MessageLite& self) {
  EulerAngle& this_ = static_cast<EulerAngle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EulerAngle::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EulerAngle(arena);
}
constexpr auto EulerAngle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EulerAngle),
                                            alignof(EulerAngle));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EulerAngle::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EulerAngle_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EulerAngle::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EulerAngle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EulerAngle::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EulerAngle>(), &EulerAngle::ByteSizeLong,
            &EulerAngle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_._cached_size_),
        false,
    },
    &EulerAngle::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EulerAngle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> EulerAngle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::EulerAngle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timestamp_us = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EulerAngle, _impl_.timestamp_us_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.timestamp_us_)}},
    // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_)}},
    // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.pitch_deg_)}},
    // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.pitch_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint64 timestamp_us = 4;
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.timestamp_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EulerAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.EulerAngle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_deg_) -
      reinterpret_cast<char*>(&_impl_.roll_deg_)) + sizeof(_impl_.yaw_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EulerAngle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EulerAngle& this_ = static_cast<const EulerAngle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EulerAngle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EulerAngle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.EulerAngle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_roll_deg(), target);
          }

          // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_pitch_deg(), target);
          }

          // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_yaw_deg(), target);
          }

          // uint64 timestamp_us = 4;
          if (this_._internal_timestamp_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_timestamp_us(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.EulerAngle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EulerAngle::ByteSizeLong(const MessageLite& base) {
          const EulerAngle& this_ = static_cast<const EulerAngle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EulerAngle::ByteSizeLong() const {
          const EulerAngle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.EulerAngle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll_deg()) != 0) {
              total_size += 5;
            }
            // float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_deg()) != 0) {
              total_size += 5;
            }
            // uint64 timestamp_us = 4;
            if (this_._internal_timestamp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_us());
            }
            // float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EulerAngle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EulerAngle*>(&to_msg);
  auto& from = static_cast<const EulerAngle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.EulerAngle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_roll_deg()) != 0) {
    _this->_impl_.roll_deg_ = from._impl_.roll_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch_deg()) != 0) {
    _this->_impl_.pitch_deg_ = from._impl_.pitch_deg_;
  }
  if (from._internal_timestamp_us() != 0) {
    _this->_impl_.timestamp_us_ = from._impl_.timestamp_us_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_deg()) != 0) {
    _this->_impl_.yaw_deg_ = from._impl_.yaw_deg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EulerAngle::CopyFrom(const EulerAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.EulerAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EulerAngle::InternalSwap(EulerAngle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_)
      + sizeof(EulerAngle::_impl_.yaw_deg_)
      - PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_)>(
          reinterpret_cast<char*>(&_impl_.roll_deg_),
          reinterpret_cast<char*>(&other->_impl_.roll_deg_));
}

::google::protobuf::Metadata EulerAngle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AngularVelocityBody::_Internal {
 public:
};

AngularVelocityBody::AngularVelocityBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AngularVelocityBody)
}
AngularVelocityBody::AngularVelocityBody(
    ::google::protobuf::Arena* arena, const AngularVelocityBody& from)
    : AngularVelocityBody(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AngularVelocityBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AngularVelocityBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_rad_s_),
           0,
           offsetof(Impl_, yaw_rad_s_) -
               offsetof(Impl_, roll_rad_s_) +
               sizeof(Impl_::yaw_rad_s_));
}
AngularVelocityBody::~AngularVelocityBody() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AngularVelocityBody)
  SharedDtor(*this);
}
inline void AngularVelocityBody::SharedDtor(MessageLite& self) {
  AngularVelocityBody& this_ = static_cast<AngularVelocityBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AngularVelocityBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AngularVelocityBody(arena);
}
constexpr auto AngularVelocityBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AngularVelocityBody),
                                            alignof(AngularVelocityBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AngularVelocityBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AngularVelocityBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AngularVelocityBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AngularVelocityBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AngularVelocityBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AngularVelocityBody>(), &AngularVelocityBody::ByteSizeLong,
            &AngularVelocityBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_._cached_size_),
        false,
    },
    &AngularVelocityBody::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AngularVelocityBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AngularVelocityBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AngularVelocityBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.roll_rad_s_)}},
    // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.pitch_rad_s_)}},
    // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.yaw_rad_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.roll_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.pitch_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.yaw_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AngularVelocityBody::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AngularVelocityBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_rad_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_rad_s_) -
      reinterpret_cast<char*>(&_impl_.roll_rad_s_)) + sizeof(_impl_.yaw_rad_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AngularVelocityBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AngularVelocityBody& this_ = static_cast<const AngularVelocityBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AngularVelocityBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AngularVelocityBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AngularVelocityBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_roll_rad_s(), target);
          }

          // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_pitch_rad_s(), target);
          }

          // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_yaw_rad_s(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AngularVelocityBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AngularVelocityBody::ByteSizeLong(const MessageLite& base) {
          const AngularVelocityBody& this_ = static_cast<const AngularVelocityBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AngularVelocityBody::ByteSizeLong() const {
          const AngularVelocityBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AngularVelocityBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll_rad_s()) != 0) {
              total_size += 5;
            }
            // float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch_rad_s()) != 0) {
              total_size += 5;
            }
            // float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_rad_s()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AngularVelocityBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AngularVelocityBody*>(&to_msg);
  auto& from = static_cast<const AngularVelocityBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AngularVelocityBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_roll_rad_s()) != 0) {
    _this->_impl_.roll_rad_s_ = from._impl_.roll_rad_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch_rad_s()) != 0) {
    _this->_impl_.pitch_rad_s_ = from._impl_.pitch_rad_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_rad_s()) != 0) {
    _this->_impl_.yaw_rad_s_ = from._impl_.yaw_rad_s_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AngularVelocityBody::CopyFrom(const AngularVelocityBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AngularVelocityBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AngularVelocityBody::InternalSwap(AngularVelocityBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.yaw_rad_s_)
      + sizeof(AngularVelocityBody::_impl_.yaw_rad_s_)
      - PROTOBUF_FIELD_OFFSET(AngularVelocityBody, _impl_.roll_rad_s_)>(
          reinterpret_cast<char*>(&_impl_.roll_rad_s_),
          reinterpret_cast<char*>(&other->_impl_.roll_rad_s_));
}

::google::protobuf::Metadata AngularVelocityBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GpsInfo::_Internal {
 public:
};

GpsInfo::GpsInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GpsInfo)
}
GpsInfo::GpsInfo(
    ::google::protobuf::Arena* arena, const GpsInfo& from)
    : GpsInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GpsInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GpsInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_satellites_),
           0,
           offsetof(Impl_, fix_type_) -
               offsetof(Impl_, num_satellites_) +
               sizeof(Impl_::fix_type_));
}
GpsInfo::~GpsInfo() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.GpsInfo)
  SharedDtor(*this);
}
inline void GpsInfo::SharedDtor(MessageLite& self) {
  GpsInfo& this_ = static_cast<GpsInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GpsInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GpsInfo(arena);
}
constexpr auto GpsInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GpsInfo),
                                            alignof(GpsInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GpsInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GpsInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GpsInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GpsInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GpsInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GpsInfo>(), &GpsInfo::ByteSizeLong,
            &GpsInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_._cached_size_),
        false,
    },
    &GpsInfo::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GpsInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GpsInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GpsInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.FixType fix_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GpsInfo, _impl_.fix_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_.fix_type_)}},
    // int32 num_satellites = 1 [(.mavsdk.options.default_value) = "0"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GpsInfo, _impl_.num_satellites_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_.num_satellites_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 num_satellites = 1 [(.mavsdk.options.default_value) = "0"];
    {PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_.num_satellites_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.telemetry.FixType fix_type = 2;
    {PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_.fix_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GpsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.GpsInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.num_satellites_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.fix_type_) -
      reinterpret_cast<char*>(&_impl_.num_satellites_)) + sizeof(_impl_.fix_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GpsInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GpsInfo& this_ = static_cast<const GpsInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GpsInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GpsInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.GpsInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 num_satellites = 1 [(.mavsdk.options.default_value) = "0"];
          if (this_._internal_num_satellites() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_num_satellites(), target);
          }

          // .mavsdk.rpc.telemetry.FixType fix_type = 2;
          if (this_._internal_fix_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_fix_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.GpsInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GpsInfo::ByteSizeLong(const MessageLite& base) {
          const GpsInfo& this_ = static_cast<const GpsInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GpsInfo::ByteSizeLong() const {
          const GpsInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.GpsInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 num_satellites = 1 [(.mavsdk.options.default_value) = "0"];
            if (this_._internal_num_satellites() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_satellites());
            }
            // .mavsdk.rpc.telemetry.FixType fix_type = 2;
            if (this_._internal_fix_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_fix_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GpsInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GpsInfo*>(&to_msg);
  auto& from = static_cast<const GpsInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.GpsInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_satellites() != 0) {
    _this->_impl_.num_satellites_ = from._impl_.num_satellites_;
  }
  if (from._internal_fix_type() != 0) {
    _this->_impl_.fix_type_ = from._impl_.fix_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GpsInfo::CopyFrom(const GpsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.GpsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GpsInfo::InternalSwap(GpsInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_.fix_type_)
      + sizeof(GpsInfo::_impl_.fix_type_)
      - PROTOBUF_FIELD_OFFSET(GpsInfo, _impl_.num_satellites_)>(
          reinterpret_cast<char*>(&_impl_.num_satellites_),
          reinterpret_cast<char*>(&other->_impl_.num_satellites_));
}

::google::protobuf::Metadata GpsInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RawGps::_Internal {
 public:
};

RawGps::RawGps(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.RawGps)
}
RawGps::RawGps(
    ::google::protobuf::Arena* arena, const RawGps& from)
    : RawGps(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RawGps::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RawGps::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_us_),
           0,
           offsetof(Impl_, yaw_deg_) -
               offsetof(Impl_, timestamp_us_) +
               sizeof(Impl_::yaw_deg_));
}
RawGps::~RawGps() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.RawGps)
  SharedDtor(*this);
}
inline void RawGps::SharedDtor(MessageLite& self) {
  RawGps& this_ = static_cast<RawGps&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RawGps::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RawGps(arena);
}
constexpr auto RawGps::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RawGps),
                                            alignof(RawGps));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RawGps::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RawGps_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RawGps::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RawGps>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RawGps::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RawGps>(), &RawGps::ByteSizeLong,
            &RawGps::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RawGps, _impl_._cached_size_),
        false,
    },
    &RawGps::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RawGps::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2> RawGps::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RawGps>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp_us = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RawGps, _impl_.timestamp_us_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.timestamp_us_)}},
    // double latitude_deg = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.latitude_deg_)}},
    // double longitude_deg = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.longitude_deg_)}},
    // float absolute_altitude_m = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.absolute_altitude_m_)}},
    // float hdop = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.hdop_)}},
    // float vdop = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.vdop_)}},
    // float velocity_m_s = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.velocity_m_s_)}},
    // float cog_deg = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.cog_deg_)}},
    // float altitude_ellipsoid_m = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.altitude_ellipsoid_m_)}},
    // float horizontal_uncertainty_m = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.horizontal_uncertainty_m_)}},
    // float vertical_uncertainty_m = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.vertical_uncertainty_m_)}},
    // float velocity_uncertainty_m_s = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.velocity_uncertainty_m_s_)}},
    // float heading_uncertainty_deg = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.heading_uncertainty_deg_)}},
    // float yaw_deg = 14;
    {::_pbi::TcParser::FastF32S1,
     {117, 63, 0, PROTOBUF_FIELD_OFFSET(RawGps, _impl_.yaw_deg_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp_us = 1;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.timestamp_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // double latitude_deg = 2;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 3;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float absolute_altitude_m = 4;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.absolute_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float hdop = 5;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.hdop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vdop = 6;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.vdop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float velocity_m_s = 7;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.velocity_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float cog_deg = 8;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.cog_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_ellipsoid_m = 9;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.altitude_ellipsoid_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float horizontal_uncertainty_m = 10;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.horizontal_uncertainty_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vertical_uncertainty_m = 11;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.vertical_uncertainty_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float velocity_uncertainty_m_s = 12;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.velocity_uncertainty_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float heading_uncertainty_deg = 13;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.heading_uncertainty_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 14;
    {PROTOBUF_FIELD_OFFSET(RawGps, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RawGps::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.RawGps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_us_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_deg_) -
      reinterpret_cast<char*>(&_impl_.timestamp_us_)) + sizeof(_impl_.yaw_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RawGps::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RawGps& this_ = static_cast<const RawGps&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RawGps::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RawGps& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.RawGps)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp_us = 1;
          if (this_._internal_timestamp_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp_us(), target);
          }

          // double latitude_deg = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_latitude_deg(), target);
          }

          // double longitude_deg = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_longitude_deg(), target);
          }

          // float absolute_altitude_m = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_absolute_altitude_m(), target);
          }

          // float hdop = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_hdop()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_hdop(), target);
          }

          // float vdop = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_vdop()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_vdop(), target);
          }

          // float velocity_m_s = 7;
          if (::absl::bit_cast<::uint32_t>(this_._internal_velocity_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_velocity_m_s(), target);
          }

          // float cog_deg = 8;
          if (::absl::bit_cast<::uint32_t>(this_._internal_cog_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_cog_deg(), target);
          }

          // float altitude_ellipsoid_m = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_ellipsoid_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_altitude_ellipsoid_m(), target);
          }

          // float horizontal_uncertainty_m = 10;
          if (::absl::bit_cast<::uint32_t>(this_._internal_horizontal_uncertainty_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_horizontal_uncertainty_m(), target);
          }

          // float vertical_uncertainty_m = 11;
          if (::absl::bit_cast<::uint32_t>(this_._internal_vertical_uncertainty_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_vertical_uncertainty_m(), target);
          }

          // float velocity_uncertainty_m_s = 12;
          if (::absl::bit_cast<::uint32_t>(this_._internal_velocity_uncertainty_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_velocity_uncertainty_m_s(), target);
          }

          // float heading_uncertainty_deg = 13;
          if (::absl::bit_cast<::uint32_t>(this_._internal_heading_uncertainty_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                13, this_._internal_heading_uncertainty_deg(), target);
          }

          // float yaw_deg = 14;
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                14, this_._internal_yaw_deg(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.RawGps)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RawGps::ByteSizeLong(const MessageLite& base) {
          const RawGps& this_ = static_cast<const RawGps&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RawGps::ByteSizeLong() const {
          const RawGps& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.RawGps)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 timestamp_us = 1;
            if (this_._internal_timestamp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_us());
            }
            // double latitude_deg = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
              total_size += 9;
            }
            // double longitude_deg = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
              total_size += 9;
            }
            // float absolute_altitude_m = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
              total_size += 5;
            }
            // float hdop = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_hdop()) != 0) {
              total_size += 5;
            }
            // float vdop = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_vdop()) != 0) {
              total_size += 5;
            }
            // float velocity_m_s = 7;
            if (::absl::bit_cast<::uint32_t>(this_._internal_velocity_m_s()) != 0) {
              total_size += 5;
            }
            // float cog_deg = 8;
            if (::absl::bit_cast<::uint32_t>(this_._internal_cog_deg()) != 0) {
              total_size += 5;
            }
            // float altitude_ellipsoid_m = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_ellipsoid_m()) != 0) {
              total_size += 5;
            }
            // float horizontal_uncertainty_m = 10;
            if (::absl::bit_cast<::uint32_t>(this_._internal_horizontal_uncertainty_m()) != 0) {
              total_size += 5;
            }
            // float vertical_uncertainty_m = 11;
            if (::absl::bit_cast<::uint32_t>(this_._internal_vertical_uncertainty_m()) != 0) {
              total_size += 5;
            }
            // float velocity_uncertainty_m_s = 12;
            if (::absl::bit_cast<::uint32_t>(this_._internal_velocity_uncertainty_m_s()) != 0) {
              total_size += 5;
            }
            // float heading_uncertainty_deg = 13;
            if (::absl::bit_cast<::uint32_t>(this_._internal_heading_uncertainty_deg()) != 0) {
              total_size += 5;
            }
            // float yaw_deg = 14;
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw_deg()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RawGps::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RawGps*>(&to_msg);
  auto& from = static_cast<const RawGps&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.RawGps)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp_us() != 0) {
    _this->_impl_.timestamp_us_ = from._impl_.timestamp_us_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_latitude_deg()) != 0) {
    _this->_impl_.latitude_deg_ = from._impl_.latitude_deg_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude_deg()) != 0) {
    _this->_impl_.longitude_deg_ = from._impl_.longitude_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_absolute_altitude_m()) != 0) {
    _this->_impl_.absolute_altitude_m_ = from._impl_.absolute_altitude_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_hdop()) != 0) {
    _this->_impl_.hdop_ = from._impl_.hdop_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_vdop()) != 0) {
    _this->_impl_.vdop_ = from._impl_.vdop_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_velocity_m_s()) != 0) {
    _this->_impl_.velocity_m_s_ = from._impl_.velocity_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_cog_deg()) != 0) {
    _this->_impl_.cog_deg_ = from._impl_.cog_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_ellipsoid_m()) != 0) {
    _this->_impl_.altitude_ellipsoid_m_ = from._impl_.altitude_ellipsoid_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_horizontal_uncertainty_m()) != 0) {
    _this->_impl_.horizontal_uncertainty_m_ = from._impl_.horizontal_uncertainty_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_vertical_uncertainty_m()) != 0) {
    _this->_impl_.vertical_uncertainty_m_ = from._impl_.vertical_uncertainty_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_velocity_uncertainty_m_s()) != 0) {
    _this->_impl_.velocity_uncertainty_m_s_ = from._impl_.velocity_uncertainty_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_heading_uncertainty_deg()) != 0) {
    _this->_impl_.heading_uncertainty_deg_ = from._impl_.heading_uncertainty_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw_deg()) != 0) {
    _this->_impl_.yaw_deg_ = from._impl_.yaw_deg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RawGps::CopyFrom(const RawGps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.RawGps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RawGps::InternalSwap(RawGps* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RawGps, _impl_.yaw_deg_)
      + sizeof(RawGps::_impl_.yaw_deg_)
      - PROTOBUF_FIELD_OFFSET(RawGps, _impl_.timestamp_us_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_us_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_us_));
}

::google::protobuf::Metadata RawGps::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Battery::_Internal {
 public:
};

Battery::Battery(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Battery)
}
Battery::Battery(
    ::google::protobuf::Arena* arena, const Battery& from)
    : Battery(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Battery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Battery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, battery_function_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::battery_function_));
}
Battery::~Battery() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Battery)
  SharedDtor(*this);
}
inline void Battery::SharedDtor(MessageLite& self) {
  Battery& this_ = static_cast<Battery&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Battery::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Battery(arena);
}
constexpr auto Battery::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Battery),
                                            alignof(Battery));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Battery::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Battery_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Battery::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Battery>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Battery::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Battery>(), &Battery::ByteSizeLong,
            &Battery::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Battery, _impl_._cached_size_),
        false,
    },
    &Battery::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Battery::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> Battery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Battery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.BatteryFunction battery_function = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Battery, _impl_.battery_function_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.battery_function_)}},
    // uint32 id = 1 [(.mavsdk.options.default_value) = "0"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Battery, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.id_)}},
    // float temperature_degc = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.temperature_degc_)}},
    // float voltage_v = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.voltage_v_)}},
    // float current_battery_a = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.current_battery_a_)}},
    // float capacity_consumed_ah = 5 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.capacity_consumed_ah_)}},
    // float remaining_percent = 6 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.remaining_percent_)}},
    // float time_remaining_s = 7 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.time_remaining_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1 [(.mavsdk.options.default_value) = "0"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float temperature_degc = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.temperature_degc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float voltage_v = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.voltage_v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float current_battery_a = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.current_battery_a_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float capacity_consumed_ah = 5 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.capacity_consumed_ah_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float remaining_percent = 6 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.remaining_percent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float time_remaining_s = 7 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.time_remaining_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.telemetry.BatteryFunction battery_function = 8;
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.battery_function_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Battery::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Battery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.battery_function_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.battery_function_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Battery::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Battery& this_ = static_cast<const Battery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Battery::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Battery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Battery)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1 [(.mavsdk.options.default_value) = "0"];
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // float temperature_degc = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_temperature_degc()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_temperature_degc(), target);
          }

          // float voltage_v = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_voltage_v()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_voltage_v(), target);
          }

          // float current_battery_a = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_current_battery_a()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_current_battery_a(), target);
          }

          // float capacity_consumed_ah = 5 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_capacity_consumed_ah()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_capacity_consumed_ah(), target);
          }

          // float remaining_percent = 6 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_remaining_percent()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_remaining_percent(), target);
          }

          // float time_remaining_s = 7 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_time_remaining_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_time_remaining_s(), target);
          }

          // .mavsdk.rpc.telemetry.BatteryFunction battery_function = 8;
          if (this_._internal_battery_function() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_battery_function(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Battery)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Battery::ByteSizeLong(const MessageLite& base) {
          const Battery& this_ = static_cast<const Battery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Battery::ByteSizeLong() const {
          const Battery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Battery)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 id = 1 [(.mavsdk.options.default_value) = "0"];
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // float temperature_degc = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_temperature_degc()) != 0) {
              total_size += 5;
            }
            // float voltage_v = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_voltage_v()) != 0) {
              total_size += 5;
            }
            // float current_battery_a = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_current_battery_a()) != 0) {
              total_size += 5;
            }
            // float capacity_consumed_ah = 5 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_capacity_consumed_ah()) != 0) {
              total_size += 5;
            }
            // float remaining_percent = 6 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_remaining_percent()) != 0) {
              total_size += 5;
            }
            // float time_remaining_s = 7 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_time_remaining_s()) != 0) {
              total_size += 5;
            }
            // .mavsdk.rpc.telemetry.BatteryFunction battery_function = 8;
            if (this_._internal_battery_function() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_battery_function());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Battery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Battery*>(&to_msg);
  auto& from = static_cast<const Battery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Battery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_temperature_degc()) != 0) {
    _this->_impl_.temperature_degc_ = from._impl_.temperature_degc_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_voltage_v()) != 0) {
    _this->_impl_.voltage_v_ = from._impl_.voltage_v_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_current_battery_a()) != 0) {
    _this->_impl_.current_battery_a_ = from._impl_.current_battery_a_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_capacity_consumed_ah()) != 0) {
    _this->_impl_.capacity_consumed_ah_ = from._impl_.capacity_consumed_ah_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_remaining_percent()) != 0) {
    _this->_impl_.remaining_percent_ = from._impl_.remaining_percent_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_time_remaining_s()) != 0) {
    _this->_impl_.time_remaining_s_ = from._impl_.time_remaining_s_;
  }
  if (from._internal_battery_function() != 0) {
    _this->_impl_.battery_function_ = from._impl_.battery_function_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Battery::CopyFrom(const Battery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Battery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Battery::InternalSwap(Battery* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Battery, _impl_.battery_function_)
      + sizeof(Battery::_impl_.battery_function_)
      - PROTOBUF_FIELD_OFFSET(Battery, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Battery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Health::_Internal {
 public:
};

Health::Health(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Health)
}
Health::Health(
    ::google::protobuf::Arena* arena, const Health& from)
    : Health(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Health::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Health::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_gyrometer_calibration_ok_),
           0,
           offsetof(Impl_, is_armable_) -
               offsetof(Impl_, is_gyrometer_calibration_ok_) +
               sizeof(Impl_::is_armable_));
}
Health::~Health() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Health)
  SharedDtor(*this);
}
inline void Health::SharedDtor(MessageLite& self) {
  Health& this_ = static_cast<Health&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Health::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Health(arena);
}
constexpr auto Health::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Health),
                                            alignof(Health));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Health::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Health_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Health::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Health>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Health::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Health>(), &Health::ByteSizeLong,
            &Health::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Health, _impl_._cached_size_),
        false,
    },
    &Health::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Health::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> Health::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967048,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Health>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_armable = 8 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_armable_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_armable_)}},
    // bool is_gyrometer_calibration_ok = 1 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_gyrometer_calibration_ok_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_gyrometer_calibration_ok_)}},
    // bool is_accelerometer_calibration_ok = 2 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_accelerometer_calibration_ok_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_accelerometer_calibration_ok_)}},
    // bool is_magnetometer_calibration_ok = 3 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_magnetometer_calibration_ok_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_magnetometer_calibration_ok_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_local_position_ok = 5 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_local_position_ok_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_local_position_ok_)}},
    // bool is_global_position_ok = 6 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_global_position_ok_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_global_position_ok_)}},
    // bool is_home_position_ok = 7 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Health, _impl_.is_home_position_ok_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Health, _impl_.is_home_position_ok_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_gyrometer_calibration_ok = 1 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_gyrometer_calibration_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_accelerometer_calibration_ok = 2 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_accelerometer_calibration_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_magnetometer_calibration_ok = 3 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_magnetometer_calibration_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_local_position_ok = 5 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_local_position_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_global_position_ok = 6 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_global_position_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_home_position_ok = 7 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_home_position_ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_armable = 8 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(Health, _impl_.is_armable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Health::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Health)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.is_gyrometer_calibration_ok_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_armable_) -
      reinterpret_cast<char*>(&_impl_.is_gyrometer_calibration_ok_)) + sizeof(_impl_.is_armable_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Health::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Health& this_ = static_cast<const Health&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Health::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Health& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Health)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_gyrometer_calibration_ok = 1 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_gyrometer_calibration_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_gyrometer_calibration_ok(), target);
          }

          // bool is_accelerometer_calibration_ok = 2 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_accelerometer_calibration_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_accelerometer_calibration_ok(), target);
          }

          // bool is_magnetometer_calibration_ok = 3 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_magnetometer_calibration_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_magnetometer_calibration_ok(), target);
          }

          // bool is_local_position_ok = 5 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_local_position_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_local_position_ok(), target);
          }

          // bool is_global_position_ok = 6 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_global_position_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_is_global_position_ok(), target);
          }

          // bool is_home_position_ok = 7 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_home_position_ok() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_is_home_position_ok(), target);
          }

          // bool is_armable = 8 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_armable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_is_armable(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Health)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Health::ByteSizeLong(const MessageLite& base) {
          const Health& this_ = static_cast<const Health&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Health::ByteSizeLong() const {
          const Health& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Health)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool is_gyrometer_calibration_ok = 1 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_gyrometer_calibration_ok() != 0) {
              total_size += 2;
            }
            // bool is_accelerometer_calibration_ok = 2 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_accelerometer_calibration_ok() != 0) {
              total_size += 2;
            }
            // bool is_magnetometer_calibration_ok = 3 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_magnetometer_calibration_ok() != 0) {
              total_size += 2;
            }
            // bool is_local_position_ok = 5 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_local_position_ok() != 0) {
              total_size += 2;
            }
            // bool is_global_position_ok = 6 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_global_position_ok() != 0) {
              total_size += 2;
            }
            // bool is_home_position_ok = 7 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_home_position_ok() != 0) {
              total_size += 2;
            }
            // bool is_armable = 8 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_armable() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Health::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Health*>(&to_msg);
  auto& from = static_cast<const Health&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Health)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_gyrometer_calibration_ok() != 0) {
    _this->_impl_.is_gyrometer_calibration_ok_ = from._impl_.is_gyrometer_calibration_ok_;
  }
  if (from._internal_is_accelerometer_calibration_ok() != 0) {
    _this->_impl_.is_accelerometer_calibration_ok_ = from._impl_.is_accelerometer_calibration_ok_;
  }
  if (from._internal_is_magnetometer_calibration_ok() != 0) {
    _this->_impl_.is_magnetometer_calibration_ok_ = from._impl_.is_magnetometer_calibration_ok_;
  }
  if (from._internal_is_local_position_ok() != 0) {
    _this->_impl_.is_local_position_ok_ = from._impl_.is_local_position_ok_;
  }
  if (from._internal_is_global_position_ok() != 0) {
    _this->_impl_.is_global_position_ok_ = from._impl_.is_global_position_ok_;
  }
  if (from._internal_is_home_position_ok() != 0) {
    _this->_impl_.is_home_position_ok_ = from._impl_.is_home_position_ok_;
  }
  if (from._internal_is_armable() != 0) {
    _this->_impl_.is_armable_ = from._impl_.is_armable_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Health::CopyFrom(const Health& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Health)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Health::InternalSwap(Health* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Health, _impl_.is_armable_)
      + sizeof(Health::_impl_.is_armable_)
      - PROTOBUF_FIELD_OFFSET(Health, _impl_.is_gyrometer_calibration_ok_)>(
          reinterpret_cast<char*>(&_impl_.is_gyrometer_calibration_ok_),
          reinterpret_cast<char*>(&other->_impl_.is_gyrometer_calibration_ok_));
}

::google::protobuf::Metadata Health::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RcStatus::_Internal {
 public:
};

RcStatus::RcStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.RcStatus)
}
RcStatus::RcStatus(
    ::google::protobuf::Arena* arena, const RcStatus& from)
    : RcStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RcStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RcStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, was_available_once_),
           0,
           offsetof(Impl_, signal_strength_percent_) -
               offsetof(Impl_, was_available_once_) +
               sizeof(Impl_::signal_strength_percent_));
}
RcStatus::~RcStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.RcStatus)
  SharedDtor(*this);
}
inline void RcStatus::SharedDtor(MessageLite& self) {
  RcStatus& this_ = static_cast<RcStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RcStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RcStatus(arena);
}
constexpr auto RcStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RcStatus),
                                            alignof(RcStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RcStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RcStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RcStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RcStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RcStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RcStatus>(), &RcStatus::ByteSizeLong,
            &RcStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RcStatus, _impl_._cached_size_),
        false,
    },
    &RcStatus::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RcStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RcStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::RcStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool was_available_once = 1 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RcStatus, _impl_.was_available_once_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.was_available_once_)}},
    // bool is_available = 2 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RcStatus, _impl_.is_available_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.is_available_)}},
    // float signal_strength_percent = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.signal_strength_percent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool was_available_once = 1 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.was_available_once_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_available = 2 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.is_available_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float signal_strength_percent = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.signal_strength_percent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RcStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.RcStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.was_available_once_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.signal_strength_percent_) -
      reinterpret_cast<char*>(&_impl_.was_available_once_)) + sizeof(_impl_.signal_strength_percent_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RcStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RcStatus& this_ = static_cast<const RcStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RcStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RcStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.RcStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool was_available_once = 1 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_was_available_once() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_was_available_once(), target);
          }

          // bool is_available = 2 [(.mavsdk.options.default_value) = "false"];
          if (this_._internal_is_available() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_available(), target);
          }

          // float signal_strength_percent = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_signal_strength_percent()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_signal_strength_percent(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.RcStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RcStatus::ByteSizeLong(const MessageLite& base) {
          const RcStatus& this_ = static_cast<const RcStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RcStatus::ByteSizeLong() const {
          const RcStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.RcStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool was_available_once = 1 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_was_available_once() != 0) {
              total_size += 2;
            }
            // bool is_available = 2 [(.mavsdk.options.default_value) = "false"];
            if (this_._internal_is_available() != 0) {
              total_size += 2;
            }
            // float signal_strength_percent = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_signal_strength_percent()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RcStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RcStatus*>(&to_msg);
  auto& from = static_cast<const RcStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.RcStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_was_available_once() != 0) {
    _this->_impl_.was_available_once_ = from._impl_.was_available_once_;
  }
  if (from._internal_is_available() != 0) {
    _this->_impl_.is_available_ = from._impl_.is_available_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_signal_strength_percent()) != 0) {
    _this->_impl_.signal_strength_percent_ = from._impl_.signal_strength_percent_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RcStatus::CopyFrom(const RcStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.RcStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RcStatus::InternalSwap(RcStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.signal_strength_percent_)
      + sizeof(RcStatus::_impl_.signal_strength_percent_)
      - PROTOBUF_FIELD_OFFSET(RcStatus, _impl_.was_available_once_)>(
          reinterpret_cast<char*>(&_impl_.was_available_once_),
          reinterpret_cast<char*>(&other->_impl_.was_available_once_));
}

::google::protobuf::Metadata RcStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusText::_Internal {
 public:
};

StatusText::StatusText(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.StatusText)
}
inline PROTOBUF_NDEBUG_INLINE StatusText::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::StatusText& from_msg)
      : text_(arena, from.text_),
        _cached_size_{0} {}

StatusText::StatusText(
    ::google::protobuf::Arena* arena,
    const StatusText& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StatusText* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.StatusText)
}
inline PROTOBUF_NDEBUG_INLINE StatusText::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void StatusText::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
StatusText::~StatusText() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.StatusText)
  SharedDtor(*this);
}
inline void StatusText::SharedDtor(MessageLite& self) {
  StatusText& this_ = static_cast<StatusText&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StatusText::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StatusText(arena);
}
constexpr auto StatusText::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StatusText),
                                            alignof(StatusText));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StatusText::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StatusText_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StatusText::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StatusText>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StatusText::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StatusText>(), &StatusText::ByteSizeLong,
            &StatusText::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StatusText, _impl_._cached_size_),
        false,
    },
    &StatusText::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StatusText::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> StatusText::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::StatusText>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StatusText, _impl_.text_)}},
    // .mavsdk.rpc.telemetry.StatusTextType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StatusText, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StatusText, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.StatusTextType type = 1;
    {PROTOBUF_FIELD_OFFSET(StatusText, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(StatusText, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\4\0\0\0\0\0"
    "mavsdk.rpc.telemetry.StatusText"
    "text"
  }},
};

PROTOBUF_NOINLINE void StatusText::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.StatusText)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StatusText::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StatusText& this_ = static_cast<const StatusText&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StatusText::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StatusText& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.StatusText)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.telemetry.StatusTextType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // string text = 2;
          if (!this_._internal_text().empty()) {
            const std::string& _s = this_._internal_text();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.telemetry.StatusText.text");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.StatusText)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StatusText::ByteSizeLong(const MessageLite& base) {
          const StatusText& this_ = static_cast<const StatusText&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StatusText::ByteSizeLong() const {
          const StatusText& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.StatusText)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string text = 2;
            if (!this_._internal_text().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
            }
            // .mavsdk.rpc.telemetry.StatusTextType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StatusText::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusText*>(&to_msg);
  auto& from = static_cast<const StatusText&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.StatusText)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusText::CopyFrom(const StatusText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.StatusText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusText::InternalSwap(StatusText* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata StatusText::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ActuatorControlTarget::_Internal {
 public:
};

ActuatorControlTarget::ActuatorControlTarget(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ActuatorControlTarget)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControlTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ActuatorControlTarget& from_msg)
      : controls_{visibility, arena, from.controls_},
        _cached_size_{0} {}

ActuatorControlTarget::ActuatorControlTarget(
    ::google::protobuf::Arena* arena,
    const ActuatorControlTarget& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActuatorControlTarget* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.group_ = from._impl_.group_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ActuatorControlTarget)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControlTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : controls_{visibility, arena},
        _cached_size_{0} {}

inline void ActuatorControlTarget::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_ = {};
}
ActuatorControlTarget::~ActuatorControlTarget() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ActuatorControlTarget)
  SharedDtor(*this);
}
inline void ActuatorControlTarget::SharedDtor(MessageLite& self) {
  ActuatorControlTarget& this_ = static_cast<ActuatorControlTarget&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ActuatorControlTarget::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActuatorControlTarget(arena);
}
constexpr auto ActuatorControlTarget::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ActuatorControlTarget, _impl_.controls_) +
          decltype(ActuatorControlTarget::_impl_.controls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ActuatorControlTarget), alignof(ActuatorControlTarget), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ActuatorControlTarget::PlacementNew_,
                                 sizeof(ActuatorControlTarget),
                                 alignof(ActuatorControlTarget));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ActuatorControlTarget::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ActuatorControlTarget_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ActuatorControlTarget::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ActuatorControlTarget>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ActuatorControlTarget::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ActuatorControlTarget>(), &ActuatorControlTarget::ByteSizeLong,
            &ActuatorControlTarget::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ActuatorControlTarget, _impl_._cached_size_),
        false,
    },
    &ActuatorControlTarget::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ActuatorControlTarget::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ActuatorControlTarget::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ActuatorControlTarget>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float controls = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActuatorControlTarget, _impl_.controls_)}},
    // int32 group = 1 [(.mavsdk.options.default_value) = "0"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ActuatorControlTarget, _impl_.group_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ActuatorControlTarget, _impl_.group_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 group = 1 [(.mavsdk.options.default_value) = "0"];
    {PROTOBUF_FIELD_OFFSET(ActuatorControlTarget, _impl_.group_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated float controls = 2;
    {PROTOBUF_FIELD_OFFSET(ActuatorControlTarget, _impl_.controls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ActuatorControlTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ActuatorControlTarget)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.controls_.Clear();
  _impl_.group_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActuatorControlTarget::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActuatorControlTarget& this_ = static_cast<const ActuatorControlTarget&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActuatorControlTarget::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActuatorControlTarget& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ActuatorControlTarget)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 group = 1 [(.mavsdk.options.default_value) = "0"];
          if (this_._internal_group() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_group(), target);
          }

          // repeated float controls = 2;
          if (this_._internal_controls_size() > 0) {
            target = stream->WriteFixedPacked(2, this_._internal_controls(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ActuatorControlTarget)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActuatorControlTarget::ByteSizeLong(const MessageLite& base) {
          const ActuatorControlTarget& this_ = static_cast<const ActuatorControlTarget&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActuatorControlTarget::ByteSizeLong() const {
          const ActuatorControlTarget& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ActuatorControlTarget)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated float controls = 2;
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_controls_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
          }
           {
            // int32 group = 1 [(.mavsdk.options.default_value) = "0"];
            if (this_._internal_group() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_group());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActuatorControlTarget::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActuatorControlTarget*>(&to_msg);
  auto& from = static_cast<const ActuatorControlTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ActuatorControlTarget)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_controls()->MergeFrom(from._internal_controls());
  if (from._internal_group() != 0) {
    _this->_impl_.group_ = from._impl_.group_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActuatorControlTarget::CopyFrom(const ActuatorControlTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ActuatorControlTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActuatorControlTarget::InternalSwap(ActuatorControlTarget* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.controls_.InternalSwap(&other->_impl_.controls_);
        swap(_impl_.group_, other->_impl_.group_);
}

::google::protobuf::Metadata ActuatorControlTarget::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ActuatorOutputStatus::_Internal {
 public:
};

ActuatorOutputStatus::ActuatorOutputStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ActuatorOutputStatus)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorOutputStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::ActuatorOutputStatus& from_msg)
      : actuator_{visibility, arena, from.actuator_},
        _cached_size_{0} {}

ActuatorOutputStatus::ActuatorOutputStatus(
    ::google::protobuf::Arena* arena,
    const ActuatorOutputStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActuatorOutputStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.active_ = from._impl_.active_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.ActuatorOutputStatus)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorOutputStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : actuator_{visibility, arena},
        _cached_size_{0} {}

inline void ActuatorOutputStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.active_ = {};
}
ActuatorOutputStatus::~ActuatorOutputStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ActuatorOutputStatus)
  SharedDtor(*this);
}
inline void ActuatorOutputStatus::SharedDtor(MessageLite& self) {
  ActuatorOutputStatus& this_ = static_cast<ActuatorOutputStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ActuatorOutputStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActuatorOutputStatus(arena);
}
constexpr auto ActuatorOutputStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ActuatorOutputStatus, _impl_.actuator_) +
          decltype(ActuatorOutputStatus::_impl_.actuator_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ActuatorOutputStatus), alignof(ActuatorOutputStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ActuatorOutputStatus::PlacementNew_,
                                 sizeof(ActuatorOutputStatus),
                                 alignof(ActuatorOutputStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ActuatorOutputStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ActuatorOutputStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ActuatorOutputStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ActuatorOutputStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ActuatorOutputStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ActuatorOutputStatus>(), &ActuatorOutputStatus::ByteSizeLong,
            &ActuatorOutputStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ActuatorOutputStatus, _impl_._cached_size_),
        false,
    },
    &ActuatorOutputStatus::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ActuatorOutputStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ActuatorOutputStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ActuatorOutputStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float actuator = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActuatorOutputStatus, _impl_.actuator_)}},
    // uint32 active = 1 [(.mavsdk.options.default_value) = "0"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ActuatorOutputStatus, _impl_.active_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ActuatorOutputStatus, _impl_.active_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 active = 1 [(.mavsdk.options.default_value) = "0"];
    {PROTOBUF_FIELD_OFFSET(ActuatorOutputStatus, _impl_.active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated float actuator = 2;
    {PROTOBUF_FIELD_OFFSET(ActuatorOutputStatus, _impl_.actuator_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ActuatorOutputStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ActuatorOutputStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actuator_.Clear();
  _impl_.active_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActuatorOutputStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActuatorOutputStatus& this_ = static_cast<const ActuatorOutputStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActuatorOutputStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActuatorOutputStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ActuatorOutputStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 active = 1 [(.mavsdk.options.default_value) = "0"];
          if (this_._internal_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_active(), target);
          }

          // repeated float actuator = 2;
          if (this_._internal_actuator_size() > 0) {
            target = stream->WriteFixedPacked(2, this_._internal_actuator(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ActuatorOutputStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActuatorOutputStatus::ByteSizeLong(const MessageLite& base) {
          const ActuatorOutputStatus& this_ = static_cast<const ActuatorOutputStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActuatorOutputStatus::ByteSizeLong() const {
          const ActuatorOutputStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ActuatorOutputStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated float actuator = 2;
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_actuator_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
          }
           {
            // uint32 active = 1 [(.mavsdk.options.default_value) = "0"];
            if (this_._internal_active() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_active());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActuatorOutputStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActuatorOutputStatus*>(&to_msg);
  auto& from = static_cast<const ActuatorOutputStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ActuatorOutputStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_actuator()->MergeFrom(from._internal_actuator());
  if (from._internal_active() != 0) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActuatorOutputStatus::CopyFrom(const ActuatorOutputStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ActuatorOutputStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActuatorOutputStatus::InternalSwap(ActuatorOutputStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.actuator_.InternalSwap(&other->_impl_.actuator_);
        swap(_impl_.active_, other->_impl_.active_);
}

::google::protobuf::Metadata ActuatorOutputStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Covariance::_Internal {
 public:
};

Covariance::Covariance(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Covariance)
}
inline PROTOBUF_NDEBUG_INLINE Covariance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::Covariance& from_msg)
      : covariance_matrix_{visibility, arena, from.covariance_matrix_},
        _cached_size_{0} {}

Covariance::Covariance(
    ::google::protobuf::Arena* arena,
    const Covariance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Covariance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.Covariance)
}
inline PROTOBUF_NDEBUG_INLINE Covariance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : covariance_matrix_{visibility, arena},
        _cached_size_{0} {}

inline void Covariance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Covariance::~Covariance() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Covariance)
  SharedDtor(*this);
}
inline void Covariance::SharedDtor(MessageLite& self) {
  Covariance& this_ = static_cast<Covariance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Covariance::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Covariance(arena);
}
constexpr auto Covariance::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Covariance, _impl_.covariance_matrix_) +
          decltype(Covariance::_impl_.covariance_matrix_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Covariance), alignof(Covariance), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Covariance::PlacementNew_,
                                 sizeof(Covariance),
                                 alignof(Covariance));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Covariance::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Covariance_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Covariance::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Covariance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Covariance::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Covariance>(), &Covariance::ByteSizeLong,
            &Covariance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Covariance, _impl_._cached_size_),
        false,
    },
    &Covariance::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Covariance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Covariance::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Covariance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float covariance_matrix = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance, _impl_.covariance_matrix_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float covariance_matrix = 1;
    {PROTOBUF_FIELD_OFFSET(Covariance, _impl_.covariance_matrix_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Covariance::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Covariance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.covariance_matrix_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Covariance::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Covariance& this_ = static_cast<const Covariance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Covariance::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Covariance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Covariance)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated float covariance_matrix = 1;
          if (this_._internal_covariance_matrix_size() > 0) {
            target = stream->WriteFixedPacked(1, this_._internal_covariance_matrix(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Covariance)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Covariance::ByteSizeLong(const MessageLite& base) {
          const Covariance& this_ = static_cast<const Covariance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Covariance::ByteSizeLong() const {
          const Covariance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Covariance)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated float covariance_matrix = 1;
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_covariance_matrix_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Covariance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Covariance*>(&to_msg);
  auto& from = static_cast<const Covariance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Covariance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_covariance_matrix()->MergeFrom(from._internal_covariance_matrix());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Covariance::CopyFrom(const Covariance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Covariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Covariance::InternalSwap(Covariance* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.covariance_matrix_.InternalSwap(&other->_impl_.covariance_matrix_);
}

::google::protobuf::Metadata Covariance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VelocityBody::_Internal {
 public:
};

VelocityBody::VelocityBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.VelocityBody)
}
VelocityBody::VelocityBody(
    ::google::protobuf::Arena* arena, const VelocityBody& from)
    : VelocityBody(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VelocityBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VelocityBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_m_s_),
           0,
           offsetof(Impl_, z_m_s_) -
               offsetof(Impl_, x_m_s_) +
               sizeof(Impl_::z_m_s_));
}
VelocityBody::~VelocityBody() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.VelocityBody)
  SharedDtor(*this);
}
inline void VelocityBody::SharedDtor(MessageLite& self) {
  VelocityBody& this_ = static_cast<VelocityBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* VelocityBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VelocityBody(arena);
}
constexpr auto VelocityBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VelocityBody),
                                            alignof(VelocityBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VelocityBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VelocityBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VelocityBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VelocityBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VelocityBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VelocityBody>(), &VelocityBody::ByteSizeLong,
            &VelocityBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_._cached_size_),
        false,
    },
    &VelocityBody::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VelocityBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> VelocityBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VelocityBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x_m_s = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.x_m_s_)}},
    // float y_m_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.y_m_s_)}},
    // float z_m_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.z_m_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x_m_s = 1;
    {PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.x_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y_m_s = 2;
    {PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.y_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z_m_s = 3;
    {PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.z_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VelocityBody::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.VelocityBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_m_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_m_s_) -
      reinterpret_cast<char*>(&_impl_.x_m_s_)) + sizeof(_impl_.z_m_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VelocityBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VelocityBody& this_ = static_cast<const VelocityBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VelocityBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VelocityBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.VelocityBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x_m_s = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x_m_s(), target);
          }

          // float y_m_s = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y_m_s(), target);
          }

          // float z_m_s = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z_m_s(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.VelocityBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VelocityBody::ByteSizeLong(const MessageLite& base) {
          const VelocityBody& this_ = static_cast<const VelocityBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VelocityBody::ByteSizeLong() const {
          const VelocityBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.VelocityBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x_m_s = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x_m_s()) != 0) {
              total_size += 5;
            }
            // float y_m_s = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y_m_s()) != 0) {
              total_size += 5;
            }
            // float z_m_s = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z_m_s()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VelocityBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VelocityBody*>(&to_msg);
  auto& from = static_cast<const VelocityBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.VelocityBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x_m_s()) != 0) {
    _this->_impl_.x_m_s_ = from._impl_.x_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y_m_s()) != 0) {
    _this->_impl_.y_m_s_ = from._impl_.y_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z_m_s()) != 0) {
    _this->_impl_.z_m_s_ = from._impl_.z_m_s_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityBody::CopyFrom(const VelocityBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.VelocityBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VelocityBody::InternalSwap(VelocityBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.z_m_s_)
      + sizeof(VelocityBody::_impl_.z_m_s_)
      - PROTOBUF_FIELD_OFFSET(VelocityBody, _impl_.x_m_s_)>(
          reinterpret_cast<char*>(&_impl_.x_m_s_),
          reinterpret_cast<char*>(&other->_impl_.x_m_s_));
}

::google::protobuf::Metadata VelocityBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionBody::_Internal {
 public:
};

PositionBody::PositionBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.PositionBody)
}
PositionBody::PositionBody(
    ::google::protobuf::Arena* arena, const PositionBody& from)
    : PositionBody(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PositionBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_m_),
           0,
           offsetof(Impl_, z_m_) -
               offsetof(Impl_, x_m_) +
               sizeof(Impl_::z_m_));
}
PositionBody::~PositionBody() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.PositionBody)
  SharedDtor(*this);
}
inline void PositionBody::SharedDtor(MessageLite& self) {
  PositionBody& this_ = static_cast<PositionBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PositionBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionBody(arena);
}
constexpr auto PositionBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionBody),
                                            alignof(PositionBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionBody>(), &PositionBody::ByteSizeLong,
            &PositionBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionBody, _impl_._cached_size_),
        false,
    },
    &PositionBody::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PositionBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x_m = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.x_m_)}},
    // float y_m = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.y_m_)}},
    // float z_m = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.z_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x_m = 1;
    {PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.x_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y_m = 2;
    {PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.y_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z_m = 3;
    {PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.z_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PositionBody::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.PositionBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_m_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_m_) -
      reinterpret_cast<char*>(&_impl_.x_m_)) + sizeof(_impl_.z_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionBody& this_ = static_cast<const PositionBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.PositionBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x_m = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x_m(), target);
          }

          // float y_m = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y_m(), target);
          }

          // float z_m = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.PositionBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionBody::ByteSizeLong(const MessageLite& base) {
          const PositionBody& this_ = static_cast<const PositionBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionBody::ByteSizeLong() const {
          const PositionBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.PositionBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x_m = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x_m()) != 0) {
              total_size += 5;
            }
            // float y_m = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y_m()) != 0) {
              total_size += 5;
            }
            // float z_m = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionBody*>(&to_msg);
  auto& from = static_cast<const PositionBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.PositionBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x_m()) != 0) {
    _this->_impl_.x_m_ = from._impl_.x_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y_m()) != 0) {
    _this->_impl_.y_m_ = from._impl_.y_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z_m()) != 0) {
    _this->_impl_.z_m_ = from._impl_.z_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionBody::CopyFrom(const PositionBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.PositionBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionBody::InternalSwap(PositionBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.z_m_)
      + sizeof(PositionBody::_impl_.z_m_)
      - PROTOBUF_FIELD_OFFSET(PositionBody, _impl_.x_m_)>(
          reinterpret_cast<char*>(&_impl_.x_m_),
          reinterpret_cast<char*>(&other->_impl_.x_m_));
}

::google::protobuf::Metadata PositionBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Odometry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Odometry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Odometry, _impl_._has_bits_);
};

Odometry::Odometry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Odometry)
}
inline PROTOBUF_NDEBUG_INLINE Odometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::Odometry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Odometry::Odometry(
    ::google::protobuf::Arena* arena,
    const Odometry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Odometry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::PositionBody>(
                              arena, *from._impl_.position_body_)
                        : nullptr;
  _impl_.q_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Quaternion>(
                              arena, *from._impl_.q_)
                        : nullptr;
  _impl_.velocity_body_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::VelocityBody>(
                              arena, *from._impl_.velocity_body_)
                        : nullptr;
  _impl_.angular_velocity_body_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AngularVelocityBody>(
                              arena, *from._impl_.angular_velocity_body_)
                        : nullptr;
  _impl_.pose_covariance_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Covariance>(
                              arena, *from._impl_.pose_covariance_)
                        : nullptr;
  _impl_.velocity_covariance_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Covariance>(
                              arena, *from._impl_.velocity_covariance_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_usec_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_usec_),
           offsetof(Impl_, child_frame_id_) -
               offsetof(Impl_, time_usec_) +
               sizeof(Impl_::child_frame_id_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.Odometry)
}
inline PROTOBUF_NDEBUG_INLINE Odometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Odometry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_body_),
           0,
           offsetof(Impl_, child_frame_id_) -
               offsetof(Impl_, position_body_) +
               sizeof(Impl_::child_frame_id_));
}
Odometry::~Odometry() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Odometry)
  SharedDtor(*this);
}
inline void Odometry::SharedDtor(MessageLite& self) {
  Odometry& this_ = static_cast<Odometry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_body_;
  delete this_._impl_.q_;
  delete this_._impl_.velocity_body_;
  delete this_._impl_.angular_velocity_body_;
  delete this_._impl_.pose_covariance_;
  delete this_._impl_.velocity_covariance_;
  this_._impl_.~Impl_();
}

inline void* Odometry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Odometry(arena);
}
constexpr auto Odometry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Odometry),
                                            alignof(Odometry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Odometry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Odometry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Odometry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Odometry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Odometry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Odometry>(), &Odometry::ByteSizeLong,
            &Odometry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Odometry, _impl_._cached_size_),
        false,
    },
    &Odometry::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Odometry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 6, 0, 2> Odometry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Odometry, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Odometry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 time_usec = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Odometry, _impl_.time_usec_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.time_usec_)}},
    // .mavsdk.rpc.telemetry.Odometry.MavFrame frame_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Odometry, _impl_.frame_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.frame_id_)}},
    // .mavsdk.rpc.telemetry.Odometry.MavFrame child_frame_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Odometry, _impl_.child_frame_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.child_frame_id_)}},
    // .mavsdk.rpc.telemetry.PositionBody position_body = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.position_body_)}},
    // .mavsdk.rpc.telemetry.Quaternion q = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.q_)}},
    // .mavsdk.rpc.telemetry.VelocityBody velocity_body = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.velocity_body_)}},
    // .mavsdk.rpc.telemetry.AngularVelocityBody angular_velocity_body = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.angular_velocity_body_)}},
    // .mavsdk.rpc.telemetry.Covariance pose_covariance = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.pose_covariance_)}},
    // .mavsdk.rpc.telemetry.Covariance velocity_covariance = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 5, PROTOBUF_FIELD_OFFSET(Odometry, _impl_.velocity_covariance_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 time_usec = 1;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.time_usec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .mavsdk.rpc.telemetry.Odometry.MavFrame frame_id = 2;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.frame_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.telemetry.Odometry.MavFrame child_frame_id = 3;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.child_frame_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.telemetry.PositionBody position_body = 4;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.position_body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.Quaternion q = 5;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.q_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.VelocityBody velocity_body = 6;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.velocity_body_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.AngularVelocityBody angular_velocity_body = 7;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.angular_velocity_body_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.Covariance pose_covariance = 8;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.pose_covariance_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.Covariance velocity_covariance = 9;
    {PROTOBUF_FIELD_OFFSET(Odometry, _impl_.velocity_covariance_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionBody>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Quaternion>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VelocityBody>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AngularVelocityBody>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Covariance>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Covariance>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Odometry::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Odometry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_body_ != nullptr);
      _impl_.position_body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.q_ != nullptr);
      _impl_.q_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.velocity_body_ != nullptr);
      _impl_.velocity_body_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.angular_velocity_body_ != nullptr);
      _impl_.angular_velocity_body_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.pose_covariance_ != nullptr);
      _impl_.pose_covariance_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.velocity_covariance_ != nullptr);
      _impl_.velocity_covariance_->Clear();
    }
  }
  ::memset(&_impl_.time_usec_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.child_frame_id_) -
      reinterpret_cast<char*>(&_impl_.time_usec_)) + sizeof(_impl_.child_frame_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Odometry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Odometry& this_ = static_cast<const Odometry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Odometry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Odometry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Odometry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 time_usec = 1;
          if (this_._internal_time_usec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_time_usec(), target);
          }

          // .mavsdk.rpc.telemetry.Odometry.MavFrame frame_id = 2;
          if (this_._internal_frame_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_frame_id(), target);
          }

          // .mavsdk.rpc.telemetry.Odometry.MavFrame child_frame_id = 3;
          if (this_._internal_child_frame_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_child_frame_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.PositionBody position_body = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.position_body_, this_._impl_.position_body_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.Quaternion q = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.q_, this_._impl_.q_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.VelocityBody velocity_body = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.velocity_body_, this_._impl_.velocity_body_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.AngularVelocityBody angular_velocity_body = 7;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.angular_velocity_body_, this_._impl_.angular_velocity_body_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.Covariance pose_covariance = 8;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.pose_covariance_, this_._impl_.pose_covariance_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.Covariance velocity_covariance = 9;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.velocity_covariance_, this_._impl_.velocity_covariance_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Odometry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Odometry::ByteSizeLong(const MessageLite& base) {
          const Odometry& this_ = static_cast<const Odometry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Odometry::ByteSizeLong() const {
          const Odometry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Odometry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .mavsdk.rpc.telemetry.PositionBody position_body = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_body_);
            }
            // .mavsdk.rpc.telemetry.Quaternion q = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.q_);
            }
            // .mavsdk.rpc.telemetry.VelocityBody velocity_body = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_body_);
            }
            // .mavsdk.rpc.telemetry.AngularVelocityBody angular_velocity_body = 7;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angular_velocity_body_);
            }
            // .mavsdk.rpc.telemetry.Covariance pose_covariance = 8;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pose_covariance_);
            }
            // .mavsdk.rpc.telemetry.Covariance velocity_covariance = 9;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_covariance_);
            }
          }
           {
            // uint64 time_usec = 1;
            if (this_._internal_time_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_time_usec());
            }
            // .mavsdk.rpc.telemetry.Odometry.MavFrame frame_id = 2;
            if (this_._internal_frame_id() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_frame_id());
            }
            // .mavsdk.rpc.telemetry.Odometry.MavFrame child_frame_id = 3;
            if (this_._internal_child_frame_id() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_child_frame_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Odometry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Odometry*>(&to_msg);
  auto& from = static_cast<const Odometry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Odometry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_body_ != nullptr);
      if (_this->_impl_.position_body_ == nullptr) {
        _this->_impl_.position_body_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::PositionBody>(arena, *from._impl_.position_body_);
      } else {
        _this->_impl_.position_body_->MergeFrom(*from._impl_.position_body_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.q_ != nullptr);
      if (_this->_impl_.q_ == nullptr) {
        _this->_impl_.q_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Quaternion>(arena, *from._impl_.q_);
      } else {
        _this->_impl_.q_->MergeFrom(*from._impl_.q_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.velocity_body_ != nullptr);
      if (_this->_impl_.velocity_body_ == nullptr) {
        _this->_impl_.velocity_body_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::VelocityBody>(arena, *from._impl_.velocity_body_);
      } else {
        _this->_impl_.velocity_body_->MergeFrom(*from._impl_.velocity_body_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.angular_velocity_body_ != nullptr);
      if (_this->_impl_.angular_velocity_body_ == nullptr) {
        _this->_impl_.angular_velocity_body_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AngularVelocityBody>(arena, *from._impl_.angular_velocity_body_);
      } else {
        _this->_impl_.angular_velocity_body_->MergeFrom(*from._impl_.angular_velocity_body_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.pose_covariance_ != nullptr);
      if (_this->_impl_.pose_covariance_ == nullptr) {
        _this->_impl_.pose_covariance_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Covariance>(arena, *from._impl_.pose_covariance_);
      } else {
        _this->_impl_.pose_covariance_->MergeFrom(*from._impl_.pose_covariance_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.velocity_covariance_ != nullptr);
      if (_this->_impl_.velocity_covariance_ == nullptr) {
        _this->_impl_.velocity_covariance_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::Covariance>(arena, *from._impl_.velocity_covariance_);
      } else {
        _this->_impl_.velocity_covariance_->MergeFrom(*from._impl_.velocity_covariance_);
      }
    }
  }
  if (from._internal_time_usec() != 0) {
    _this->_impl_.time_usec_ = from._impl_.time_usec_;
  }
  if (from._internal_frame_id() != 0) {
    _this->_impl_.frame_id_ = from._impl_.frame_id_;
  }
  if (from._internal_child_frame_id() != 0) {
    _this->_impl_.child_frame_id_ = from._impl_.child_frame_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Odometry::CopyFrom(const Odometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Odometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Odometry::InternalSwap(Odometry* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Odometry, _impl_.child_frame_id_)
      + sizeof(Odometry::_impl_.child_frame_id_)
      - PROTOBUF_FIELD_OFFSET(Odometry, _impl_.position_body_)>(
          reinterpret_cast<char*>(&_impl_.position_body_),
          reinterpret_cast<char*>(&other->_impl_.position_body_));
}

::google::protobuf::Metadata Odometry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DistanceSensor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DistanceSensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_._has_bits_);
};

DistanceSensor::DistanceSensor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.DistanceSensor)
}
inline PROTOBUF_NDEBUG_INLINE DistanceSensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::DistanceSensor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DistanceSensor::DistanceSensor(
    ::google::protobuf::Arena* arena,
    const DistanceSensor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DistanceSensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.orientation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::EulerAngle>(
                              arena, *from._impl_.orientation_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_distance_m_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, minimum_distance_m_),
           offsetof(Impl_, current_distance_m_) -
               offsetof(Impl_, minimum_distance_m_) +
               sizeof(Impl_::current_distance_m_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.DistanceSensor)
}
inline PROTOBUF_NDEBUG_INLINE DistanceSensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DistanceSensor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, orientation_),
           0,
           offsetof(Impl_, current_distance_m_) -
               offsetof(Impl_, orientation_) +
               sizeof(Impl_::current_distance_m_));
}
DistanceSensor::~DistanceSensor() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.DistanceSensor)
  SharedDtor(*this);
}
inline void DistanceSensor::SharedDtor(MessageLite& self) {
  DistanceSensor& this_ = static_cast<DistanceSensor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.orientation_;
  this_._impl_.~Impl_();
}

inline void* DistanceSensor::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DistanceSensor(arena);
}
constexpr auto DistanceSensor::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DistanceSensor),
                                            alignof(DistanceSensor));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DistanceSensor::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DistanceSensor_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DistanceSensor::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DistanceSensor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DistanceSensor::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DistanceSensor>(), &DistanceSensor::ByteSizeLong,
            &DistanceSensor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_._cached_size_),
        false,
    },
    &DistanceSensor::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DistanceSensor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> DistanceSensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::DistanceSensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.EulerAngle orientation = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.orientation_)}},
    // float minimum_distance_m = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.minimum_distance_m_)}},
    // float maximum_distance_m = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.maximum_distance_m_)}},
    // float current_distance_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.current_distance_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float minimum_distance_m = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.minimum_distance_m_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float maximum_distance_m = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.maximum_distance_m_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float current_distance_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.current_distance_m_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.telemetry.EulerAngle orientation = 4;
    {PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.orientation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::EulerAngle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DistanceSensor::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.DistanceSensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.orientation_ != nullptr);
    _impl_.orientation_->Clear();
  }
  ::memset(&_impl_.minimum_distance_m_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.current_distance_m_) -
      reinterpret_cast<char*>(&_impl_.minimum_distance_m_)) + sizeof(_impl_.current_distance_m_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DistanceSensor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DistanceSensor& this_ = static_cast<const DistanceSensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DistanceSensor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DistanceSensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.DistanceSensor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float minimum_distance_m = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_minimum_distance_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_minimum_distance_m(), target);
          }

          // float maximum_distance_m = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_maximum_distance_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_maximum_distance_m(), target);
          }

          // float current_distance_m = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_current_distance_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_current_distance_m(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.EulerAngle orientation = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.orientation_, this_._impl_.orientation_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.DistanceSensor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DistanceSensor::ByteSizeLong(const MessageLite& base) {
          const DistanceSensor& this_ = static_cast<const DistanceSensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DistanceSensor::ByteSizeLong() const {
          const DistanceSensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.DistanceSensor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .mavsdk.rpc.telemetry.EulerAngle orientation = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.orientation_);
            }
          }
           {
            // float minimum_distance_m = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_minimum_distance_m()) != 0) {
              total_size += 5;
            }
            // float maximum_distance_m = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_maximum_distance_m()) != 0) {
              total_size += 5;
            }
            // float current_distance_m = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_current_distance_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DistanceSensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DistanceSensor*>(&to_msg);
  auto& from = static_cast<const DistanceSensor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.DistanceSensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.orientation_ != nullptr);
    if (_this->_impl_.orientation_ == nullptr) {
      _this->_impl_.orientation_ =
          ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::EulerAngle>(arena, *from._impl_.orientation_);
    } else {
      _this->_impl_.orientation_->MergeFrom(*from._impl_.orientation_);
    }
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_minimum_distance_m()) != 0) {
    _this->_impl_.minimum_distance_m_ = from._impl_.minimum_distance_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_maximum_distance_m()) != 0) {
    _this->_impl_.maximum_distance_m_ = from._impl_.maximum_distance_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_current_distance_m()) != 0) {
    _this->_impl_.current_distance_m_ = from._impl_.current_distance_m_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistanceSensor::CopyFrom(const DistanceSensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.DistanceSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DistanceSensor::InternalSwap(DistanceSensor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.current_distance_m_)
      + sizeof(DistanceSensor::_impl_.current_distance_m_)
      - PROTOBUF_FIELD_OFFSET(DistanceSensor, _impl_.orientation_)>(
          reinterpret_cast<char*>(&_impl_.orientation_),
          reinterpret_cast<char*>(&other->_impl_.orientation_));
}

::google::protobuf::Metadata DistanceSensor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScaledPressure::_Internal {
 public:
};

ScaledPressure::ScaledPressure(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.ScaledPressure)
}
ScaledPressure::ScaledPressure(
    ::google::protobuf::Arena* arena, const ScaledPressure& from)
    : ScaledPressure(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScaledPressure::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScaledPressure::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_us_),
           0,
           offsetof(Impl_, differential_pressure_temperature_deg_) -
               offsetof(Impl_, timestamp_us_) +
               sizeof(Impl_::differential_pressure_temperature_deg_));
}
ScaledPressure::~ScaledPressure() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.ScaledPressure)
  SharedDtor(*this);
}
inline void ScaledPressure::SharedDtor(MessageLite& self) {
  ScaledPressure& this_ = static_cast<ScaledPressure&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ScaledPressure::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScaledPressure(arena);
}
constexpr auto ScaledPressure::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScaledPressure),
                                            alignof(ScaledPressure));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScaledPressure::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScaledPressure_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScaledPressure::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScaledPressure>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScaledPressure::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScaledPressure>(), &ScaledPressure::ByteSizeLong,
            &ScaledPressure::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_._cached_size_),
        false,
    },
    &ScaledPressure::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScaledPressure::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> ScaledPressure::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::ScaledPressure>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp_us = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ScaledPressure, _impl_.timestamp_us_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.timestamp_us_)}},
    // float absolute_pressure_hpa = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.absolute_pressure_hpa_)}},
    // float differential_pressure_hpa = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.differential_pressure_hpa_)}},
    // float temperature_deg = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.temperature_deg_)}},
    // float differential_pressure_temperature_deg = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.differential_pressure_temperature_deg_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp_us = 1;
    {PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.timestamp_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // float absolute_pressure_hpa = 2;
    {PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.absolute_pressure_hpa_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float differential_pressure_hpa = 3;
    {PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.differential_pressure_hpa_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float temperature_deg = 4;
    {PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.temperature_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float differential_pressure_temperature_deg = 5;
    {PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.differential_pressure_temperature_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ScaledPressure::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.ScaledPressure)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_us_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.differential_pressure_temperature_deg_) -
      reinterpret_cast<char*>(&_impl_.timestamp_us_)) + sizeof(_impl_.differential_pressure_temperature_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScaledPressure::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScaledPressure& this_ = static_cast<const ScaledPressure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScaledPressure::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScaledPressure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.ScaledPressure)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp_us = 1;
          if (this_._internal_timestamp_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp_us(), target);
          }

          // float absolute_pressure_hpa = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_pressure_hpa()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_absolute_pressure_hpa(), target);
          }

          // float differential_pressure_hpa = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_differential_pressure_hpa()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_differential_pressure_hpa(), target);
          }

          // float temperature_deg = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_temperature_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_temperature_deg(), target);
          }

          // float differential_pressure_temperature_deg = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_differential_pressure_temperature_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_differential_pressure_temperature_deg(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.ScaledPressure)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScaledPressure::ByteSizeLong(const MessageLite& base) {
          const ScaledPressure& this_ = static_cast<const ScaledPressure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScaledPressure::ByteSizeLong() const {
          const ScaledPressure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.ScaledPressure)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 timestamp_us = 1;
            if (this_._internal_timestamp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_us());
            }
            // float absolute_pressure_hpa = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_pressure_hpa()) != 0) {
              total_size += 5;
            }
            // float differential_pressure_hpa = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_differential_pressure_hpa()) != 0) {
              total_size += 5;
            }
            // float temperature_deg = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_temperature_deg()) != 0) {
              total_size += 5;
            }
            // float differential_pressure_temperature_deg = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_differential_pressure_temperature_deg()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScaledPressure::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScaledPressure*>(&to_msg);
  auto& from = static_cast<const ScaledPressure&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.ScaledPressure)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp_us() != 0) {
    _this->_impl_.timestamp_us_ = from._impl_.timestamp_us_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_absolute_pressure_hpa()) != 0) {
    _this->_impl_.absolute_pressure_hpa_ = from._impl_.absolute_pressure_hpa_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_differential_pressure_hpa()) != 0) {
    _this->_impl_.differential_pressure_hpa_ = from._impl_.differential_pressure_hpa_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_temperature_deg()) != 0) {
    _this->_impl_.temperature_deg_ = from._impl_.temperature_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_differential_pressure_temperature_deg()) != 0) {
    _this->_impl_.differential_pressure_temperature_deg_ = from._impl_.differential_pressure_temperature_deg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScaledPressure::CopyFrom(const ScaledPressure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.ScaledPressure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScaledPressure::InternalSwap(ScaledPressure* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.differential_pressure_temperature_deg_)
      + sizeof(ScaledPressure::_impl_.differential_pressure_temperature_deg_)
      - PROTOBUF_FIELD_OFFSET(ScaledPressure, _impl_.timestamp_us_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_us_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_us_));
}

::google::protobuf::Metadata ScaledPressure::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionNed::_Internal {
 public:
};

PositionNed::PositionNed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.PositionNed)
}
PositionNed::PositionNed(
    ::google::protobuf::Arena* arena, const PositionNed& from)
    : PositionNed(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PositionNed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionNed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, north_m_),
           0,
           offsetof(Impl_, down_m_) -
               offsetof(Impl_, north_m_) +
               sizeof(Impl_::down_m_));
}
PositionNed::~PositionNed() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.PositionNed)
  SharedDtor(*this);
}
inline void PositionNed::SharedDtor(MessageLite& self) {
  PositionNed& this_ = static_cast<PositionNed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PositionNed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionNed(arena);
}
constexpr auto PositionNed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionNed),
                                            alignof(PositionNed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionNed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionNed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionNed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionNed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionNed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionNed>(), &PositionNed::ByteSizeLong,
            &PositionNed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionNed, _impl_._cached_size_),
        false,
    },
    &PositionNed::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionNed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PositionNed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionNed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float north_m = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.north_m_)}},
    // float east_m = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.east_m_)}},
    // float down_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.down_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float north_m = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.north_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float east_m = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.east_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.down_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PositionNed::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.PositionNed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.north_m_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.down_m_) -
      reinterpret_cast<char*>(&_impl_.north_m_)) + sizeof(_impl_.down_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionNed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionNed& this_ = static_cast<const PositionNed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionNed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionNed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.PositionNed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float north_m = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_north_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_north_m(), target);
          }

          // float east_m = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_east_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_east_m(), target);
          }

          // float down_m = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_down_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_down_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.PositionNed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionNed::ByteSizeLong(const MessageLite& base) {
          const PositionNed& this_ = static_cast<const PositionNed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionNed::ByteSizeLong() const {
          const PositionNed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.PositionNed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float north_m = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_north_m()) != 0) {
              total_size += 5;
            }
            // float east_m = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_east_m()) != 0) {
              total_size += 5;
            }
            // float down_m = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_down_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionNed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionNed*>(&to_msg);
  auto& from = static_cast<const PositionNed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.PositionNed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_north_m()) != 0) {
    _this->_impl_.north_m_ = from._impl_.north_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_east_m()) != 0) {
    _this->_impl_.east_m_ = from._impl_.east_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_down_m()) != 0) {
    _this->_impl_.down_m_ = from._impl_.down_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionNed::CopyFrom(const PositionNed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.PositionNed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionNed::InternalSwap(PositionNed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.down_m_)
      + sizeof(PositionNed::_impl_.down_m_)
      - PROTOBUF_FIELD_OFFSET(PositionNed, _impl_.north_m_)>(
          reinterpret_cast<char*>(&_impl_.north_m_),
          reinterpret_cast<char*>(&other->_impl_.north_m_));
}

::google::protobuf::Metadata PositionNed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VelocityNed::_Internal {
 public:
};

VelocityNed::VelocityNed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.VelocityNed)
}
VelocityNed::VelocityNed(
    ::google::protobuf::Arena* arena, const VelocityNed& from)
    : VelocityNed(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VelocityNed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VelocityNed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, north_m_s_),
           0,
           offsetof(Impl_, down_m_s_) -
               offsetof(Impl_, north_m_s_) +
               sizeof(Impl_::down_m_s_));
}
VelocityNed::~VelocityNed() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.VelocityNed)
  SharedDtor(*this);
}
inline void VelocityNed::SharedDtor(MessageLite& self) {
  VelocityNed& this_ = static_cast<VelocityNed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* VelocityNed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VelocityNed(arena);
}
constexpr auto VelocityNed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VelocityNed),
                                            alignof(VelocityNed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VelocityNed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VelocityNed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VelocityNed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VelocityNed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VelocityNed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VelocityNed>(), &VelocityNed::ByteSizeLong,
            &VelocityNed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_._cached_size_),
        false,
    },
    &VelocityNed::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VelocityNed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> VelocityNed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VelocityNed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float north_m_s = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.north_m_s_)}},
    // float east_m_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.east_m_s_)}},
    // float down_m_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.down_m_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float north_m_s = 1;
    {PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.north_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float east_m_s = 2;
    {PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.east_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m_s = 3;
    {PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.down_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VelocityNed::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.VelocityNed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.north_m_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.down_m_s_) -
      reinterpret_cast<char*>(&_impl_.north_m_s_)) + sizeof(_impl_.down_m_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VelocityNed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VelocityNed& this_ = static_cast<const VelocityNed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VelocityNed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VelocityNed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.VelocityNed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float north_m_s = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_north_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_north_m_s(), target);
          }

          // float east_m_s = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_east_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_east_m_s(), target);
          }

          // float down_m_s = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_down_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_down_m_s(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.VelocityNed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VelocityNed::ByteSizeLong(const MessageLite& base) {
          const VelocityNed& this_ = static_cast<const VelocityNed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VelocityNed::ByteSizeLong() const {
          const VelocityNed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.VelocityNed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float north_m_s = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_north_m_s()) != 0) {
              total_size += 5;
            }
            // float east_m_s = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_east_m_s()) != 0) {
              total_size += 5;
            }
            // float down_m_s = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_down_m_s()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VelocityNed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VelocityNed*>(&to_msg);
  auto& from = static_cast<const VelocityNed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.VelocityNed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_north_m_s()) != 0) {
    _this->_impl_.north_m_s_ = from._impl_.north_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_east_m_s()) != 0) {
    _this->_impl_.east_m_s_ = from._impl_.east_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_down_m_s()) != 0) {
    _this->_impl_.down_m_s_ = from._impl_.down_m_s_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityNed::CopyFrom(const VelocityNed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.VelocityNed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VelocityNed::InternalSwap(VelocityNed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.down_m_s_)
      + sizeof(VelocityNed::_impl_.down_m_s_)
      - PROTOBUF_FIELD_OFFSET(VelocityNed, _impl_.north_m_s_)>(
          reinterpret_cast<char*>(&_impl_.north_m_s_),
          reinterpret_cast<char*>(&other->_impl_.north_m_s_));
}

::google::protobuf::Metadata VelocityNed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionVelocityNed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PositionVelocityNed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_._has_bits_);
};

PositionVelocityNed::PositionVelocityNed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.PositionVelocityNed)
}
inline PROTOBUF_NDEBUG_INLINE PositionVelocityNed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::PositionVelocityNed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PositionVelocityNed::PositionVelocityNed(
    ::google::protobuf::Arena* arena,
    const PositionVelocityNed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionVelocityNed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::PositionNed>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.velocity_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::VelocityNed>(
                              arena, *from._impl_.velocity_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.PositionVelocityNed)
}
inline PROTOBUF_NDEBUG_INLINE PositionVelocityNed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionVelocityNed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, velocity_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::velocity_));
}
PositionVelocityNed::~PositionVelocityNed() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.PositionVelocityNed)
  SharedDtor(*this);
}
inline void PositionVelocityNed::SharedDtor(MessageLite& self) {
  PositionVelocityNed& this_ = static_cast<PositionVelocityNed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.position_;
  delete this_._impl_.velocity_;
  this_._impl_.~Impl_();
}

inline void* PositionVelocityNed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionVelocityNed(arena);
}
constexpr auto PositionVelocityNed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionVelocityNed),
                                            alignof(PositionVelocityNed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionVelocityNed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionVelocityNed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionVelocityNed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionVelocityNed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionVelocityNed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionVelocityNed>(), &PositionVelocityNed::ByteSizeLong,
            &PositionVelocityNed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_._cached_size_),
        false,
    },
    &PositionVelocityNed::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionVelocityNed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PositionVelocityNed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionVelocityNed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mavsdk.rpc.telemetry.VelocityNed velocity = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_.velocity_)}},
    // .mavsdk.rpc.telemetry.PositionNed position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.PositionNed position = 1;
    {PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.VelocityNed velocity = 2;
    {PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_.velocity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::PositionNed>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::VelocityNed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PositionVelocityNed::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.PositionVelocityNed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionVelocityNed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionVelocityNed& this_ = static_cast<const PositionVelocityNed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionVelocityNed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionVelocityNed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.PositionVelocityNed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.PositionNed position = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.VelocityNed velocity = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.velocity_, this_._impl_.velocity_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.PositionVelocityNed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionVelocityNed::ByteSizeLong(const MessageLite& base) {
          const PositionVelocityNed& this_ = static_cast<const PositionVelocityNed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionVelocityNed::ByteSizeLong() const {
          const PositionVelocityNed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.PositionVelocityNed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .mavsdk.rpc.telemetry.PositionNed position = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
            // .mavsdk.rpc.telemetry.VelocityNed velocity = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionVelocityNed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionVelocityNed*>(&to_msg);
  auto& from = static_cast<const PositionVelocityNed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.PositionVelocityNed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::PositionNed>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::VelocityNed>(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionVelocityNed::CopyFrom(const PositionVelocityNed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.PositionVelocityNed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionVelocityNed::InternalSwap(PositionVelocityNed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_.velocity_)
      + sizeof(PositionVelocityNed::_impl_.velocity_)
      - PROTOBUF_FIELD_OFFSET(PositionVelocityNed, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata PositionVelocityNed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GroundTruth::_Internal {
 public:
};

GroundTruth::GroundTruth(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GroundTruth)
}
GroundTruth::GroundTruth(
    ::google::protobuf::Arena* arena, const GroundTruth& from)
    : GroundTruth(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GroundTruth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GroundTruth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, absolute_altitude_m_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::absolute_altitude_m_));
}
GroundTruth::~GroundTruth() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.GroundTruth)
  SharedDtor(*this);
}
inline void GroundTruth::SharedDtor(MessageLite& self) {
  GroundTruth& this_ = static_cast<GroundTruth&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GroundTruth::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GroundTruth(arena);
}
constexpr auto GroundTruth::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GroundTruth),
                                            alignof(GroundTruth));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GroundTruth::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GroundTruth_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GroundTruth::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GroundTruth>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GroundTruth::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GroundTruth>(), &GroundTruth::ByteSizeLong,
            &GroundTruth::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_._cached_size_),
        false,
    },
    &GroundTruth::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GroundTruth::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> GroundTruth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GroundTruth>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.latitude_deg_)}},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.longitude_deg_)}},
    // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.absolute_altitude_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.absolute_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GroundTruth::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.GroundTruth)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.absolute_altitude_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.absolute_altitude_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GroundTruth::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GroundTruth& this_ = static_cast<const GroundTruth&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GroundTruth::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GroundTruth& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.GroundTruth)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_latitude_deg(), target);
          }

          // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_longitude_deg(), target);
          }

          // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_absolute_altitude_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.GroundTruth)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GroundTruth::ByteSizeLong(const MessageLite& base) {
          const GroundTruth& this_ = static_cast<const GroundTruth&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GroundTruth::ByteSizeLong() const {
          const GroundTruth& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.GroundTruth)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
              total_size += 9;
            }
            // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
              total_size += 9;
            }
            // float absolute_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GroundTruth::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GroundTruth*>(&to_msg);
  auto& from = static_cast<const GroundTruth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.GroundTruth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_latitude_deg()) != 0) {
    _this->_impl_.latitude_deg_ = from._impl_.latitude_deg_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude_deg()) != 0) {
    _this->_impl_.longitude_deg_ = from._impl_.longitude_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_absolute_altitude_m()) != 0) {
    _this->_impl_.absolute_altitude_m_ = from._impl_.absolute_altitude_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroundTruth::CopyFrom(const GroundTruth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.GroundTruth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GroundTruth::InternalSwap(GroundTruth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.absolute_altitude_m_)
      + sizeof(GroundTruth::_impl_.absolute_altitude_m_)
      - PROTOBUF_FIELD_OFFSET(GroundTruth, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata GroundTruth::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FixedwingMetrics::_Internal {
 public:
};

FixedwingMetrics::FixedwingMetrics(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.FixedwingMetrics)
}
FixedwingMetrics::FixedwingMetrics(
    ::google::protobuf::Arena* arena, const FixedwingMetrics& from)
    : FixedwingMetrics(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FixedwingMetrics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FixedwingMetrics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, airspeed_m_s_),
           0,
           offsetof(Impl_, absolute_altitude_m_) -
               offsetof(Impl_, airspeed_m_s_) +
               sizeof(Impl_::absolute_altitude_m_));
}
FixedwingMetrics::~FixedwingMetrics() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.FixedwingMetrics)
  SharedDtor(*this);
}
inline void FixedwingMetrics::SharedDtor(MessageLite& self) {
  FixedwingMetrics& this_ = static_cast<FixedwingMetrics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FixedwingMetrics::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FixedwingMetrics(arena);
}
constexpr auto FixedwingMetrics::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FixedwingMetrics),
                                            alignof(FixedwingMetrics));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FixedwingMetrics::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FixedwingMetrics_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FixedwingMetrics::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FixedwingMetrics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FixedwingMetrics::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FixedwingMetrics>(), &FixedwingMetrics::ByteSizeLong,
            &FixedwingMetrics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_._cached_size_),
        false,
    },
    &FixedwingMetrics::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FixedwingMetrics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> FixedwingMetrics::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::FixedwingMetrics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float airspeed_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.airspeed_m_s_)}},
    // float throttle_percentage = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.throttle_percentage_)}},
    // float climb_rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.climb_rate_m_s_)}},
    // float groundspeed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.groundspeed_m_s_)}},
    // float heading_deg = 5 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.heading_deg_)}},
    // float absolute_altitude_m = 6 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.absolute_altitude_m_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float airspeed_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.airspeed_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float throttle_percentage = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.throttle_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float climb_rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.climb_rate_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float groundspeed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.groundspeed_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float heading_deg = 5 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.heading_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float absolute_altitude_m = 6 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.absolute_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FixedwingMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.FixedwingMetrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.airspeed_m_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.absolute_altitude_m_) -
      reinterpret_cast<char*>(&_impl_.airspeed_m_s_)) + sizeof(_impl_.absolute_altitude_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FixedwingMetrics::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FixedwingMetrics& this_ = static_cast<const FixedwingMetrics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FixedwingMetrics::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FixedwingMetrics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.FixedwingMetrics)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float airspeed_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_airspeed_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_airspeed_m_s(), target);
          }

          // float throttle_percentage = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_throttle_percentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_throttle_percentage(), target);
          }

          // float climb_rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_climb_rate_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_climb_rate_m_s(), target);
          }

          // float groundspeed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_groundspeed_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_groundspeed_m_s(), target);
          }

          // float heading_deg = 5 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_heading_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_heading_deg(), target);
          }

          // float absolute_altitude_m = 6 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_absolute_altitude_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.FixedwingMetrics)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FixedwingMetrics::ByteSizeLong(const MessageLite& base) {
          const FixedwingMetrics& this_ = static_cast<const FixedwingMetrics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FixedwingMetrics::ByteSizeLong() const {
          const FixedwingMetrics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.FixedwingMetrics)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float airspeed_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_airspeed_m_s()) != 0) {
              total_size += 5;
            }
            // float throttle_percentage = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_throttle_percentage()) != 0) {
              total_size += 5;
            }
            // float climb_rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_climb_rate_m_s()) != 0) {
              total_size += 5;
            }
            // float groundspeed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_groundspeed_m_s()) != 0) {
              total_size += 5;
            }
            // float heading_deg = 5 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_heading_deg()) != 0) {
              total_size += 5;
            }
            // float absolute_altitude_m = 6 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_absolute_altitude_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FixedwingMetrics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FixedwingMetrics*>(&to_msg);
  auto& from = static_cast<const FixedwingMetrics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.FixedwingMetrics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_airspeed_m_s()) != 0) {
    _this->_impl_.airspeed_m_s_ = from._impl_.airspeed_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_throttle_percentage()) != 0) {
    _this->_impl_.throttle_percentage_ = from._impl_.throttle_percentage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_climb_rate_m_s()) != 0) {
    _this->_impl_.climb_rate_m_s_ = from._impl_.climb_rate_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_groundspeed_m_s()) != 0) {
    _this->_impl_.groundspeed_m_s_ = from._impl_.groundspeed_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_heading_deg()) != 0) {
    _this->_impl_.heading_deg_ = from._impl_.heading_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_absolute_altitude_m()) != 0) {
    _this->_impl_.absolute_altitude_m_ = from._impl_.absolute_altitude_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FixedwingMetrics::CopyFrom(const FixedwingMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.FixedwingMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FixedwingMetrics::InternalSwap(FixedwingMetrics* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.absolute_altitude_m_)
      + sizeof(FixedwingMetrics::_impl_.absolute_altitude_m_)
      - PROTOBUF_FIELD_OFFSET(FixedwingMetrics, _impl_.airspeed_m_s_)>(
          reinterpret_cast<char*>(&_impl_.airspeed_m_s_),
          reinterpret_cast<char*>(&other->_impl_.airspeed_m_s_));
}

::google::protobuf::Metadata FixedwingMetrics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccelerationFrd::_Internal {
 public:
};

AccelerationFrd::AccelerationFrd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AccelerationFrd)
}
AccelerationFrd::AccelerationFrd(
    ::google::protobuf::Arena* arena, const AccelerationFrd& from)
    : AccelerationFrd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AccelerationFrd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AccelerationFrd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_m_s2_),
           0,
           offsetof(Impl_, down_m_s2_) -
               offsetof(Impl_, forward_m_s2_) +
               sizeof(Impl_::down_m_s2_));
}
AccelerationFrd::~AccelerationFrd() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AccelerationFrd)
  SharedDtor(*this);
}
inline void AccelerationFrd::SharedDtor(MessageLite& self) {
  AccelerationFrd& this_ = static_cast<AccelerationFrd&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AccelerationFrd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AccelerationFrd(arena);
}
constexpr auto AccelerationFrd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AccelerationFrd),
                                            alignof(AccelerationFrd));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AccelerationFrd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AccelerationFrd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AccelerationFrd::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AccelerationFrd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AccelerationFrd::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AccelerationFrd>(), &AccelerationFrd::ByteSizeLong,
            &AccelerationFrd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_._cached_size_),
        false,
    },
    &AccelerationFrd::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AccelerationFrd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AccelerationFrd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AccelerationFrd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float forward_m_s2 = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.forward_m_s2_)}},
    // float right_m_s2 = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.right_m_s2_)}},
    // float down_m_s2 = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.down_m_s2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float forward_m_s2 = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.forward_m_s2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float right_m_s2 = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.right_m_s2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m_s2 = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.down_m_s2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AccelerationFrd::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AccelerationFrd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.forward_m_s2_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.down_m_s2_) -
      reinterpret_cast<char*>(&_impl_.forward_m_s2_)) + sizeof(_impl_.down_m_s2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AccelerationFrd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AccelerationFrd& this_ = static_cast<const AccelerationFrd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AccelerationFrd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AccelerationFrd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AccelerationFrd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float forward_m_s2 = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_forward_m_s2()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_forward_m_s2(), target);
          }

          // float right_m_s2 = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_right_m_s2()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_right_m_s2(), target);
          }

          // float down_m_s2 = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_down_m_s2()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_down_m_s2(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AccelerationFrd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AccelerationFrd::ByteSizeLong(const MessageLite& base) {
          const AccelerationFrd& this_ = static_cast<const AccelerationFrd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AccelerationFrd::ByteSizeLong() const {
          const AccelerationFrd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AccelerationFrd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float forward_m_s2 = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_forward_m_s2()) != 0) {
              total_size += 5;
            }
            // float right_m_s2 = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_right_m_s2()) != 0) {
              total_size += 5;
            }
            // float down_m_s2 = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_down_m_s2()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AccelerationFrd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccelerationFrd*>(&to_msg);
  auto& from = static_cast<const AccelerationFrd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AccelerationFrd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_forward_m_s2()) != 0) {
    _this->_impl_.forward_m_s2_ = from._impl_.forward_m_s2_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_right_m_s2()) != 0) {
    _this->_impl_.right_m_s2_ = from._impl_.right_m_s2_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_down_m_s2()) != 0) {
    _this->_impl_.down_m_s2_ = from._impl_.down_m_s2_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccelerationFrd::CopyFrom(const AccelerationFrd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AccelerationFrd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccelerationFrd::InternalSwap(AccelerationFrd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.down_m_s2_)
      + sizeof(AccelerationFrd::_impl_.down_m_s2_)
      - PROTOBUF_FIELD_OFFSET(AccelerationFrd, _impl_.forward_m_s2_)>(
          reinterpret_cast<char*>(&_impl_.forward_m_s2_),
          reinterpret_cast<char*>(&other->_impl_.forward_m_s2_));
}

::google::protobuf::Metadata AccelerationFrd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AngularVelocityFrd::_Internal {
 public:
};

AngularVelocityFrd::AngularVelocityFrd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.AngularVelocityFrd)
}
AngularVelocityFrd::AngularVelocityFrd(
    ::google::protobuf::Arena* arena, const AngularVelocityFrd& from)
    : AngularVelocityFrd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AngularVelocityFrd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AngularVelocityFrd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_rad_s_),
           0,
           offsetof(Impl_, down_rad_s_) -
               offsetof(Impl_, forward_rad_s_) +
               sizeof(Impl_::down_rad_s_));
}
AngularVelocityFrd::~AngularVelocityFrd() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.AngularVelocityFrd)
  SharedDtor(*this);
}
inline void AngularVelocityFrd::SharedDtor(MessageLite& self) {
  AngularVelocityFrd& this_ = static_cast<AngularVelocityFrd&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AngularVelocityFrd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AngularVelocityFrd(arena);
}
constexpr auto AngularVelocityFrd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AngularVelocityFrd),
                                            alignof(AngularVelocityFrd));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AngularVelocityFrd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AngularVelocityFrd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AngularVelocityFrd::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AngularVelocityFrd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AngularVelocityFrd::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AngularVelocityFrd>(), &AngularVelocityFrd::ByteSizeLong,
            &AngularVelocityFrd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_._cached_size_),
        false,
    },
    &AngularVelocityFrd::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AngularVelocityFrd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AngularVelocityFrd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AngularVelocityFrd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float forward_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.forward_rad_s_)}},
    // float right_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.right_rad_s_)}},
    // float down_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.down_rad_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float forward_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.forward_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float right_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.right_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.down_rad_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AngularVelocityFrd::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.AngularVelocityFrd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.forward_rad_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.down_rad_s_) -
      reinterpret_cast<char*>(&_impl_.forward_rad_s_)) + sizeof(_impl_.down_rad_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AngularVelocityFrd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AngularVelocityFrd& this_ = static_cast<const AngularVelocityFrd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AngularVelocityFrd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AngularVelocityFrd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.AngularVelocityFrd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float forward_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_forward_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_forward_rad_s(), target);
          }

          // float right_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_right_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_right_rad_s(), target);
          }

          // float down_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_down_rad_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_down_rad_s(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.AngularVelocityFrd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AngularVelocityFrd::ByteSizeLong(const MessageLite& base) {
          const AngularVelocityFrd& this_ = static_cast<const AngularVelocityFrd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AngularVelocityFrd::ByteSizeLong() const {
          const AngularVelocityFrd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.AngularVelocityFrd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float forward_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_forward_rad_s()) != 0) {
              total_size += 5;
            }
            // float right_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_right_rad_s()) != 0) {
              total_size += 5;
            }
            // float down_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_down_rad_s()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AngularVelocityFrd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AngularVelocityFrd*>(&to_msg);
  auto& from = static_cast<const AngularVelocityFrd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.AngularVelocityFrd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_forward_rad_s()) != 0) {
    _this->_impl_.forward_rad_s_ = from._impl_.forward_rad_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_right_rad_s()) != 0) {
    _this->_impl_.right_rad_s_ = from._impl_.right_rad_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_down_rad_s()) != 0) {
    _this->_impl_.down_rad_s_ = from._impl_.down_rad_s_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AngularVelocityFrd::CopyFrom(const AngularVelocityFrd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.AngularVelocityFrd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AngularVelocityFrd::InternalSwap(AngularVelocityFrd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.down_rad_s_)
      + sizeof(AngularVelocityFrd::_impl_.down_rad_s_)
      - PROTOBUF_FIELD_OFFSET(AngularVelocityFrd, _impl_.forward_rad_s_)>(
          reinterpret_cast<char*>(&_impl_.forward_rad_s_),
          reinterpret_cast<char*>(&other->_impl_.forward_rad_s_));
}

::google::protobuf::Metadata AngularVelocityFrd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MagneticFieldFrd::_Internal {
 public:
};

MagneticFieldFrd::MagneticFieldFrd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.MagneticFieldFrd)
}
MagneticFieldFrd::MagneticFieldFrd(
    ::google::protobuf::Arena* arena, const MagneticFieldFrd& from)
    : MagneticFieldFrd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MagneticFieldFrd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MagneticFieldFrd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_gauss_),
           0,
           offsetof(Impl_, down_gauss_) -
               offsetof(Impl_, forward_gauss_) +
               sizeof(Impl_::down_gauss_));
}
MagneticFieldFrd::~MagneticFieldFrd() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.MagneticFieldFrd)
  SharedDtor(*this);
}
inline void MagneticFieldFrd::SharedDtor(MessageLite& self) {
  MagneticFieldFrd& this_ = static_cast<MagneticFieldFrd&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MagneticFieldFrd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MagneticFieldFrd(arena);
}
constexpr auto MagneticFieldFrd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MagneticFieldFrd),
                                            alignof(MagneticFieldFrd));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MagneticFieldFrd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MagneticFieldFrd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MagneticFieldFrd::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MagneticFieldFrd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MagneticFieldFrd::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MagneticFieldFrd>(), &MagneticFieldFrd::ByteSizeLong,
            &MagneticFieldFrd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_._cached_size_),
        false,
    },
    &MagneticFieldFrd::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MagneticFieldFrd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MagneticFieldFrd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::MagneticFieldFrd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float forward_gauss = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.forward_gauss_)}},
    // float right_gauss = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.right_gauss_)}},
    // float down_gauss = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.down_gauss_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float forward_gauss = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.forward_gauss_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float right_gauss = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.right_gauss_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_gauss = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.down_gauss_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MagneticFieldFrd::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.MagneticFieldFrd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.forward_gauss_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.down_gauss_) -
      reinterpret_cast<char*>(&_impl_.forward_gauss_)) + sizeof(_impl_.down_gauss_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MagneticFieldFrd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MagneticFieldFrd& this_ = static_cast<const MagneticFieldFrd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MagneticFieldFrd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MagneticFieldFrd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.MagneticFieldFrd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float forward_gauss = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_forward_gauss()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_forward_gauss(), target);
          }

          // float right_gauss = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_right_gauss()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_right_gauss(), target);
          }

          // float down_gauss = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_down_gauss()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_down_gauss(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.MagneticFieldFrd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MagneticFieldFrd::ByteSizeLong(const MessageLite& base) {
          const MagneticFieldFrd& this_ = static_cast<const MagneticFieldFrd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MagneticFieldFrd::ByteSizeLong() const {
          const MagneticFieldFrd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.MagneticFieldFrd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float forward_gauss = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_forward_gauss()) != 0) {
              total_size += 5;
            }
            // float right_gauss = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_right_gauss()) != 0) {
              total_size += 5;
            }
            // float down_gauss = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_down_gauss()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MagneticFieldFrd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MagneticFieldFrd*>(&to_msg);
  auto& from = static_cast<const MagneticFieldFrd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.MagneticFieldFrd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_forward_gauss()) != 0) {
    _this->_impl_.forward_gauss_ = from._impl_.forward_gauss_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_right_gauss()) != 0) {
    _this->_impl_.right_gauss_ = from._impl_.right_gauss_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_down_gauss()) != 0) {
    _this->_impl_.down_gauss_ = from._impl_.down_gauss_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MagneticFieldFrd::CopyFrom(const MagneticFieldFrd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.MagneticFieldFrd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MagneticFieldFrd::InternalSwap(MagneticFieldFrd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.down_gauss_)
      + sizeof(MagneticFieldFrd::_impl_.down_gauss_)
      - PROTOBUF_FIELD_OFFSET(MagneticFieldFrd, _impl_.forward_gauss_)>(
          reinterpret_cast<char*>(&_impl_.forward_gauss_),
          reinterpret_cast<char*>(&other->_impl_.forward_gauss_));
}

::google::protobuf::Metadata MagneticFieldFrd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Imu::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Imu>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Imu, _impl_._has_bits_);
};

Imu::Imu(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Imu)
}
inline PROTOBUF_NDEBUG_INLINE Imu::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::Imu& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Imu::Imu(
    ::google::protobuf::Arena* arena,
    const Imu& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Imu* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.acceleration_frd_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AccelerationFrd>(
                              arena, *from._impl_.acceleration_frd_)
                        : nullptr;
  _impl_.angular_velocity_frd_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AngularVelocityFrd>(
                              arena, *from._impl_.angular_velocity_frd_)
                        : nullptr;
  _impl_.magnetic_field_frd_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::MagneticFieldFrd>(
                              arena, *from._impl_.magnetic_field_frd_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_us_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_us_),
           offsetof(Impl_, temperature_degc_) -
               offsetof(Impl_, timestamp_us_) +
               sizeof(Impl_::temperature_degc_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.Imu)
}
inline PROTOBUF_NDEBUG_INLINE Imu::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Imu::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, acceleration_frd_),
           0,
           offsetof(Impl_, temperature_degc_) -
               offsetof(Impl_, acceleration_frd_) +
               sizeof(Impl_::temperature_degc_));
}
Imu::~Imu() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Imu)
  SharedDtor(*this);
}
inline void Imu::SharedDtor(MessageLite& self) {
  Imu& this_ = static_cast<Imu&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.acceleration_frd_;
  delete this_._impl_.angular_velocity_frd_;
  delete this_._impl_.magnetic_field_frd_;
  this_._impl_.~Impl_();
}

inline void* Imu::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Imu(arena);
}
constexpr auto Imu::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Imu),
                                            alignof(Imu));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Imu::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Imu_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Imu::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Imu>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Imu::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Imu>(), &Imu::ByteSizeLong,
            &Imu::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Imu, _impl_._cached_size_),
        false,
    },
    &Imu::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Imu::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2> Imu::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Imu, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Imu>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.telemetry.AccelerationFrd acceleration_frd = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Imu, _impl_.acceleration_frd_)}},
    // .mavsdk.rpc.telemetry.AngularVelocityFrd angular_velocity_frd = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Imu, _impl_.angular_velocity_frd_)}},
    // .mavsdk.rpc.telemetry.MagneticFieldFrd magnetic_field_frd = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Imu, _impl_.magnetic_field_frd_)}},
    // float temperature_degc = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Imu, _impl_.temperature_degc_)}},
    // uint64 timestamp_us = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Imu, _impl_.timestamp_us_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Imu, _impl_.timestamp_us_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.AccelerationFrd acceleration_frd = 1;
    {PROTOBUF_FIELD_OFFSET(Imu, _impl_.acceleration_frd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.AngularVelocityFrd angular_velocity_frd = 2;
    {PROTOBUF_FIELD_OFFSET(Imu, _impl_.angular_velocity_frd_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.telemetry.MagneticFieldFrd magnetic_field_frd = 3;
    {PROTOBUF_FIELD_OFFSET(Imu, _impl_.magnetic_field_frd_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float temperature_degc = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Imu, _impl_.temperature_degc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint64 timestamp_us = 5;
    {PROTOBUF_FIELD_OFFSET(Imu, _impl_.timestamp_us_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AccelerationFrd>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::AngularVelocityFrd>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::MagneticFieldFrd>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Imu::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Imu)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.acceleration_frd_ != nullptr);
      _impl_.acceleration_frd_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.angular_velocity_frd_ != nullptr);
      _impl_.angular_velocity_frd_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.magnetic_field_frd_ != nullptr);
      _impl_.magnetic_field_frd_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_us_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.temperature_degc_) -
      reinterpret_cast<char*>(&_impl_.timestamp_us_)) + sizeof(_impl_.temperature_degc_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Imu::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Imu& this_ = static_cast<const Imu&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Imu::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Imu& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Imu)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mavsdk.rpc.telemetry.AccelerationFrd acceleration_frd = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.acceleration_frd_, this_._impl_.acceleration_frd_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.AngularVelocityFrd angular_velocity_frd = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.angular_velocity_frd_, this_._impl_.angular_velocity_frd_->GetCachedSize(), target,
                stream);
          }

          // .mavsdk.rpc.telemetry.MagneticFieldFrd magnetic_field_frd = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.magnetic_field_frd_, this_._impl_.magnetic_field_frd_->GetCachedSize(), target,
                stream);
          }

          // float temperature_degc = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_temperature_degc()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_temperature_degc(), target);
          }

          // uint64 timestamp_us = 5;
          if (this_._internal_timestamp_us() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_timestamp_us(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Imu)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Imu::ByteSizeLong(const MessageLite& base) {
          const Imu& this_ = static_cast<const Imu&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Imu::ByteSizeLong() const {
          const Imu& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Imu)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .mavsdk.rpc.telemetry.AccelerationFrd acceleration_frd = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.acceleration_frd_);
            }
            // .mavsdk.rpc.telemetry.AngularVelocityFrd angular_velocity_frd = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angular_velocity_frd_);
            }
            // .mavsdk.rpc.telemetry.MagneticFieldFrd magnetic_field_frd = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.magnetic_field_frd_);
            }
          }
           {
            // uint64 timestamp_us = 5;
            if (this_._internal_timestamp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_us());
            }
            // float temperature_degc = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_temperature_degc()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Imu::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Imu*>(&to_msg);
  auto& from = static_cast<const Imu&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Imu)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.acceleration_frd_ != nullptr);
      if (_this->_impl_.acceleration_frd_ == nullptr) {
        _this->_impl_.acceleration_frd_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AccelerationFrd>(arena, *from._impl_.acceleration_frd_);
      } else {
        _this->_impl_.acceleration_frd_->MergeFrom(*from._impl_.acceleration_frd_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.angular_velocity_frd_ != nullptr);
      if (_this->_impl_.angular_velocity_frd_ == nullptr) {
        _this->_impl_.angular_velocity_frd_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::AngularVelocityFrd>(arena, *from._impl_.angular_velocity_frd_);
      } else {
        _this->_impl_.angular_velocity_frd_->MergeFrom(*from._impl_.angular_velocity_frd_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.magnetic_field_frd_ != nullptr);
      if (_this->_impl_.magnetic_field_frd_ == nullptr) {
        _this->_impl_.magnetic_field_frd_ =
            ::google::protobuf::Message::CopyConstruct<::mavsdk::rpc::telemetry::MagneticFieldFrd>(arena, *from._impl_.magnetic_field_frd_);
      } else {
        _this->_impl_.magnetic_field_frd_->MergeFrom(*from._impl_.magnetic_field_frd_);
      }
    }
  }
  if (from._internal_timestamp_us() != 0) {
    _this->_impl_.timestamp_us_ = from._impl_.timestamp_us_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_temperature_degc()) != 0) {
    _this->_impl_.temperature_degc_ = from._impl_.temperature_degc_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Imu::CopyFrom(const Imu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Imu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Imu::InternalSwap(Imu* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Imu, _impl_.temperature_degc_)
      + sizeof(Imu::_impl_.temperature_degc_)
      - PROTOBUF_FIELD_OFFSET(Imu, _impl_.acceleration_frd_)>(
          reinterpret_cast<char*>(&_impl_.acceleration_frd_),
          reinterpret_cast<char*>(&other->_impl_.acceleration_frd_));
}

::google::protobuf::Metadata Imu::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GpsGlobalOrigin::_Internal {
 public:
};

GpsGlobalOrigin::GpsGlobalOrigin(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.GpsGlobalOrigin)
}
GpsGlobalOrigin::GpsGlobalOrigin(
    ::google::protobuf::Arena* arena, const GpsGlobalOrigin& from)
    : GpsGlobalOrigin(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GpsGlobalOrigin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GpsGlobalOrigin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, altitude_m_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::altitude_m_));
}
GpsGlobalOrigin::~GpsGlobalOrigin() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.GpsGlobalOrigin)
  SharedDtor(*this);
}
inline void GpsGlobalOrigin::SharedDtor(MessageLite& self) {
  GpsGlobalOrigin& this_ = static_cast<GpsGlobalOrigin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GpsGlobalOrigin::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GpsGlobalOrigin(arena);
}
constexpr auto GpsGlobalOrigin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GpsGlobalOrigin),
                                            alignof(GpsGlobalOrigin));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GpsGlobalOrigin::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GpsGlobalOrigin_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GpsGlobalOrigin::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GpsGlobalOrigin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GpsGlobalOrigin::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GpsGlobalOrigin>(), &GpsGlobalOrigin::ByteSizeLong,
            &GpsGlobalOrigin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_._cached_size_),
        false,
    },
    &GpsGlobalOrigin::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GpsGlobalOrigin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> GpsGlobalOrigin::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::GpsGlobalOrigin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.latitude_deg_)}},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.longitude_deg_)}},
    // float altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.altitude_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GpsGlobalOrigin::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.GpsGlobalOrigin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.altitude_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.altitude_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GpsGlobalOrigin::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GpsGlobalOrigin& this_ = static_cast<const GpsGlobalOrigin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GpsGlobalOrigin::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GpsGlobalOrigin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.GpsGlobalOrigin)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_latitude_deg(), target);
          }

          // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_longitude_deg(), target);
          }

          // float altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_altitude_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.GpsGlobalOrigin)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GpsGlobalOrigin::ByteSizeLong(const MessageLite& base) {
          const GpsGlobalOrigin& this_ = static_cast<const GpsGlobalOrigin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GpsGlobalOrigin::ByteSizeLong() const {
          const GpsGlobalOrigin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.GpsGlobalOrigin)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
              total_size += 9;
            }
            // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
              total_size += 9;
            }
            // float altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GpsGlobalOrigin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GpsGlobalOrigin*>(&to_msg);
  auto& from = static_cast<const GpsGlobalOrigin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.GpsGlobalOrigin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_latitude_deg()) != 0) {
    _this->_impl_.latitude_deg_ = from._impl_.latitude_deg_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude_deg()) != 0) {
    _this->_impl_.longitude_deg_ = from._impl_.longitude_deg_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_m()) != 0) {
    _this->_impl_.altitude_m_ = from._impl_.altitude_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GpsGlobalOrigin::CopyFrom(const GpsGlobalOrigin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.GpsGlobalOrigin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GpsGlobalOrigin::InternalSwap(GpsGlobalOrigin* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.altitude_m_)
      + sizeof(GpsGlobalOrigin::_impl_.altitude_m_)
      - PROTOBUF_FIELD_OFFSET(GpsGlobalOrigin, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata GpsGlobalOrigin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Altitude::_Internal {
 public:
};

Altitude::Altitude(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Altitude)
}
Altitude::Altitude(
    ::google::protobuf::Arena* arena, const Altitude& from)
    : Altitude(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Altitude::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Altitude::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, altitude_monotonic_m_),
           0,
           offsetof(Impl_, bottom_clearance_m_) -
               offsetof(Impl_, altitude_monotonic_m_) +
               sizeof(Impl_::bottom_clearance_m_));
}
Altitude::~Altitude() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Altitude)
  SharedDtor(*this);
}
inline void Altitude::SharedDtor(MessageLite& self) {
  Altitude& this_ = static_cast<Altitude&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Altitude::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Altitude(arena);
}
constexpr auto Altitude::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Altitude),
                                            alignof(Altitude));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Altitude::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Altitude_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Altitude::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Altitude>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Altitude::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Altitude>(), &Altitude::ByteSizeLong,
            &Altitude::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Altitude, _impl_._cached_size_),
        false,
    },
    &Altitude::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Altitude::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> Altitude::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Altitude>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float altitude_monotonic_m = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_monotonic_m_)}},
    // float altitude_amsl_m = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_amsl_m_)}},
    // float altitude_local_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_local_m_)}},
    // float altitude_relative_m = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_relative_m_)}},
    // float altitude_terrain_m = 5 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_terrain_m_)}},
    // float bottom_clearance_m = 6 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Altitude, _impl_.bottom_clearance_m_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float altitude_monotonic_m = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_monotonic_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_amsl_m = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_amsl_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_local_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_local_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_relative_m = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_relative_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_terrain_m = 5 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_terrain_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float bottom_clearance_m = 6 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Altitude, _impl_.bottom_clearance_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Altitude::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Altitude)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.altitude_monotonic_m_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bottom_clearance_m_) -
      reinterpret_cast<char*>(&_impl_.altitude_monotonic_m_)) + sizeof(_impl_.bottom_clearance_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Altitude::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Altitude& this_ = static_cast<const Altitude&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Altitude::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Altitude& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Altitude)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float altitude_monotonic_m = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_monotonic_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_altitude_monotonic_m(), target);
          }

          // float altitude_amsl_m = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_amsl_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_altitude_amsl_m(), target);
          }

          // float altitude_local_m = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_local_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_altitude_local_m(), target);
          }

          // float altitude_relative_m = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_relative_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_altitude_relative_m(), target);
          }

          // float altitude_terrain_m = 5 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_terrain_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_altitude_terrain_m(), target);
          }

          // float bottom_clearance_m = 6 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_bottom_clearance_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_bottom_clearance_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Altitude)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Altitude::ByteSizeLong(const MessageLite& base) {
          const Altitude& this_ = static_cast<const Altitude&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Altitude::ByteSizeLong() const {
          const Altitude& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Altitude)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float altitude_monotonic_m = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_monotonic_m()) != 0) {
              total_size += 5;
            }
            // float altitude_amsl_m = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_amsl_m()) != 0) {
              total_size += 5;
            }
            // float altitude_local_m = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_local_m()) != 0) {
              total_size += 5;
            }
            // float altitude_relative_m = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_relative_m()) != 0) {
              total_size += 5;
            }
            // float altitude_terrain_m = 5 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_altitude_terrain_m()) != 0) {
              total_size += 5;
            }
            // float bottom_clearance_m = 6 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_bottom_clearance_m()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Altitude::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Altitude*>(&to_msg);
  auto& from = static_cast<const Altitude&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Altitude)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_monotonic_m()) != 0) {
    _this->_impl_.altitude_monotonic_m_ = from._impl_.altitude_monotonic_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_amsl_m()) != 0) {
    _this->_impl_.altitude_amsl_m_ = from._impl_.altitude_amsl_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_local_m()) != 0) {
    _this->_impl_.altitude_local_m_ = from._impl_.altitude_local_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_relative_m()) != 0) {
    _this->_impl_.altitude_relative_m_ = from._impl_.altitude_relative_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_altitude_terrain_m()) != 0) {
    _this->_impl_.altitude_terrain_m_ = from._impl_.altitude_terrain_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_bottom_clearance_m()) != 0) {
    _this->_impl_.bottom_clearance_m_ = from._impl_.bottom_clearance_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Altitude::CopyFrom(const Altitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Altitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Altitude::InternalSwap(Altitude* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Altitude, _impl_.bottom_clearance_m_)
      + sizeof(Altitude::_impl_.bottom_clearance_m_)
      - PROTOBUF_FIELD_OFFSET(Altitude, _impl_.altitude_monotonic_m_)>(
          reinterpret_cast<char*>(&_impl_.altitude_monotonic_m_),
          reinterpret_cast<char*>(&other->_impl_.altitude_monotonic_m_));
}

::google::protobuf::Metadata Altitude::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Wind::_Internal {
 public:
};

Wind::Wind(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.Wind)
}
Wind::Wind(
    ::google::protobuf::Arena* arena, const Wind& from)
    : Wind(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Wind::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Wind::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wind_x_ned_m_s_),
           0,
           offsetof(Impl_, vertical_wind_speed_accuracy_m_s_) -
               offsetof(Impl_, wind_x_ned_m_s_) +
               sizeof(Impl_::vertical_wind_speed_accuracy_m_s_));
}
Wind::~Wind() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.Wind)
  SharedDtor(*this);
}
inline void Wind::SharedDtor(MessageLite& self) {
  Wind& this_ = static_cast<Wind&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Wind::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Wind(arena);
}
constexpr auto Wind::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Wind),
                                            alignof(Wind));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Wind::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Wind_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Wind::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Wind>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Wind::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Wind>(), &Wind::ByteSizeLong,
            &Wind::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Wind, _impl_._cached_size_),
        false,
    },
    &Wind::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Wind::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> Wind::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::Wind>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float vertical_wind_speed_accuracy_m_s = 8 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.vertical_wind_speed_accuracy_m_s_)}},
    // float wind_x_ned_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_x_ned_m_s_)}},
    // float wind_y_ned_m_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_y_ned_m_s_)}},
    // float wind_z_ned_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_z_ned_m_s_)}},
    // float horizontal_variability_stddev_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.horizontal_variability_stddev_m_s_)}},
    // float vertical_variability_stddev_m_s = 5 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.vertical_variability_stddev_m_s_)}},
    // float wind_altitude_msl_m = 6 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_altitude_msl_m_)}},
    // float horizontal_wind_speed_accuracy_m_s = 7 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Wind, _impl_.horizontal_wind_speed_accuracy_m_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float wind_x_ned_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_x_ned_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float wind_y_ned_m_s = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_y_ned_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float wind_z_ned_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_z_ned_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float horizontal_variability_stddev_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.horizontal_variability_stddev_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vertical_variability_stddev_m_s = 5 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.vertical_variability_stddev_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float wind_altitude_msl_m = 6 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_altitude_msl_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float horizontal_wind_speed_accuracy_m_s = 7 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.horizontal_wind_speed_accuracy_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vertical_wind_speed_accuracy_m_s = 8 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(Wind, _impl_.vertical_wind_speed_accuracy_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Wind::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.Wind)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.wind_x_ned_m_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.vertical_wind_speed_accuracy_m_s_) -
      reinterpret_cast<char*>(&_impl_.wind_x_ned_m_s_)) + sizeof(_impl_.vertical_wind_speed_accuracy_m_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Wind::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Wind& this_ = static_cast<const Wind&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Wind::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Wind& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.Wind)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float wind_x_ned_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_wind_x_ned_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_wind_x_ned_m_s(), target);
          }

          // float wind_y_ned_m_s = 2 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_wind_y_ned_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_wind_y_ned_m_s(), target);
          }

          // float wind_z_ned_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_wind_z_ned_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_wind_z_ned_m_s(), target);
          }

          // float horizontal_variability_stddev_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_horizontal_variability_stddev_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_horizontal_variability_stddev_m_s(), target);
          }

          // float vertical_variability_stddev_m_s = 5 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_vertical_variability_stddev_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_vertical_variability_stddev_m_s(), target);
          }

          // float wind_altitude_msl_m = 6 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_wind_altitude_msl_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_wind_altitude_msl_m(), target);
          }

          // float horizontal_wind_speed_accuracy_m_s = 7 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_horizontal_wind_speed_accuracy_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_horizontal_wind_speed_accuracy_m_s(), target);
          }

          // float vertical_wind_speed_accuracy_m_s = 8 [(.mavsdk.options.default_value) = "NaN"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_vertical_wind_speed_accuracy_m_s()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_vertical_wind_speed_accuracy_m_s(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.Wind)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Wind::ByteSizeLong(const MessageLite& base) {
          const Wind& this_ = static_cast<const Wind&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Wind::ByteSizeLong() const {
          const Wind& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.Wind)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float wind_x_ned_m_s = 1 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_wind_x_ned_m_s()) != 0) {
              total_size += 5;
            }
            // float wind_y_ned_m_s = 2 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_wind_y_ned_m_s()) != 0) {
              total_size += 5;
            }
            // float wind_z_ned_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_wind_z_ned_m_s()) != 0) {
              total_size += 5;
            }
            // float horizontal_variability_stddev_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_horizontal_variability_stddev_m_s()) != 0) {
              total_size += 5;
            }
            // float vertical_variability_stddev_m_s = 5 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_vertical_variability_stddev_m_s()) != 0) {
              total_size += 5;
            }
            // float wind_altitude_msl_m = 6 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_wind_altitude_msl_m()) != 0) {
              total_size += 5;
            }
            // float horizontal_wind_speed_accuracy_m_s = 7 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_horizontal_wind_speed_accuracy_m_s()) != 0) {
              total_size += 5;
            }
            // float vertical_wind_speed_accuracy_m_s = 8 [(.mavsdk.options.default_value) = "NaN"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_vertical_wind_speed_accuracy_m_s()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Wind::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Wind*>(&to_msg);
  auto& from = static_cast<const Wind&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.Wind)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_wind_x_ned_m_s()) != 0) {
    _this->_impl_.wind_x_ned_m_s_ = from._impl_.wind_x_ned_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_wind_y_ned_m_s()) != 0) {
    _this->_impl_.wind_y_ned_m_s_ = from._impl_.wind_y_ned_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_wind_z_ned_m_s()) != 0) {
    _this->_impl_.wind_z_ned_m_s_ = from._impl_.wind_z_ned_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_horizontal_variability_stddev_m_s()) != 0) {
    _this->_impl_.horizontal_variability_stddev_m_s_ = from._impl_.horizontal_variability_stddev_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_vertical_variability_stddev_m_s()) != 0) {
    _this->_impl_.vertical_variability_stddev_m_s_ = from._impl_.vertical_variability_stddev_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_wind_altitude_msl_m()) != 0) {
    _this->_impl_.wind_altitude_msl_m_ = from._impl_.wind_altitude_msl_m_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_horizontal_wind_speed_accuracy_m_s()) != 0) {
    _this->_impl_.horizontal_wind_speed_accuracy_m_s_ = from._impl_.horizontal_wind_speed_accuracy_m_s_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_vertical_wind_speed_accuracy_m_s()) != 0) {
    _this->_impl_.vertical_wind_speed_accuracy_m_s_ = from._impl_.vertical_wind_speed_accuracy_m_s_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Wind::CopyFrom(const Wind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.Wind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Wind::InternalSwap(Wind* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Wind, _impl_.vertical_wind_speed_accuracy_m_s_)
      + sizeof(Wind::_impl_.vertical_wind_speed_accuracy_m_s_)
      - PROTOBUF_FIELD_OFFSET(Wind, _impl_.wind_x_ned_m_s_)>(
          reinterpret_cast<char*>(&_impl_.wind_x_ned_m_s_),
          reinterpret_cast<char*>(&other->_impl_.wind_x_ned_m_s_));
}

::google::protobuf::Metadata Wind::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TelemetryResult::_Internal {
 public:
};

TelemetryResult::TelemetryResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.telemetry.TelemetryResult)
}
inline PROTOBUF_NDEBUG_INLINE TelemetryResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mavsdk::rpc::telemetry::TelemetryResult& from_msg)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

TelemetryResult::TelemetryResult(
    ::google::protobuf::Arena* arena,
    const TelemetryResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TelemetryResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.telemetry.TelemetryResult)
}
inline PROTOBUF_NDEBUG_INLINE TelemetryResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void TelemetryResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
TelemetryResult::~TelemetryResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.telemetry.TelemetryResult)
  SharedDtor(*this);
}
inline void TelemetryResult::SharedDtor(MessageLite& self) {
  TelemetryResult& this_ = static_cast<TelemetryResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_str_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TelemetryResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TelemetryResult(arena);
}
constexpr auto TelemetryResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TelemetryResult),
                                            alignof(TelemetryResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TelemetryResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TelemetryResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TelemetryResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TelemetryResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TelemetryResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TelemetryResult>(), &TelemetryResult::ByteSizeLong,
            &TelemetryResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TelemetryResult, _impl_._cached_size_),
        false,
    },
    &TelemetryResult::kDescriptorMethods,
    &descriptor_table_telemetry_2ftelemetry_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TelemetryResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> TelemetryResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mavsdk::rpc::telemetry::TelemetryResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TelemetryResult, _impl_.result_str_)}},
    // .mavsdk.rpc.telemetry.TelemetryResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TelemetryResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TelemetryResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.telemetry.TelemetryResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(TelemetryResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(TelemetryResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\12\0\0\0\0\0"
    "mavsdk.rpc.telemetry.TelemetryResult"
    "result_str"
  }},
};

PROTOBUF_NOINLINE void TelemetryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.telemetry.TelemetryResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TelemetryResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TelemetryResult& this_ = static_cast<const TelemetryResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TelemetryResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TelemetryResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.telemetry.TelemetryResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .mavsdk.rpc.telemetry.TelemetryResult.Result result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_result(), target);
          }

          // string result_str = 2;
          if (!this_._internal_result_str().empty()) {
            const std::string& _s = this_._internal_result_str();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.telemetry.TelemetryResult.result_str");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.telemetry.TelemetryResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TelemetryResult::ByteSizeLong(const MessageLite& base) {
          const TelemetryResult& this_ = static_cast<const TelemetryResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TelemetryResult::ByteSizeLong() const {
          const TelemetryResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.telemetry.TelemetryResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string result_str = 2;
            if (!this_._internal_result_str().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result_str());
            }
            // .mavsdk.rpc.telemetry.TelemetryResult.Result result = 1;
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TelemetryResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TelemetryResult*>(&to_msg);
  auto& from = static_cast<const TelemetryResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.telemetry.TelemetryResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TelemetryResult::CopyFrom(const TelemetryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.telemetry.TelemetryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TelemetryResult::InternalSwap(TelemetryResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata TelemetryResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace telemetry
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_telemetry_2ftelemetry_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
