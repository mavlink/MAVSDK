// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: server_utility/server_utility.proto
// Protobuf C++ Version: 5.29.1

#ifndef server_5futility_2fserver_5futility_2eproto_2epb_2eh
#define server_5futility_2fserver_5futility_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_server_5futility_2fserver_5futility_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_server_5futility_2fserver_5futility_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_server_5futility_2fserver_5futility_2eproto;
namespace mavsdk {
namespace rpc {
namespace server_utility {
class SendStatusTextRequest;
struct SendStatusTextRequestDefaultTypeInternal;
extern SendStatusTextRequestDefaultTypeInternal _SendStatusTextRequest_default_instance_;
class SendStatusTextResponse;
struct SendStatusTextResponseDefaultTypeInternal;
extern SendStatusTextResponseDefaultTypeInternal _SendStatusTextResponse_default_instance_;
class ServerUtilityResult;
struct ServerUtilityResultDefaultTypeInternal;
extern ServerUtilityResultDefaultTypeInternal _ServerUtilityResult_default_instance_;
}  // namespace server_utility
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace server_utility {
enum ServerUtilityResult_Result : int {
  ServerUtilityResult_Result_RESULT_UNKNOWN = 0,
  ServerUtilityResult_Result_RESULT_SUCCESS = 1,
  ServerUtilityResult_Result_RESULT_NO_SYSTEM = 2,
  ServerUtilityResult_Result_RESULT_CONNECTION_ERROR = 3,
  ServerUtilityResult_Result_RESULT_INVALID_ARGUMENT = 4,
  ServerUtilityResult_Result_ServerUtilityResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ServerUtilityResult_Result_ServerUtilityResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ServerUtilityResult_Result_IsValid(int value);
extern const uint32_t ServerUtilityResult_Result_internal_data_[];
constexpr ServerUtilityResult_Result ServerUtilityResult_Result_Result_MIN = static_cast<ServerUtilityResult_Result>(0);
constexpr ServerUtilityResult_Result ServerUtilityResult_Result_Result_MAX = static_cast<ServerUtilityResult_Result>(4);
constexpr int ServerUtilityResult_Result_Result_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ServerUtilityResult_Result_descriptor();
template <typename T>
const std::string& ServerUtilityResult_Result_Name(T value) {
  static_assert(std::is_same<T, ServerUtilityResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return ServerUtilityResult_Result_Name(static_cast<ServerUtilityResult_Result>(value));
}
template <>
inline const std::string& ServerUtilityResult_Result_Name(ServerUtilityResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ServerUtilityResult_Result_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ServerUtilityResult_Result_Parse(absl::string_view name, ServerUtilityResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerUtilityResult_Result>(
      ServerUtilityResult_Result_descriptor(), name, value);
}
enum StatusTextType : int {
  STATUS_TEXT_TYPE_DEBUG = 0,
  STATUS_TEXT_TYPE_INFO = 1,
  STATUS_TEXT_TYPE_NOTICE = 2,
  STATUS_TEXT_TYPE_WARNING = 3,
  STATUS_TEXT_TYPE_ERROR = 4,
  STATUS_TEXT_TYPE_CRITICAL = 5,
  STATUS_TEXT_TYPE_ALERT = 6,
  STATUS_TEXT_TYPE_EMERGENCY = 7,
  StatusTextType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StatusTextType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StatusTextType_IsValid(int value);
extern const uint32_t StatusTextType_internal_data_[];
constexpr StatusTextType StatusTextType_MIN = static_cast<StatusTextType>(0);
constexpr StatusTextType StatusTextType_MAX = static_cast<StatusTextType>(7);
constexpr int StatusTextType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
StatusTextType_descriptor();
template <typename T>
const std::string& StatusTextType_Name(T value) {
  static_assert(std::is_same<T, StatusTextType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StatusTextType_Name().");
  return StatusTextType_Name(static_cast<StatusTextType>(value));
}
template <>
inline const std::string& StatusTextType_Name(StatusTextType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StatusTextType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool StatusTextType_Parse(absl::string_view name, StatusTextType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusTextType>(
      StatusTextType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ServerUtilityResult final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.server_utility.ServerUtilityResult) */ {
 public:
  inline ServerUtilityResult() : ServerUtilityResult(nullptr) {}
  ~ServerUtilityResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServerUtilityResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServerUtilityResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServerUtilityResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline ServerUtilityResult(const ServerUtilityResult& from) : ServerUtilityResult(nullptr, from) {}
  inline ServerUtilityResult(ServerUtilityResult&& from) noexcept
      : ServerUtilityResult(nullptr, std::move(from)) {}
  inline ServerUtilityResult& operator=(const ServerUtilityResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerUtilityResult& operator=(ServerUtilityResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerUtilityResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerUtilityResult* internal_default_instance() {
    return reinterpret_cast<const ServerUtilityResult*>(
        &_ServerUtilityResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ServerUtilityResult& a, ServerUtilityResult& b) { a.Swap(&b); }
  inline void Swap(ServerUtilityResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerUtilityResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerUtilityResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServerUtilityResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServerUtilityResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServerUtilityResult& from) { ServerUtilityResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServerUtilityResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.server_utility.ServerUtilityResult"; }

 protected:
  explicit ServerUtilityResult(::google::protobuf::Arena* arena);
  ServerUtilityResult(::google::protobuf::Arena* arena, const ServerUtilityResult& from);
  ServerUtilityResult(::google::protobuf::Arena* arena, ServerUtilityResult&& from) noexcept
      : ServerUtilityResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Result = ServerUtilityResult_Result;
  static constexpr Result RESULT_UNKNOWN = ServerUtilityResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = ServerUtilityResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = ServerUtilityResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_CONNECTION_ERROR = ServerUtilityResult_Result_RESULT_CONNECTION_ERROR;
  static constexpr Result RESULT_INVALID_ARGUMENT = ServerUtilityResult_Result_RESULT_INVALID_ARGUMENT;
  static inline bool Result_IsValid(int value) {
    return ServerUtilityResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = ServerUtilityResult_Result_Result_MIN;
  static constexpr Result Result_MAX = ServerUtilityResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = ServerUtilityResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return ServerUtilityResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return ServerUtilityResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return ServerUtilityResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.server_utility.ServerUtilityResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::server_utility::ServerUtilityResult_Result result() const;
  void set_result(::mavsdk::rpc::server_utility::ServerUtilityResult_Result value);

  private:
  ::mavsdk::rpc::server_utility::ServerUtilityResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::server_utility::ServerUtilityResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.server_utility.ServerUtilityResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ServerUtilityResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5futility_2fserver_5futility_2eproto;
};
// -------------------------------------------------------------------

class SendStatusTextRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.server_utility.SendStatusTextRequest) */ {
 public:
  inline SendStatusTextRequest() : SendStatusTextRequest(nullptr) {}
  ~SendStatusTextRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendStatusTextRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendStatusTextRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendStatusTextRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendStatusTextRequest(const SendStatusTextRequest& from) : SendStatusTextRequest(nullptr, from) {}
  inline SendStatusTextRequest(SendStatusTextRequest&& from) noexcept
      : SendStatusTextRequest(nullptr, std::move(from)) {}
  inline SendStatusTextRequest& operator=(const SendStatusTextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendStatusTextRequest& operator=(SendStatusTextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendStatusTextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendStatusTextRequest* internal_default_instance() {
    return reinterpret_cast<const SendStatusTextRequest*>(
        &_SendStatusTextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SendStatusTextRequest& a, SendStatusTextRequest& b) { a.Swap(&b); }
  inline void Swap(SendStatusTextRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendStatusTextRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendStatusTextRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendStatusTextRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendStatusTextRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendStatusTextRequest& from) { SendStatusTextRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendStatusTextRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.server_utility.SendStatusTextRequest"; }

 protected:
  explicit SendStatusTextRequest(::google::protobuf::Arena* arena);
  SendStatusTextRequest(::google::protobuf::Arena* arena, const SendStatusTextRequest& from);
  SendStatusTextRequest(::google::protobuf::Arena* arena, SendStatusTextRequest&& from) noexcept
      : SendStatusTextRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTextFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // string text = 2;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // .mavsdk.rpc.server_utility.StatusTextType type = 1;
  void clear_type() ;
  ::mavsdk::rpc::server_utility::StatusTextType type() const;
  void set_type(::mavsdk::rpc::server_utility::StatusTextType value);

  private:
  ::mavsdk::rpc::server_utility::StatusTextType _internal_type() const;
  void _internal_set_type(::mavsdk::rpc::server_utility::StatusTextType value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.server_utility.SendStatusTextRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendStatusTextRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr text_;
    int type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5futility_2fserver_5futility_2eproto;
};
// -------------------------------------------------------------------

class SendStatusTextResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mavsdk.rpc.server_utility.SendStatusTextResponse) */ {
 public:
  inline SendStatusTextResponse() : SendStatusTextResponse(nullptr) {}
  ~SendStatusTextResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendStatusTextResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendStatusTextResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendStatusTextResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendStatusTextResponse(const SendStatusTextResponse& from) : SendStatusTextResponse(nullptr, from) {}
  inline SendStatusTextResponse(SendStatusTextResponse&& from) noexcept
      : SendStatusTextResponse(nullptr, std::move(from)) {}
  inline SendStatusTextResponse& operator=(const SendStatusTextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendStatusTextResponse& operator=(SendStatusTextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendStatusTextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendStatusTextResponse* internal_default_instance() {
    return reinterpret_cast<const SendStatusTextResponse*>(
        &_SendStatusTextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SendStatusTextResponse& a, SendStatusTextResponse& b) { a.Swap(&b); }
  inline void Swap(SendStatusTextResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendStatusTextResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendStatusTextResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendStatusTextResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendStatusTextResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendStatusTextResponse& from) { SendStatusTextResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendStatusTextResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mavsdk.rpc.server_utility.SendStatusTextResponse"; }

 protected:
  explicit SendStatusTextResponse(::google::protobuf::Arena* arena);
  SendStatusTextResponse(::google::protobuf::Arena* arena, const SendStatusTextResponse& from);
  SendStatusTextResponse(::google::protobuf::Arena* arena, SendStatusTextResponse&& from) noexcept
      : SendStatusTextResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServerUtilityResultFieldNumber = 1,
  };
  // .mavsdk.rpc.server_utility.ServerUtilityResult server_utility_result = 1;
  bool has_server_utility_result() const;
  void clear_server_utility_result() ;
  const ::mavsdk::rpc::server_utility::ServerUtilityResult& server_utility_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::server_utility::ServerUtilityResult* release_server_utility_result();
  ::mavsdk::rpc::server_utility::ServerUtilityResult* mutable_server_utility_result();
  void set_allocated_server_utility_result(::mavsdk::rpc::server_utility::ServerUtilityResult* value);
  void unsafe_arena_set_allocated_server_utility_result(::mavsdk::rpc::server_utility::ServerUtilityResult* value);
  ::mavsdk::rpc::server_utility::ServerUtilityResult* unsafe_arena_release_server_utility_result();

  private:
  const ::mavsdk::rpc::server_utility::ServerUtilityResult& _internal_server_utility_result() const;
  ::mavsdk::rpc::server_utility::ServerUtilityResult* _internal_mutable_server_utility_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.server_utility.SendStatusTextResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendStatusTextResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::server_utility::ServerUtilityResult* server_utility_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_5futility_2fserver_5futility_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SendStatusTextRequest

// .mavsdk.rpc.server_utility.StatusTextType type = 1;
inline void SendStatusTextRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::mavsdk::rpc::server_utility::StatusTextType SendStatusTextRequest::type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.server_utility.SendStatusTextRequest.type)
  return _internal_type();
}
inline void SendStatusTextRequest::set_type(::mavsdk::rpc::server_utility::StatusTextType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.server_utility.SendStatusTextRequest.type)
}
inline ::mavsdk::rpc::server_utility::StatusTextType SendStatusTextRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::server_utility::StatusTextType>(_impl_.type_);
}
inline void SendStatusTextRequest::_internal_set_type(::mavsdk::rpc::server_utility::StatusTextType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// string text = 2;
inline void SendStatusTextRequest::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
}
inline const std::string& SendStatusTextRequest::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.server_utility.SendStatusTextRequest.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendStatusTextRequest::set_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.server_utility.SendStatusTextRequest.text)
}
inline std::string* SendStatusTextRequest::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.server_utility.SendStatusTextRequest.text)
  return _s;
}
inline const std::string& SendStatusTextRequest::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void SendStatusTextRequest::_internal_set_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(value, GetArena());
}
inline std::string* SendStatusTextRequest::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* SendStatusTextRequest::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.server_utility.SendStatusTextRequest.text)
  return _impl_.text_.Release();
}
inline void SendStatusTextRequest::set_allocated_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.server_utility.SendStatusTextRequest.text)
}

// -------------------------------------------------------------------

// SendStatusTextResponse

// .mavsdk.rpc.server_utility.ServerUtilityResult server_utility_result = 1;
inline bool SendStatusTextResponse::has_server_utility_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.server_utility_result_ != nullptr);
  return value;
}
inline void SendStatusTextResponse::clear_server_utility_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_utility_result_ != nullptr) _impl_.server_utility_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::server_utility::ServerUtilityResult& SendStatusTextResponse::_internal_server_utility_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mavsdk::rpc::server_utility::ServerUtilityResult* p = _impl_.server_utility_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::server_utility::ServerUtilityResult&>(::mavsdk::rpc::server_utility::_ServerUtilityResult_default_instance_);
}
inline const ::mavsdk::rpc::server_utility::ServerUtilityResult& SendStatusTextResponse::server_utility_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.server_utility.SendStatusTextResponse.server_utility_result)
  return _internal_server_utility_result();
}
inline void SendStatusTextResponse::unsafe_arena_set_allocated_server_utility_result(::mavsdk::rpc::server_utility::ServerUtilityResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_utility_result_);
  }
  _impl_.server_utility_result_ = reinterpret_cast<::mavsdk::rpc::server_utility::ServerUtilityResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.server_utility.SendStatusTextResponse.server_utility_result)
}
inline ::mavsdk::rpc::server_utility::ServerUtilityResult* SendStatusTextResponse::release_server_utility_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::server_utility::ServerUtilityResult* released = _impl_.server_utility_result_;
  _impl_.server_utility_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mavsdk::rpc::server_utility::ServerUtilityResult* SendStatusTextResponse::unsafe_arena_release_server_utility_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.server_utility.SendStatusTextResponse.server_utility_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::server_utility::ServerUtilityResult* temp = _impl_.server_utility_result_;
  _impl_.server_utility_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::server_utility::ServerUtilityResult* SendStatusTextResponse::_internal_mutable_server_utility_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_utility_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mavsdk::rpc::server_utility::ServerUtilityResult>(GetArena());
    _impl_.server_utility_result_ = reinterpret_cast<::mavsdk::rpc::server_utility::ServerUtilityResult*>(p);
  }
  return _impl_.server_utility_result_;
}
inline ::mavsdk::rpc::server_utility::ServerUtilityResult* SendStatusTextResponse::mutable_server_utility_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::mavsdk::rpc::server_utility::ServerUtilityResult* _msg = _internal_mutable_server_utility_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.server_utility.SendStatusTextResponse.server_utility_result)
  return _msg;
}
inline void SendStatusTextResponse::set_allocated_server_utility_result(::mavsdk::rpc::server_utility::ServerUtilityResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.server_utility_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.server_utility_result_ = reinterpret_cast<::mavsdk::rpc::server_utility::ServerUtilityResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.server_utility.SendStatusTextResponse.server_utility_result)
}

// -------------------------------------------------------------------

// ServerUtilityResult

// .mavsdk.rpc.server_utility.ServerUtilityResult.Result result = 1;
inline void ServerUtilityResult::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::server_utility::ServerUtilityResult_Result ServerUtilityResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.server_utility.ServerUtilityResult.result)
  return _internal_result();
}
inline void ServerUtilityResult::set_result(::mavsdk::rpc::server_utility::ServerUtilityResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.server_utility.ServerUtilityResult.result)
}
inline ::mavsdk::rpc::server_utility::ServerUtilityResult_Result ServerUtilityResult::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::mavsdk::rpc::server_utility::ServerUtilityResult_Result>(_impl_.result_);
}
inline void ServerUtilityResult::_internal_set_result(::mavsdk::rpc::server_utility::ServerUtilityResult_Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string result_str = 2;
inline void ServerUtilityResult::clear_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& ServerUtilityResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.server_utility.ServerUtilityResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ServerUtilityResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.server_utility.ServerUtilityResult.result_str)
}
inline std::string* ServerUtilityResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.server_utility.ServerUtilityResult.result_str)
  return _s;
}
inline const std::string& ServerUtilityResult::_internal_result_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_str_.Get();
}
inline void ServerUtilityResult::_internal_set_result_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* ServerUtilityResult::_internal_mutable_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* ServerUtilityResult::release_result_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.server_utility.ServerUtilityResult.result_str)
  return _impl_.result_str_.Release();
}
inline void ServerUtilityResult::set_allocated_result_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.result_str_.IsDefault()) {
    _impl_.result_str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.server_utility.ServerUtilityResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace server_utility
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::server_utility::ServerUtilityResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::server_utility::ServerUtilityResult_Result>() {
  return ::mavsdk::rpc::server_utility::ServerUtilityResult_Result_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::server_utility::StatusTextType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::server_utility::StatusTextType>() {
  return ::mavsdk::rpc::server_utility::StatusTextType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // server_5futility_2fserver_5futility_2eproto_2epb_2eh
