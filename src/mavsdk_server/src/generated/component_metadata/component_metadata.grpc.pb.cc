// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: component_metadata/component_metadata.proto

#include "component_metadata/component_metadata.pb.h"
#include "component_metadata/component_metadata.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace mavsdk {
namespace rpc {
namespace component_metadata {

static const char* ComponentMetadataService_method_names[] = {
  "/mavsdk.rpc.component_metadata.ComponentMetadataService/RequestComponent",
  "/mavsdk.rpc.component_metadata.ComponentMetadataService/RequestAutopilotComponent",
  "/mavsdk.rpc.component_metadata.ComponentMetadataService/SubscribeMetadataAvailable",
  "/mavsdk.rpc.component_metadata.ComponentMetadataService/GetMetadata",
};

std::unique_ptr< ComponentMetadataService::Stub> ComponentMetadataService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ComponentMetadataService::Stub> stub(new ComponentMetadataService::Stub(channel, options));
  return stub;
}

ComponentMetadataService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_RequestComponent_(ComponentMetadataService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RequestAutopilotComponent_(ComponentMetadataService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SubscribeMetadataAvailable_(ComponentMetadataService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_GetMetadata_(ComponentMetadataService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ComponentMetadataService::Stub::RequestComponent(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestComponentRequest& request, ::mavsdk::rpc::component_metadata::RequestComponentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mavsdk::rpc::component_metadata::RequestComponentRequest, ::mavsdk::rpc::component_metadata::RequestComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_RequestComponent_, context, request, response);
}

void ComponentMetadataService::Stub::async::RequestComponent(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestComponentRequest* request, ::mavsdk::rpc::component_metadata::RequestComponentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mavsdk::rpc::component_metadata::RequestComponentRequest, ::mavsdk::rpc::component_metadata::RequestComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RequestComponent_, context, request, response, std::move(f));
}

void ComponentMetadataService::Stub::async::RequestComponent(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestComponentRequest* request, ::mavsdk::rpc::component_metadata::RequestComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RequestComponent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::component_metadata::RequestComponentResponse>* ComponentMetadataService::Stub::PrepareAsyncRequestComponentRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestComponentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mavsdk::rpc::component_metadata::RequestComponentResponse, ::mavsdk::rpc::component_metadata::RequestComponentRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_RequestComponent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::component_metadata::RequestComponentResponse>* ComponentMetadataService::Stub::AsyncRequestComponentRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestComponentRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRequestComponentRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ComponentMetadataService::Stub::RequestAutopilotComponent(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest& request, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_RequestAutopilotComponent_, context, request, response);
}

void ComponentMetadataService::Stub::async::RequestAutopilotComponent(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest* request, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RequestAutopilotComponent_, context, request, response, std::move(f));
}

void ComponentMetadataService::Stub::async::RequestAutopilotComponent(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest* request, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RequestAutopilotComponent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse>* ComponentMetadataService::Stub::PrepareAsyncRequestAutopilotComponentRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_RequestAutopilotComponent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse>* ComponentMetadataService::Stub::AsyncRequestAutopilotComponentRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRequestAutopilotComponentRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>* ComponentMetadataService::Stub::SubscribeMetadataAvailableRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>::Create(channel_.get(), rpcmethod_SubscribeMetadataAvailable_, context, request);
}

void ComponentMetadataService::Stub::async::SubscribeMetadataAvailable(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_SubscribeMetadataAvailable_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>* ComponentMetadataService::Stub::AsyncSubscribeMetadataAvailableRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>::Create(channel_.get(), cq, rpcmethod_SubscribeMetadataAvailable_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>* ComponentMetadataService::Stub::PrepareAsyncSubscribeMetadataAvailableRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>::Create(channel_.get(), cq, rpcmethod_SubscribeMetadataAvailable_, context, request, false, nullptr);
}

::grpc::Status ComponentMetadataService::Stub::GetMetadata(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::GetMetadataRequest& request, ::mavsdk::rpc::component_metadata::GetMetadataResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mavsdk::rpc::component_metadata::GetMetadataRequest, ::mavsdk::rpc::component_metadata::GetMetadataResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetMetadata_, context, request, response);
}

void ComponentMetadataService::Stub::async::GetMetadata(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::GetMetadataRequest* request, ::mavsdk::rpc::component_metadata::GetMetadataResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mavsdk::rpc::component_metadata::GetMetadataRequest, ::mavsdk::rpc::component_metadata::GetMetadataResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMetadata_, context, request, response, std::move(f));
}

void ComponentMetadataService::Stub::async::GetMetadata(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::GetMetadataRequest* request, ::mavsdk::rpc::component_metadata::GetMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMetadata_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::component_metadata::GetMetadataResponse>* ComponentMetadataService::Stub::PrepareAsyncGetMetadataRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mavsdk::rpc::component_metadata::GetMetadataResponse, ::mavsdk::rpc::component_metadata::GetMetadataRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetMetadata_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::component_metadata::GetMetadataResponse>* ComponentMetadataService::Stub::AsyncGetMetadataRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::component_metadata::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetMetadataRaw(context, request, cq);
  result->StartCall();
  return result;
}

ComponentMetadataService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ComponentMetadataService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ComponentMetadataService::Service, ::mavsdk::rpc::component_metadata::RequestComponentRequest, ::mavsdk::rpc::component_metadata::RequestComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ComponentMetadataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mavsdk::rpc::component_metadata::RequestComponentRequest* req,
             ::mavsdk::rpc::component_metadata::RequestComponentResponse* resp) {
               return service->RequestComponent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ComponentMetadataService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ComponentMetadataService::Service, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ComponentMetadataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest* req,
             ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse* resp) {
               return service->RequestAutopilotComponent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ComponentMetadataService_method_names[2],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< ComponentMetadataService::Service, ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest, ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>(
          [](ComponentMetadataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest* req,
             ::grpc::ServerWriter<::mavsdk::rpc::component_metadata::MetadataAvailableResponse>* writer) {
               return service->SubscribeMetadataAvailable(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ComponentMetadataService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ComponentMetadataService::Service, ::mavsdk::rpc::component_metadata::GetMetadataRequest, ::mavsdk::rpc::component_metadata::GetMetadataResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ComponentMetadataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mavsdk::rpc::component_metadata::GetMetadataRequest* req,
             ::mavsdk::rpc::component_metadata::GetMetadataResponse* resp) {
               return service->GetMetadata(ctx, req, resp);
             }, this)));
}

ComponentMetadataService::Service::~Service() {
}

::grpc::Status ComponentMetadataService::Service::RequestComponent(::grpc::ServerContext* context, const ::mavsdk::rpc::component_metadata::RequestComponentRequest* request, ::mavsdk::rpc::component_metadata::RequestComponentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ComponentMetadataService::Service::RequestAutopilotComponent(::grpc::ServerContext* context, const ::mavsdk::rpc::component_metadata::RequestAutopilotComponentRequest* request, ::mavsdk::rpc::component_metadata::RequestAutopilotComponentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ComponentMetadataService::Service::SubscribeMetadataAvailable(::grpc::ServerContext* context, const ::mavsdk::rpc::component_metadata::SubscribeMetadataAvailableRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::component_metadata::MetadataAvailableResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ComponentMetadataService::Service::GetMetadata(::grpc::ServerContext* context, const ::mavsdk::rpc::component_metadata::GetMetadataRequest* request, ::mavsdk::rpc::component_metadata::GetMetadataResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace mavsdk
}  // namespace rpc
}  // namespace component_metadata

